#chars #@<:

KeyWord And |
KeyWord ByRef |
KeyWord Case |Switch/Select...Case...EndSwitch
KeyWord Const |Declare a variable, a constant, or create an array.
KeyWord ContinueCase |Abort the code in the current Case block and continue with the code in the next Case block when in a Select or Switch structure.
KeyWord ContinueLoop |Continue a While/Do/For loop.
KeyWord Default |Keyword value use in function call.
KeyWord Dim |Declare a variable, a constant, or create an array.
KeyWord Do |Do...Until Loop based on an expression.
KeyWord Else |If...ElseIf...Else...EndIf - Conditionally run statements. 
KeyWord ElseIf |If...ElseIf...Else...EndIf - Conditionally run statements. 
KeyWord EndFunc |Func...Return...EndFunc
KeyWord EndIf |If...ElseIf...Else...EndIf 
KeyWord EndSelect |Select...Case...EndSelect
KeyWord EndSwitch |Switch...Case...EndSwitch
KeyWord EndWith |With...EndWith
KeyWord Enum |Enumerates constants.
KeyWord Exit |Terminates the script.
KeyWord ExitLoop |Terminate a While/Do/For loop.
KeyWord False |Boolean value for use in logical expressions.
KeyWord For |Loop For...To...Step...Next, For...In...Next
KeyWord Func |Func...Return...EndFunc - Defines a user-defined function that takes zero or more arguments and optionally returns a result.
KeyWord Global |Declare a variable, a constant, or create an array.
KeyWord If |If...ElseIf...Else...EndIf - Conditionally run statements. 
KeyWord In |
KeyWord Local |Declare a variable, a constant, or create an array.
KeyWord Next |For...In...Next
KeyWord Not |
KeyWord Null |
KeyWord Or |
KeyWord ReDim |Resize an existing array.
KeyWord Return |Func...Return...EndFunc - Defines a user-defined function that takes zero or more arguments and optionally returns a result.
KeyWord Select |Select...Case...EndSelect - Conditionally run statements.
KeyWord Static |Declare a static variable or create a static array.
KeyWord Step |For...To...Step...Next
KeyWord Switch |Switch...Case...EndSwitch - Conditionally run statements.
KeyWord Then |If...ElseIf...Else...EndIf
KeyWord To |For...To...Step...Next
KeyWord True |Boolean value for use in logical expressions.
KeyWord Until |Do...Until Loop based on an expression.
KeyWord Volatile |Function qualifier.
KeyWord WEnd |While...WEnd
KeyWord While |While...WEnd - Loop based on an expression.
KeyWord With |With...EndWith - Used to reduce long references to dot-accessible type of variables.
KeyWord #ce |Specify that an entire section of script should be commented out.
KeyWord #comments-end |Specify that an entire section of script should be commented out.
KeyWord #comments-start |Specify that an entire section of script should be commented out.
KeyWord #cs |Specify that an entire section of script should be commented out.
KeyWord #include |Includes a file in the current script.
KeyWord #include-once |Specifies that the current file should only be included once.
KeyWord #NoAutoIt3Execute |Legt fest, dass das aktuell kompilierte Script nicht mit /AutoIt3ExecuteLine oder /AutoIt3ExecuteScript ausgeführt werden kann.
KeyWord #NoTrayIcon |Indicates that the AutoIt tray icon will not be shown when the script starts.
KeyWord #OnAutoItStartRegister |Registers a function to be called when AutoIt starts.
KeyWord #RequireAdmin |Specifies that the current script requires full administrator rights to run.
KeyWord #EndRegion |
KeyWord #forcedef |setting while checking
KeyWord #forceref |setting while checking
KeyWord #ignorefunc |setting while checking
KeyWord #pragma |A special directive for controlling aspects of how the script is compiled.
KeyWord #Region |

AutoIt3Wrapper #Autoit3Wrapper_Testing |(Y/N) Skip Tidy, Au3Stripper and cvsWrapper for speed while testing. Default N
AutoIt3Wrapper #AutoIt3Wrapper_ShowProgress |(Y/N) Show ProgressWindow during Compile. Default Y
AutoIt3Wrapper #AutoIt3Wrapper_UseX64 |(Y/N) Use AutoIt3_x64 or Aut2Exe_x64. Default N
AutoIt3Wrapper #AutoIt3Wrapper_Version |(B/P) Use Beta or Production for AutoIt3 and Aut2Eex. Default is P
AutoIt3Wrapper #AutoIt3Wrapper_Run_Debug_Mode |(Y/N) Run Script with console debugging. Default N
AutoIt3Wrapper #AutoIt3Wrapper_Run_Debug |(On/Off) Switch debugging on/off
AutoIt3Wrapper #AutoIt3Wrapper_Run_SciTE_Minimized |(Y/N) Minimize SciTE while script is running. Default N
AutoIt3Wrapper #AutoIt3Wrapper_Run_SciTE_OutputPane_Minimized |(Y/N) Minimize SciTE output pane at run time. Default N
AutoIt3Wrapper #AutoIt3Wrapper_Autoit3Dir |Optionally override the AutoIt3 install directory to use.
AutoIt3Wrapper #AutoIt3Wrapper_Aut2exe |Optionally override the Aut2exe.exe to use for this script
AutoIt3Wrapper #AutoIt3Wrapper_AutoIt3 |Optionally override the Autoit3.exe to use for this script
AutoIt3Wrapper #AutoIt3Wrapper_Icon |Filename of the Ico file to use for the compiled exe
AutoIt3Wrapper #AutoIt3Wrapper_OutFile |Target exe/a3x filename.
AutoIt3Wrapper #AutoIt3Wrapper_OutFile_Type |exe Standalone executable (Default) | a3x Tokenised AutoIt3 code file
AutoIt3Wrapper #AutoIt3Wrapper_OutFile_X64 |Target exe filename for X64 compile.
AutoIt3Wrapper #AutoIt3Wrapper_Compression |Compression parameter 0-4 0 Low 2 normal 4 High. Default 2
AutoIt3Wrapper #AutoIt3Wrapper_UseUpx |(Y/N) Compress output program. Default Y
AutoIt3Wrapper #AutoIt3Wrapper_UPX_Parameters |Override the default settings for UPX.
AutoIt3Wrapper #AutoIt3Wrapper_Change2CUI |(Y/N) Change output program to CUI in stead of GUI. Default N
AutoIt3Wrapper #AutoIt3Wrapper_Compile_both |(Y/N) Compile both X86 and X64 in one run. Default N
AutoIt3Wrapper #AutoIt3Wrapper_Res_Comment |Comment field
AutoIt3Wrapper #AutoIt3Wrapper_Res_Description |Description field
AutoIt3Wrapper #AutoIt3Wrapper_Res_Fileversion |File Version
AutoIt3Wrapper #AutoIt3Wrapper_Res_FileVersion_AutoIncrement |(Y/N/P) AutoIncrement FileVersion. Default N
AutoIt3Wrapper #AutoIt3Wrapper_Res_Fileversion_First_Increment |(Y/N) AutoIncrement Y Before | N After compile. Default N
AutoIt3Wrapper #AutoIt3Wrapper_Res_HiDpi |(Y/N) Compile for high DPI. Default N
AutoIt3Wrapper #AutoIt3Wrapper_Res_ProductVersion |Product Version
AutoIt3Wrapper #AutoIt3Wrapper_Res_Language |Resource Language code . Default 2057 English (United Kingdom)
AutoIt3Wrapper #AutoIt3Wrapper_Res_LegalCopyright |Copyright field
AutoIt3Wrapper #AutoIt3Wrapper_res_requestedExecutionLevel |asInvoker, highestAvailable, requireAdministrator or None (remove the trsutInfo section). Default is the setting from Aut2Exe (asInvoker)
AutoIt3Wrapper #AutoIt3Wrapper_res_Compatibility |Vista/Windows7/win7/win8/win81/win10 allowed separated by a comma (Default Win10)
AutoIt3Wrapper #AutoIt3Wrapper_Res_SaveSource |(Y/N) Save a copy of the Script_source in the EXE resources. Default N
AutoIt3Wrapper #AutoIt3Wrapper_Res_Field |Free format fieldname|fieldvalue Add extra ICO files to the resources which can be used with TraySetIcon(@ScriptFullPath, 5) etc
AutoIt3Wrapper #AutoIt3Wrapper_Res_Icon_Add | Filename[,ResNumber[,LanguageCode]] of ICO to be added. Add extra ICO files to the resources
AutoIt3Wrapper #AutoIt3Wrapper_Res_File_Add | Filename[,Section [,ResName[,LanguageCode]]] to be added. Add files to the resources - can be compressed
AutoIt3Wrapper #AutoIt3Wrapper_Res_Remove | ResType, ResName [, LanguageCode] Remove resources
AutoIt3Wrapper #AutoIt3Wrapper_Run_Tidy |(Y/N) Run Tidy before compilation. Default N
AutoIt3Wrapper #AutoIt3Wrapper_Tidy_Stop_OnError |(Y/N) Continue when only Warnings. Default Y
AutoIt3Wrapper #AutoIt3Wrapper_Run_Au3Stripper |(Y/N) Run Au3Stripper before compilation. default N
AutoIt3Wrapper #Au3Stripper_Parameters | Au3Stripper parameters...see SciTE4AutoIt3 Helpfile for options
AutoIt3Wrapper #AutoIt3Wrapper_Run_AU3Check |(Y/N) Run au3check before compilation. Default Y
AutoIt3Wrapper #AutoIt3Wrapper_AU3Check_Parameters |Au3Check parameters...see SciTE4AutoIt3 Helpfile for options
AutoIt3Wrapper #AutoIt3Wrapper_AU3Check_Stop_OnWarning |(Y/N) Continue/Stop on Warnings.(Default N)
AutoIt3Wrapper #AutoIt3Wrapper_Versioning |(Y/N/V) Run Versioning to update the script source. default N. V only run when fileversion is increased by #AutoIt3Wrapper_Res_FileVersion_AutoIncrement.
AutoIt3Wrapper #AutoIt3Wrapper_Versioning_Parameters | /NoPrompt : Will skip the Comments prompt - /Comments : Text to added in the Comments. It can also contain the below variables.
AutoIt3Wrapper #AutoIt3Wrapper_Run_Stop_OnError |(Y/N) Stop when Returncode <> 0
AutoIt3Wrapper #AutoIt3Wrapper_Run_Before_Admin |(Y/N) Run subsequent Run_Before statements with #RequireAdmin. Default N
AutoIt3Wrapper #AutoIt3Wrapper_Run_After_Admin |(Y/N) Run subsequent Run_After statements with #RequireAdmin. Default N
AutoIt3Wrapper #AutoIt3Wrapper_Run_Before |process to run before compilation - multiple records will be processed in sequence
AutoIt3Wrapper #AutoIt3Wrapper_Run_After |process to run after compilation - multiple records will be processed in sequence
AutoIt3Wrapper #AutoIt3Wrapper_Add_Constants |Add the needed standard constant include files. Will only run one time.

Macro @AppDataCommonDir |Path to Application Data 
Macro @AppDataDir |Path to current user's Roaming Application Data 
Macro @AutoItExe |The full path and filename of the AutoIt executable currently running. For compiled scripts it is the path of the compiled script; for .a3x and .au3 files it is the path of the interpreter running the file. 
Macro @AutoItPID |Process identifier (PID) of the current script. 
Macro @AutoItVersion |Version number of AutoIt such as 3.3.10.2 
Macro @AutoItX64 |Returns 1 if the script is running under the native x64 version of AutoIt. 
Macro @COM_EventObj |Object the COM event is being fired on. Only valid in a COM event function. 
Macro @CommonFilesDir |Path to Common Files folder 
Macro @Compiled |Returns 1 if script is a compiled executable or an .a3x file; returns 0 if an .au3 file. 
Macro @ComputerName |Computer's network name. 
Macro @ComSpec |Value of %COMSPEC%, the SPECified secondary COMmand interpreter; primary for command line uses, e.g. Run(@ComSpec & " /k help | more") 
Macro @CPUArch |Returns "X86" when the CPU is a 32-bit CPU and "X64" when the CPU is 64-bit. 
Macro @CR |Carriage return, Chr(13); occasionally used for line breaks. 
Macro @CRLF |@CR & @LF; typically used for line breaks. 
Macro @DesktopCommonDir |Path to Desktop 
Macro @DesktopDepth |Depth of the primary display in bits per pixel. 
Macro @DesktopDir |Path to current user's Desktop 
Macro @DesktopHeight |Height of the primary display in pixels. (Vertical resolution) 
Macro @DesktopRefresh |Refresh rate of the primary display in hertz. 
Macro @DesktopWidth |Width of the primary display in pixels. (Horizontal resolution) 
Macro @DocumentsCommonDir |Path to Documents 
Macro @error |Status of the error flag. See the function SetError(). 
Macro @exitCode |Exit code as set by Exit statement. 
Macro @exitMethod |Exit method. See the function OnAutoItExitRegister(). 
Macro @extended |Extended function return - used in certain functions such as StringReplace(). 
Macro @FavoritesCommonDir |Path to Favorites 
Macro @FavoritesDir |Path to current user's Favorites 
Macro @GUI_CtrlHandle |Last click GUI Control handle. Only valid in an event Function. See the GUICtrlSetOnEvent() function. 
Macro @GUI_CtrlId |Last click GUI Control identifier. Only valid in an event Function. See the GUICtrlSetOnEvent() function. 
Macro @GUI_DragFile |Filename of the file being dropped. Only valid on Drop Event. See the GUISetOnEvent() function. 
Macro @GUI_DragId |Drag GUI Control identifier. Only valid on Drop Event. See the GUISetOnEvent() function. 
Macro @GUI_DropId |Drop GUI Control identifier. Only valid on Drop Event. See the GUISetOnEvent() function. 
Macro @GUI_WinHandle |Last click GUI window handle. Only valid in an event Function. See the GUICtrlSetOnEvent() function. 
Macro @HomeDrive |Drive letter of drive containing current user's home directory. 
Macro @HomePath |Directory part of current user's home directory. To get the full path, use in conjunction with @HomeDrive. 
Macro @HomeShare |Server and share name containing current user's home directory. 
Macro @HotKeyPressed |Last hotkey pressed. See the HotKeySet() function. 
Macro @HOUR |Hours value of clock in 24-hour format. Range is 00 to 23 
Macro @IPAddress1 |IP address of first network adapter. Tends to return 127.0.0.1 on some computers. 
Macro @IPAddress2 |IP address of second network adapter. Returns 0.0.0.0 if not applicable. 
Macro @IPAddress3 |IP address of third network adapter. Returns 0.0.0.0 if not applicable. 
Macro @IPAddress4 |IP address of fourth network adapter. Returns 0.0.0.0 if not applicable. 
Macro @KBLayout |Returns code denoting Keyboard Layout. See Appendix for possible values. 
Macro @LF |Line feed, Chr(10); occasionally used for line breaks. 
Macro @LocalAppDataDir |Path to current user's Local Application Data 
Macro @LogonDNSDomain |Logon DNS Domain. 
Macro @LogonDomain |Logon Domain. 
Macro @LogonServer |Logon server. 
Macro @MDAY |Current day of month. Range is 01 to 31 
Macro @MIN |Minutes value of clock. Range is 00 to 59 
Macro @MON |Current month. Range is 01 to 12 
Macro @MSEC |Milliseconds value of clock. Range is 000 to 999. The update frequency of this value depends on the timer resolution of the hardware and may not update every millisecond. 
Macro @MUILang |Returns code denoting Multi Language if available (Vista is OK by default). See Appendix for possible values. 
Macro @MyDocumentsDir |Path to My Documents target 
Macro @NumParams |Number of parameters used in calling the user function. 
Macro @OSArch |Returns one of the following: "X86", "IA64", "X64" - this is the architecture type of the currently running operating system. 
Macro @OSBuild |Returns the OS build number. For example, Windows 2003 Server returns 3790 
Macro @OSLang |Returns code denoting OS Language. See Appendix for possible values. 
Macro @OSServicePack |Service pack info in the form of "Service Pack 3". 
Macro @OSType |Returns "WIN32_NT" for XP/2003/Vista/2008/Win7/2008R2/Win8/2012/Win8.1/2012R2. 
Macro @OSVersion |Returns one of the following: "WIN_10", "WIN_81", "WIN_8", "WIN_7", "WIN_VISTA", "WIN_XP", "WIN_XPe", "WIN_2016", "WIN_2012R2", "WIN_2012", "WIN_2008R2", "WIN_2008", "WIN_2003"". 
Macro @ProgramFilesDir |Path to Program Files folder 
Macro @ProgramsCommonDir |Path to Start Menu's Programs folder 
Macro @ProgramsDir |Path to current user's Programs (folder on Start Menu) 
Macro @ScriptDir |Directory containing the running script. Only includes a trailing backslash when the script is located in the root of a drive. 
Macro @ScriptFullPath |Equivalent to @ScriptDir & "\" & @ScriptName 
Macro @ScriptLineNumber |Line number being executed - useful for debug statements (e.g. location of function call). Only significant in uncompiled scripts - note that #include files return their internal line numbering 
Macro @ScriptName |Filename of the running script. 
Macro @SEC |Seconds value of clock. Range is 00 to 59 
Macro @StartMenuCommonDir |Path to Start Menu folder 
Macro @StartMenuDir |Path to current user's Start Menu 
Macro @StartupCommonDir |Path to Startup folder 
Macro @StartupDir |current user's Startup folder 
Macro @SW_DISABLE |Disables the window. 
Macro @SW_ENABLE |Enables the window. 
Macro @SW_HIDE |Hides the window and activates another window. 
Macro @SW_LOCK |Lock the window to avoid repainting. 
Macro @SW_MAXIMIZE |Activates the window and displays it as a maximized window. 
Macro @SW_MINIMIZE |Minimizes the specified window and activates the next top-level window in the Z order. 
Macro @SW_RESTORE |Activates and displays the window. If the window is minimized or maximized, the system restores it to its original size and position. An application should specify this flag when restoring a minimized window. 
Macro @SW_SHOW |Activates the window and displays it in its current size and position. 
Macro @SW_SHOWDEFAULT |Sets the show state based on the SW_ value specified by the program that started the application. 
Macro @SW_SHOWMAXIMIZED |Activates the window and displays it as a maximized window. 
Macro @SW_SHOWMINIMIZED |Activates the window and displays it as a minimized window. 
Macro @SW_SHOWMINNOACTIVE |Displays the window as a minimized window. This value is similar to @SW_SHOWMINIMIZED, except the window is not activated. 
Macro @SW_SHOWNA |Displays the window in its current size and position. This value is similar to @SW_SHOW, except the window is not activated. 
Macro @SW_SHOWNOACTIVATE |Displays a window in its most recent size and position. This value is similar to @SW_SHOWNORMAL, except the window is not activated. 
Macro @SW_SHOWNORMAL |Activates and displays a window. If the window is minimized or maximized, the system restores it to its original size and position. An application should specify this flag when displaying the window for the first time. 
Macro @SW_UNLOCK |Unlock window to allow painting. 
Macro @SystemDir |Path to the Windows' System (or System32) folder. 
Macro @TAB |Tab character, Chr(9) 
Macro @TempDir |Path to the temporary files folder. 
Macro @TRAY_ID |Last clicked item identifier during a TraySetOnEvent() or TrayItemSetOnEvent() action. 
Macro @TrayIconFlashing |Returns 1 if tray icon is flashing; otherwise, returns 0. 
Macro @TrayIconVisible |Returns 1 if tray icon is visible; otherwise, returns 0. 
Macro @UserName |ID of the currently logged on user. 
Macro @UserProfileDir |Path to current user's Profile folder. 
Macro @WDAY |Numeric day of week. Range is 1 to 7 which corresponds to Sunday through Saturday. 
Macro @WindowsDir |Path to Windows folder 
Macro @WorkingDir |Current/active working directory. Only includes a trailing backslash when the script is located in the root of a drive. 
Macro @YDAY |Current day of year. Range is 001 to 366 (or 001 to 365 if not a leap year) 
Macro @YEAR |Current four-digit year 

Include <APIComConstants.au3>
Include <APIConstants.au3>
Include <APIDiagConstants.au3>
Include <APIDlgConstants.au3>
Include <APIErrorsConstants.au3>
Include <APIFilesConstants.au3>
Include <APIGdiConstants.au3>
Include <APILocaleConstants.au3>
Include <APIMiscConstants.au3>
Include <APIProcConstants.au3>
Include <APIRegConstants.au3>
Include <APIResConstants.au3>
Include <APIShellExConstants.au3>
Include <APIShPathConstants.au3>
Include <APISysConstants.au3>
Include <APIThemeConstants.au3>
Include <Array.au3>
Include <AutoItConstants.au3>
Include <AVIConstants.au3>
Include <BorderConstants.au3>
Include <ButtonConstants.au3>
Include <Clipboard.au3>
Include <Color.au3>
Include <ColorConstants.au3>
Include <ComboConstants.au3>
Include <Constants.au3>
Include <Crypt.au3>
Include <Date.au3>
Include <DateTimeConstants.au3>
Include <Debug.au3>
Include <DirConstants.au3>
Include <EditConstants.au3>
Include <EventLog.au3>
Include <Excel.au3>
Include <ExcelConstants.au3>
Include <File.au3>
Include <FileConstants.au3>
Include <FontConstants.au3>
Include <FrameConstants.au3>
Include <FTPEx.au3>
Include <GDIPlus.au3>
Include <GDIPlusConstants.au3>
Include <GuiAVI.au3>
Include <GuiButton.au3>
Include <GuiComboBox.au3>
Include <GuiComboBoxEx.au3>
Include <GUIConstants.au3>
Include <GUIConstantsEx.au3>
Include <GuiDateTimePicker.au3>
Include <GuiEdit.au3>
Include <GuiHeader.au3>
Include <GuiImageList.au3>
Include <GuiIPAddress.au3>
Include <GuiListBox.au3>
Include <GuiListView.au3>
Include <GuiMenu.au3>
Include <GuiMonthCal.au3>
Include <GuiReBar.au3>
Include <GuiRichEdit.au3>
Include <GuiScrollBars.au3>
Include <GuiSlider.au3>
Include <GuiStatusBar.au3>
Include <GuiTab.au3>
Include <GuiToolbar.au3>
Include <GuiToolTip.au3>
Include <GuiTreeView.au3>
Include <HeaderConstants.au3>
Include <IE.au3>
Include <ImageListConstants.au3>
Include <Inet.au3>
Include <InetConstants.au3>
Include <IPAddressConstants.au3>
Include <ListBoxConstants.au3>
Include <ListViewConstants.au3>
Include <Math.au3>
Include <MathConstants.au3>
Include <Memory.au3>
Include <MemoryConstants.au3>
Include <MenuConstants.au3>
Include <Misc.au3>
Include <MsgBoxConstants.au3>
Include <NamedPipes.au3>
Include <NetShare.au3>
Include <NTSTATUSConstants.au3>
Include <Process.au3>
Include <ProcessConstants.au3>
Include <ProgressConstants.au3>
Include <RebarConstants.au3>
Include <RichEditConstants.au3>
Include <ScreenCapture.au3>
Include <ScrollBarConstants.au3>
Include <ScrollBarsConstants.au3>
Include <Security.au3>
Include <SecurityConstants.au3>
Include <SendMessage.au3>
Include <SliderConstants.au3>
Include <Sound.au3>
Include <SQLite.au3>
Include <SQLite.dll.au3>
Include <StaticConstants.au3>
Include <StatusBarConstants.au3>
Include <String.au3>
Include <StringConstants.au3>
Include <StructureConstants.au3>
Include <TabConstants.au3>
Include <Timers.au3>
Include <ToolbarConstants.au3>
Include <ToolTipConstants.au3>
Include <TrayConstants.au3>
Include <TreeViewConstants.au3>
Include <UDFGlobalID.au3>
Include <UpDownConstants.au3>
Include <Visa.au3>
Include <WinAPI.au3>
Include <WinAPICom.au3>
Include <WinAPIConstants.au3>
Include <WinAPIDiag.au3>
Include <WinAPIDlg.au3>
Include <WinAPIError.au3>
Include <WinAPIEx.au3>
Include <WinAPIFiles.au3>
Include <WinAPIGdi.au3>
Include <WinAPIInternals.au3>
Include <WinAPIlangConstants.au3>
Include <WinAPILocale.au3>
Include <WinAPIMisc.au3>
Include <WinAPIProc.au3>
Include <WinAPIReg.au3>
Include <WinAPIRes.au3>
Include <WinAPIShellEx.au3>
Include <WinAPIShPath.au3>
Include <WinAPISys.au3>
Include <WinAPIsysinfoConstants.au3>
Include <WinAPITheme.au3>
Include <WinAPIvkeysConstants.au3>
Include <WindowsConstants.au3>
Include <WinNet.au3>
Include <Word.au3>
Include <WordConstants.au3>

Function Abs(expression) |Calculates the absolute value of a number
Function ACos(expression) |Calculates the arcCosine of a number
Function AdlibRegister("function", [time = 250]) |Registers an Adlib function
Function AdlibUnRegister(["function"]) |Unregisters an adlib function
Function Asc("char") |Returns the ASCII code of a character
Function AscW("char") |Returns the unicode code of a character
Function ASin(expression) |Calculates the arcsine of a number
Function Assign("varname", "data" [flag = 0]) |Assigns a variable by name with the data
Function ATan(expression) |Calculates the arctangent of a number
Function AutoItSetOption("option" [, param]) |Changes the operation of various AutoIt functions/parameters
Function AutoItWinGetTitle |Retrieves the title of the AutoIt window.
Function AutoItWinSetTitle("newtitle") |Changes the title of the AutoIt window
Function Beep([Frequency = 500 [, Duration = 1000]]) |Plays back a beep to the user
Function Binary(expression) |Returns the binary representation of an expression
Function BinaryLen(binary) |Returns the number of bytes in a binary variant
Function BinaryMid(binary, start [, count]) |Extracts a number of bytes from a binary variant
Function BinaryToString(expression [, flag = 1]) |Converts a binary variant into a string
Function BitAND(value1, value2 [, value n]) |Performs a bitwise AND operation
Function BitNOT(value) |Performs a bitwise NOT operation
Function BitOR(value1, value2 [, value n]) |Performs a bitwise OR operation
Function BitRotate(value [, shift = 1 [, size = "W"]]) |Performs a bit shifting operation, with rotation
Function BitShift(value, shift) |Performs a bit shifting operation
Function BitXOR(XOR) |Performs a bitwise exclusive OR operation(value1, value2 [, value n])
Function BlockInput(flag) |Disable/enable the mouse and keyboard
Function Break(mode) |Enables or disables the users' ability to exit a script from the tray icon menu
Function Call("function" [, param1 [, param2 [, paramN]]]) |Calls a user-defined or built-in function contained in first parameter
Function CDTray("drive", "status") |Opens or closes the CD tray
Function Ceiling(expression) |Returns a number rounded up to the next integer
Function Chr(ASCIIcode) |Returns a character corresponding to an ASCII code
Function ChrW(UNICODEcode) |Returns a character corresponding to a unicode code
Function ClipGet |Retrieves text from the clipboard.
Function ClipPut("value") |Writes text to the clipboard
Function ConsoleRead([peek = False [, binary = False]]) |Read from the STDIN stream of the AutoIt script process
Function ConsoleWrite("data") |Writes data to the STDOUT stream. Some text editors can read this stream as can other programs which may be expecting data on this stream
Function ConsoleWriteError("data") |Writes data to the STDERR stream. Some text editors can read this stream as can other programs which may be expecting data on this stream
Function ControlClick("title", "text", controlID [, button = "left" [, clicks = 1 [, x [, y]]]]) |Sends a mouse click command to a given control
Function ControlCommand("title", "text", controlID, "command" [, "option"]) |Sends a command to a control
Function ControlDisable("title", "text", controlID) |Disables or "grays-out" a control
Function ControlEnable("title", "text", controlID) |Enables a "grayed-out" control
Function ControlFocus("title", "text", controlID) |Sets input focus to a given control on a window
Function ControlGetFocus("title" [, "text"]) |Returns the ControlRef# of the control that has keyboard focus within a specified window
Function ControlGetHandle("title", "text", controlID) |Retrieves the internal handle of a control
Function ControlGetPos("title", "text", controlID) |Retrieves the position and size of a control relative to its window
Function ControlGetText("title", "text", controlID) |Retrieves text from a control
Function ControlHide("title", "text", controlID) |Hides a control
Function ControlListView("title", "text", controlID, "command" [, option1 [, option2]]) |Sends a command to a ListView32 control
Function ControlMove("title", "text", controlID, x, y [, width [, height]]) |Moves a control within a window
Function ControlSend("title", "text", controlID, "string" [, flag = 0]) |Sends a string of characters to a control
Function ControlSetText("title", "text", controlID, "new text" [, flag = 0]) |Sets text of a control
Function ControlShow("title", "text", controlID) |Shows a control that was hidden
Function ControlTreeView("title", "text", controlID, "command" [, option1]) |Sends a command to a TreeView32 control
Function Cos(expression) |Calculates the cosine of a number
Function Dec("hex" [, flag = 0]) |Returns a numeric representation of a hexadecimal string
Function DirCopy(Similar to xcopy) |Copies a directory and all sub-directories and files ("source dir", "dest dir" [, flag = 0])
Function DirCreate("path") |Creates a directory/folder
Function DirGetSize("path" [, flag = 0]) |Returns the size in bytes of a given directory
Function DirMove("source dir", "dest dir" [, flag = 0]) |Moves a directory and all sub-directories and files
Function DirRemove("path" [, recurse = 0]) |Deletes a directory/folder
Function DllCall("dll", "return type", "function" [, type1, param1 [, type n, param n]]) |Dynamically calls a function in a DLL
Function DllCallAddress("return type", address [, type1, param1 [, type n, param n]]) |Dynamically calls a function at a specific memory address
Function DllCallbackFree(handle) |Frees a previously created handle created with DllCallbackRegister
Function DllCallbackGetPtr(handle) |Returns the pointer to a callback function that can be passed to the Win32 API
Function DllCallbackRegister("function", "return type", "params") |Creates a user-defined DLL Callback function
Function DllClose(dllhandle) |Closes a previously opened DLL
Function DllOpen("filename") |Opens a DLL file for use in DllCall
Function DllStructCreate(Struct [, Pointer]) |Creates a C/C++ style structure to be used in DllCall
Function DllStructGetData(Struct, Element [, index = Default]) |Returns the data of an element of the struct
Function DllStructGetPtr(Struct [, Element]) |Returns the pointer to the struct or an element in the struct
Function DllStructGetSize(Struct) |Returns the size of the struct in bytes
Function DllStructSetData(Struct, Element, value [, index]) |Sets the data of an element in the struct
Function DriveGetDrive("type") |Returns an array containing the enumerated drives
Function DriveGetFileSystem("path") |Returns File System Type of a drive
Function DriveGetLabel("path") |Returns Volume Label of a drive, if it has one
Function DriveGetSerial("path") |Returns Serial Number of a drive
Function DriveGetType("path" [, operation = 1]) |Returns drive type
Function DriveMapAdd("device", "remote share" [, flags = 0 [, "user" [, "password"]]]) |Maps a network drive
Function DriveMapDel("drive") |Disconnects a network drive
Function DriveMapGet("device") |Retrieves the details of a mapped drive
Function DriveSetLabel("path", "label") |Sets the Volume Label of a drive
Function DriveSpaceFree("path") |Returns the free disk space of a path in Megabytes
Function DriveSpaceTotal("path") |Returns the total disk space of a path in Megabytes
Function DriveStatus("path") |Returns the status of the drive as a string
Function EnvGet("envvariable") |Retrieves an environment variable
Function EnvSet("envvariable" [, "value"]) |Writes an environment variable
Function EnvUpdate |Refreshes the OS environment.
Function Eval(string) |Return the value of the variable defined by a string
Function Execute(string) |Execute an expression
Function Exp(expression) |Calculates e to the power of a number
Function FileChangeDir("path") |Changes the current working directory
Function FileClose("filehandle") |Closes a previously opened file
Function FileCopy("source", "dest" [, flag = 0]) |Copies one or more files
Function FileCreateNTFSLink("source", "hardlink" [, flag = 0]) |Creates an NTFS hardlink to a file or a directory
Function FileCreateShortcut(.lnk) |Creates a shortcut to a file("file", "lnk" [, "workdir" [, "args" [, "desc" [, "icon" [, "hotkey" [, icon number [, state]]]]]]])
Function FileDelete("filename") |Delete one or more files
Function FileExists("path") |Checks if a file or directory exists
Function FileFindFirstFile("filename") |Creates a search handle, defined by a path and file mask
Function FileFindNextFile(search [, flag = 0]) |Returns the next filename defined by the search handle
Function FileFlush("filehandle") |Flushes the file's buffer to disk
Function FileGetAttrib("filename") |Returns a code string representing a file's attributes
Function FileGetEncoding("filehandle/filename" [, mode = 1]) |Determines the text encoding used in a file
Function FileGetLongName("filename" [, flag = 0]) |Returns the long path+name of the path+name passed
Function FileGetPos("filehandle") |Retrieves the current file position
Function FileGetShortcut("lnk") |Retrieves details about a shortcut
Function FileGetShortName("filename" [, flag = 0]) |Returns the 8.3 short path+name of the path+name passed
Function FileGetSize("filename") |Returns the size of a file in bytes
Function FileGetTime("filename" [, option = 0 [, format = 0]]) |Returns the time and date information for a file
Function FileGetVersion("filename" [, "stringname"]) |Returns version information stored in a file
Function FileInstall("source", "dest" [, flag = 0]) |Include and install a file with the compiled script
Function FileMove("source", "dest" [, flag = 0]) |Moves one or more files
Function FileOpen("filename" [, mode = 0]) |Opens a file for reading or writing
Function FileOpenDialog("title", "init dir", "filter" [, options = 0 [, "default name" [, hwnd]]]) |Initiates a Open File Dialog
Function FileRead("filehandle/filename" [, count]) |Read in a number of characters from a previously opened file
Function FileReadLine("filehandle/filename" [, line = 1]) |Read in a line of text from a previously opened text file
Function FileReadToArray("filehandle/filename") |Reads the specified file into an array
Function FileRecycle("source") |Sends a file or directory to the recycle bin
Function FileRecycleEmpty(["source"]) |Empties the recycle bin
Function FileSaveDialog("title", "init dir", "filter" [, options = 0 [, "default name" [, hwnd]]]) |Initiates a Save File Dialog
Function FileSelectFolder("dialog text", "root dir" [, flag = 0 [, "initial dir" [, hwnd]]]) |Initiates a Browse For Folder dialog
Function FileSetAttrib("file pattern", "+-RASHNOT" [, recurse = 0]) |Sets the attributes of one or more files/directories
Function FileSetEnd("filehandle") |Sets the end of the file at the current file position
Function FileSetPos("filehandle", offset, origin) |Sets the current file position
Function FileSetTime("file pattern", "time" [, type = 0 [, recurse = 0]]) |Sets the timestamp of one of more files
Function FileWrite("filehandle/filename", "text/data") |Write text/data to the end of a previously opened file
Function FileWriteLine("filehandle/filename", "line") |Append a line of text to the end of a previously opened text file
Function Floor(expression) |Returns a number rounded down to the closest integer
Function FtpSetProxy(mode = 0 [, "proxy:port" [, "username" [, "password"]]]) |Sets the internet proxy to use for ftp access
Function FuncName($Functionvariable) |Returns the name of a function stored in a variable
Function GUICreate("title" [, width [, height [, left = -1 [, top = -1 [, style = -1 [, exStyle = -1 [, parent = 0]]]]]]]) |Create a GUI window
Function GUICtrlCreateAvi(filename, subfileid, left, top [, width [, height [, style = -1 [, exStyle = -1]]]]) |Creates an AVI video control for the GUI
Function GUICtrlCreateButton("text", left, top [, width [, height [, style = -1 [, exStyle = -1]]]]) |Creates a Button control for the GUI
Function GUICtrlCreateCheckbox("text", left, top [, width [, height [, style = -1 [, exStyle = -1]]]]) |Creates a Checkbox control for the GUI
Function GUICtrlCreateCombo("text", left, top [, width [, height [, style = -1 [, exStyle = -1]]]]) |Creates a ComboBox control for the GUI
Function GUICtrlCreateContextMenu([controlID]) |Creates a context menu for a control or entire GUI window
Function GUICtrlCreateDate("text", left, top [, width [, height [, style = -1 [, exStyle = -1]]]]) |Creates a date control for the GUI
Function GUICtrlCreateDummy |Creates a Dummy control for the GUI.
Function GUICtrlCreateEdit("text", left, top [, width [, height [, style = -1 [, exStyle = -1]]]]) |Creates an Edit control for the GUI
Function GUICtrlCreateGraphic(left, top [, width [, height [, style]]]) |Creates a Graphic control for the GUI
Function GUICtrlCreateGroup("text", left, top [, width [, height [, style = -1 [, exStyle = -1]]]]) |Creates a Group control for the GUI
Function GUICtrlCreateIcon(filename, iconName, left, top [, width [, height [, style = -1 [, exStyle = -1]]]]) |Creates an Icon control for the GUI
Function GUICtrlCreateInput("text", left, top [, width [, height [, style = -1 [, exStyle = -1]]]]) |Creates an Input control for the GUI
Function GUICtrlCreateLabel("text", left, top [, width [, height [, style = -1 [, exStyle = -1]]]]) |Creates a static Label control for the GUI
Function GUICtrlCreateList("text", left, top [, width [, height [, style = -1 [, exStyle = -1]]]]) |Creates a List control for the GUI
Function GUICtrlCreateListView("text", left, top [, width [, height [, style = -1 [, exStyle = -1]]]]) |Creates a ListView control for the GUI
Function GUICtrlCreateListViewItem("text", listviewID) |Creates a ListView item
Function GUICtrlCreateMenu("submenutext" [, menuID = -1 [, menuentry = -1]]) |Creates a Menu control for the GUI
Function GUICtrlCreateMenuItem("text", menuID [, menuentry = -1 [, menuradioitem = 0]]) |Creates a MenuItem control for the GUI
Function GUICtrlCreateMonthCal("text", left, top [, width [, height [, style = -1 [, exStyle = -1]]]]) |Creates a month calendar control for the GUI
Function GUICtrlCreateObj(ObjectVar, left, top [, width [, height]]) |Creates an ActiveX control in the GUI
Function GUICtrlCreatePic(filename, left, top [, width [, height [, style = -1 [, exStyle = -1]]]]) |Creates a Picture control for the GUI
Function GUICtrlCreateProgress(left, top [, width [, height [, style = -1 [, exStyle = -1]]]]) |Creates a Progress control for the GUI
Function GUICtrlCreateRadio("text", left, top [, width [, height [, style = -1 [, exStyle = -1]]]]) |Creates a Radio button control for the GUI
Function GUICtrlCreateSlider(left, top [, width [, height [, style = -1 [, exStyle = -1]]]]) |Creates a Slider control for the GUI
Function GUICtrlCreateTab(left, top [, width [, height [, style = -1 [, exStyle = -1]]]]) |Creates a Tab control for the GUI
Function GUICtrlCreateTabItem("text") |Creates a TabItem control within an existing tab control in the GUI
Function GUICtrlCreateTreeView(left, top [, width [, height [, style = -1 [, exStyle = -1]]]]) |Creates a TreeView control for the GUI
Function GUICtrlCreateTreeViewItem("text", treeviewID) |Creates a TreeViewItem control for the GUI
Function GUICtrlCreateUpdown(inputcontrolID [, style = -1]) |Creates an UpDown control for the GUI
Function GUICtrlDelete(controlID) |Deletes a control
Function GUICtrlGetHandle(item) |Returns the handle for a control and some special handles (Menu, ContextMenu, TreeViewItem)(controlID)
Function GUICtrlGetState(controlID) |Gets the current state of a control
Function GUICtrlRead(controlID [, advanced = 0]) |Read state or data of a control
Function GUICtrlRecvMsg(controlID , msg [, wParam [, lParamType]]) |Send a message to a control and retrieve information in lParam
Function GUICtrlRegisterListViewSort(controlID, "function") |Register a user defined function for an internal listview sorting callback function
Function GUICtrlSendMsg(controlID, msg , wParam, lParam) |Send a message to a control
Function GUICtrlSendToDummy(controlID [, state]) |Sends a message to a Dummy control
Function GUICtrlSetBkColor(controlID, backgroundcolor) |Sets the background color of a control
Function GUICtrlSetColor(controlID, textcolor) |Sets the text color of a control
Function GUICtrlSetCursor(controlID, cursorID) |Sets the mouse cursor icon for a particular control
Function GUICtrlSetData(controlID, data [, default]) |Modifies the data for a control
Function GUICtrlSetDefBkColor(defbkcolor [, winhandle]) |Sets the default background color of all the controls of the GUI window
Function GUICtrlSetDefColor(deftextcolor [, winhandle]) |Sets the default text color of all the controls of the GUI window
Function GUICtrlSetFont(controlID, size [, weight [, attribute [, fontname [, quality]]]]) |Sets the font for a control
Function GUICtrlSetGraphic(controlID, type [, par1 [, ... par6]]) |Modifies the data for a control
Function GUICtrlSetImage(controlID, filename [, iconname [, icontype]]) |Sets the bitmap or icon image to use for a control
Function GUICtrlSetLimit(controlID, max [, min = 0]) |Limits the number of characters/pixels for a control
Function GUICtrlSetOnEvent(controlID, "function") |Defines a user-defined function to be called when a control is clicked
Function GUICtrlSetPos(controlID, left [, top [, width [, height]]]) |Changes the position of a control within the GUI window
Function GUICtrlSetResizing(controlID, resizing) |Defines the resizing method used by a control
Function GUICtrlSetState(controlID, state) |Changes the state of a control
Function GUICtrlSetStyle(controlID, style [, exStyle]) |Changes the style of a control
Function GUICtrlSetTip(controlID, tiptext [, "title" [, icon [, options]]]) |Sets the tip text associated with a control
Function GUIDelete([winhandle]) |Deletes a GUI window and all controls that it contains
Function GUIGetCursorInfo([winhandle]) |Gets the mouse cursor position relative to GUI window
Function GUIGetMsg([advanced = 0]) |Polls the GUI to see if any events have occurred
Function GUIGetStyle([winhandle]) |Retrieves the styles of a GUI window
Function GUIRegisterMsg(WM_MSG) |Register a user defined function for a known Windows Message ID (msgID, "function")
Function GUISetAccelerators(accelerators [, winhandle]) |Sets the accelerator table to be used in a GUI window
Function GUISetBkColor(background [, winhandle]) |Sets the background color of the GUI window
Function GUISetCoord(left, top [, width [, height [, winhandle]]]) |Sets absolute coordinates for the next control
Function GUISetCursor([cursorID [, override = 0 [, winhandle]]]) |Sets the mouse cursor icon for a GUI window
Function GUISetFont(size [, weight [, attribute [, fontname [, winhandle [, quality]]]]]) |Sets the default font for a GUI window
Function GUISetHelp(helpfile [, winhandle]) |Sets an executable file that will be run when F1 is pressed
Function GUISetIcon(iconfile [, iconID [, winhandle]]) |Sets the icon used in a GUI window
Function GUISetOnEvent(specialID, "function" [, winhandle]) |Defines a user function to be called when a system button is clicked
Function GUISetState([flag [, winhandle]]) |Changes the state of a GUI window
Function GUISetStyle(Style [, ExStyle [, winhandle]]) |Changes the styles of a GUI window
Function GUIStartGroup([winhandle]) |Defines that any subsequent controls that are created will be "grouped" together
Function GUISwitch(winhandle [, tabitemID]) |Switches the current window used for GUI functions
Function Hex(expression [, length]) |Returns a string representation of an integer or of a binary type converted to hexadecimal
Function HotKeySet("key" [, "function"]) |Sets a hotkey that calls a user function
Function HttpSetProxy(mode = 0 [, "proxy:port" [, "username" [, "password"]]]) |Sets the internet proxy to use for http access
Function HttpSetUserAgent("user agent") |Sets the HTTP user-agent string which is sent with all Inet requests
Function HWnd(expression) |Converts an expression into an HWND handle
Function InetClose() |Closes a handle returned from InetGet(handle)
Function InetGet("URL", "filename" [, options = 0 [, background = 0]]) |Downloads a file from the internet using the HTTP, HTTPS or FTP protocol
Function InetGetInfo() |Returns detailed data for a handle returned from InetGet([handle [, index = -1]])
Function InetGetSize(in bytes) |Returns the size of a file located on the internet("URL" [, options = 0])
Function InetRead("URL" [, options = 0]) |Downloads a file from the internet using the HTTP, HTTPS or FTP protocol
Function IniDelete("filename", "section" [, "key"]) |Deletes a value from a standard format .ini file
Function IniRead("filename", "section", "key", "default") |Reads a value from a standard format .ini file
Function IniReadSection("filename", "section") |Reads all key/value pairs from a section in a standard format .ini file
Function IniReadSectionNames("filename") |Reads all sections in a standard format .ini file
Function IniRenameSection("filename", "section", "new section" [, flag = 0]) |Renames a section in a standard format .ini file
Function IniWrite("filename", "section", "key", "value") |Writes a value to a standard format .ini file
Function IniWriteSection("filename", "section", "data" [, index = 1]) |Writes a section to a standard format .ini file
Function InputBox("title", "prompt" [, "default" [, "password char" [, width = -1 [, height = -1 [, left = Default [, top = Default [, timeout = 0 [, hwnd]]]]]]]]) |Displays an input box to ask the user to enter a string
Function Int(whole number) |Returns the integer representation of an expression(expression [, flag = 0])
Function IsAdmin |Checks if the current user has full administrator privileges.
Function IsArray(variable) |Checks if a variable is an array type
Function IsBinary(expression) |Checks if a variable or expression is a binary type
Function IsBool(variable) |Checks if a variable's base type is boolean
Function IsDeclared(expression) |Check if a variable has been declared
Function IsDllStruct(variable) |Checks if a variable is a DllStruct type
Function IsFloat(variable) |Checks if the value of a variable or expression has a fractional component
Function IsFunc(expression) |Checks if a variable or expression is a function type
Function IsHWnd(variable) |Checks if a variable's base type is a pointer and window handle
Function IsInt(variable) |Checks if the value of a variable or expression has no fractional component
Function IsKeyword(for example, Default) |Checks if a variable is a keyword (variable)
Function IsNumber(variable) |Checks if a variable's base type is numeric
Function IsObj(variable) |Checks if a variable or expression is an object type
Function IsPtr(variable) |Checks if a variable's base type is a pointer
Function IsString(variable) |Checks if a variable is a string type
Function Log(expression) |Calculates the natural logarithm of a number
Function MemGetStats |Retrieves memory related information.
Function Mod(value1, value2) |Performs the modulus operation
Function MouseClick("button" [, x, y [, clicks = 1 [, speed = 10]]]) |Perform a mouse click operation
Function MouseClickDrag("button", x1, y1, x2, y2 [, speed = 10]) |Perform a mouse click and drag operation
Function MouseDown("button") |Perform a mouse down event at the current mouse position
Function MouseGetCursor |Returns the cursor ID Number for the current Mouse Cursor.
Function MouseGetPos([dimension]) |Retrieves the current position of the mouse cursor
Function MouseMove(x, y [, speed = 10]) |Moves the mouse pointer
Function MouseUp("button") |Perform a mouse up event at the current mouse position
Function MouseWheel("direction" [, clicks = 1]) |Moves the mouse wheel up or down
Function MsgBox(flag, "title", "text" [, timeout = 0 [, hwnd]]) |Displays a simple message box with optional timeout
Function Number(expression [, flag = 0]) |Returns the numeric representation of an expression
Function ObjCreate("classname" [, "servername" [, "username" [, "password"]]]) |Creates a reference to a COM object from the given classname
Function ObjCreateInterface("CLSID" , "IID" [, "interface_description", [flag = True]]) |Creates a reference to an object from the given classname/object pointer, interface identifier and description string
Function ObjEvent($ObjectVar, "functionprefix" [, "interface name"]) |Handles incoming events from the given Object
Function ObjGet("filename" [, "classname" [, instance]]) |Retrieves a reference to a COM object from an existing process or filename
Function ObjName($Objectvariable [, Flag = 1]) |Returns the name or interface description of an Object
Function OnAutoItExitRegister("function") |Registers a function to be called when AutoIt exits
Function OnAutoItExitUnRegister("function") |UnRegisters a function that was called when AutoIt exits
Function Ping("address/hostname" [, timeout = 4000]) |Pings a host and returns the roundtrip-time
Function PixelChecksum(left, top, right, bottom [, step = 1 [, hwnd [, mode = 0]]]) |Generates a checksum for a region of pixels
Function PixelGetColor(x , y [, hwnd]) |Returns a pixel color according to x,y pixel coordinates
Function PixelSearch(left, top, right, bottom, color [, shade-variation = 0 [, step = 1 [, hwnd]]]) |Searches a rectangle of pixels for the pixel color provided
Function ProcessClose("process") |Terminates a named process
Function ProcessExists("process") |Checks to see if a specified process exists
Function ProcessGetStats(["process" [, type = 0]]) |Returns an array about Memory or IO infos of a running process
Function ProcessList(names and PIDs) |Returns an array listing the currently running processes (["name"])
Function ProcessSetPriority("process", priority) |Changes the priority of a process
Function ProcessWait("process" [, timeout = 0]) |Pauses script execution until a given process exists
Function ProcessWaitClose("process" [, timeout = 0]) |Pauses script execution until a given process does not exist
Function ProgressOff |Turns Progress window off.
Function ProgressOn("title", "maintext" [, "subtext" [, x pos [, y pos [, opt]]]]) |Creates a customizable progress bar window
Function ProgressSet(percent [, "subtext" [, "maintext"]]) |Sets the position and/or text of a previously created Progress bar window
Function Ptr(expression) |Converts an expression into a pointer variant
Function Random([Min = 0 [, Max = 1 [, Flag = 0]]]) |Generates a pseudo-random float-type number
Function RegDelete("keyname" [, "valuename"]) |Deletes a key or value from the registry
Function RegEnumKey("keyname", instance) |Reads the name of a subkey according to its instance
Function RegEnumVal("keyname", instance) |Reads the name of a value according to its instance
Function RegRead("keyname", "valuename") |Reads a value from the registry
Function RegWrite("keyname" [, "valuename", "type", value]) |Creates a key or value in the registry
Function Round(expression [, decimalplaces]) |Returns a number rounded to a specified number of decimal places
Function Run("program" [, "workingdir" [, show_flag [, opt_flag]]]) |Runs an external program
Function RunAs("username", "domain", "password", logon_flag, "program" [, "workingdir" [, show_flag [, opt_flag]]]) |Runs an external program under the context of a different user
Function RunAsWait("username", "domain", "password", logon_flag, "program" [, "workingdir" [, show_flag [, opt_flag]]]) |Runs an external program under the context of a different user and pauses script execution until the program finishes
Function RunWait("program" [, "workingdir" [, show_flag [, opt_flag]]]) |Runs an external program and pauses script execution until the program finishes
Function Send("keys" [, flag = 0]) |Sends simulated keystrokes to the active window
Function SendKeepActive() |Attempts to keep a specified window active during Send("title" [, "text"])
Function SetError(and optionally @extended, and "Return Value") |Manually set the value of the @error macro (code [, extended = 0 [, return value]])
Function SetExtended(code [, return value]) |Manually set the value of the @extended macro
Function ShellExecute("filename" [, "parameters" [, "workingdir" [, "verb" [, showflag]]]]) |Runs an external program using the ShellExecute API
Function ShellExecuteWait("filename" [, "parameters" [, "workingdir" [, "verb" [, showflag]]]]) |Runs an external program using the ShellExecute API and pauses script execution until it finishes
Function Shutdown(code) |Shuts down the system
Function Sin(expression) |Calculates the sine of a number
Function Sleep(delay in ms) |Pause script execution
Function SoundPlay("filename" [, wait = 0]) |Play a sound file
Function SoundSetWaveVolume(percent) |Sets the system wave volume by percent
Function SplashImageOn("title", "file" [, width [, height [, x pos [, y pos [, opt]]]]]) |Creates a customizable image popup window
Function SplashOff |Turns SplashText or SplashImage off.
Function SplashTextOn("title", "text" [, w = 500 [, h = 400 [, x pos [, y pos [, opt = 0 [, "fontname" [, fontsz = 12 [, fontwt]]]]]]]]) |Creates a customizable text popup window
Function Sqrt(expression) |Calculates the square-root of a number
Function SRandom(Seed) |Set Seed for random number generation
Function StatusbarGetText("title" [, "text" [, part = 1]]) |Retrieves the text from a standard status bar control
Function StderrRead(process_id [, peek = False [, binary = False]]) |Reads from the STDERR stream of a previously run child process
Function StdinWrite(process_id [, data]) |Writes a number of characters to the STDIN stream of a previously run child process
Function StdioClose(process_id) |Closes all resources associated with a process previously run with STDIO redirection
Function StdoutRead(process_id [, peek = False [, binary = False]]) |Reads from the STDOUT stream of a previously run child process
Function String(expression) |Returns the string representation of an expression
Function StringAddCR(Chr(10) |Takes a string and prefixes all linefeed characters ) with a carriage return character (Chr(13) )("string")
Function StringCompare("string1", "string2" [, casesense = 0]) |Compares two strings with options
Function StringFormat(similar to the C sprintf() |Returns a formatted string function)("format control", var1 [, ... var32])
Function StringFromASCIIArray(array, [start = 0 [, end = -1 [, encoding = 0]]]) |Converts an array of ASCII codes to a string
Function StringInStr("string", "substring" [, casesense = 0 [, occurrence = 1 [, start = 1 [, count]]]]) |Checks if a string contains a given substring
Function StringIsAlNum("string") |Checks if a string contains only alphanumeric characters
Function StringIsAlpha("string") |Checks if a string contains only alphabetic characters
Function StringIsASCII(0 - 127) |Checks if a string contains only ASCII characters in the range 0x00 - 0x7f ("string")
Function StringIsDigit(0-9) |Checks if a string contains only digit characters("string")
Function StringIsFloat("string") |Checks if a string is a floating point number
Function StringIsInt("string") |Checks if a string is an integer
Function StringIsLower("string") |Checks if a string contains only lowercase characters
Function StringIsSpace("string") |Checks if a string contains only whitespace characters
Function StringIsUpper("string") |Checks if a string contains only uppercase characters
Function StringIsXDigit(0-9, A-F) |Checks if a string contains only hexadecimal digit characters("string")
Function StringLeft("string", count) |Returns a number of characters from the left-hand side of a string
Function StringLen("string") |Returns the number of characters in a string
Function StringLower("string") |Converts a string to lowercase
Function StringMid("string", start [, count = -1]) |Extracts a number of characters from a string
Function StringRegExp("test", "pattern" [, flag = 0 [, offset = 1]]) |Check if a string fits a given regular expression pattern
Function StringRegExpReplace("test", "pattern", "replace" [, count = 0]) |Replace text in a string based on regular expressions
Function StringReplace("string", "searchstring/start", "replacestring" [, occurrence = 0 [, casesense = 0]]) |Replaces substrings in a string
Function StringReverse("string" [, flag = 0]) |Reverses the contents of the specified string
Function StringRight("string", count) |Returns a number of characters from the right-hand side of a string
Function StringSplit("string", "delimiters" [, flag = 0]) |Splits up a string into substrings depending on the given delimiters
Function StringStripCR(Chr(13) |Removes all carriage return values ) from a string("string")
Function StringStripWS("string", flag) |Strips the white space in a string
Function StringToASCIIArray("string", [start = 0 [, end [, encoding = 0]]]) |Converts a string to an array containing the ASCII code of each character
Function StringToBinary(expression [, flag = 1]) |Converts a string into binary data
Function StringTrimLeft("string", count) |Trims a number of characters from the left hand side of a string
Function StringTrimRight("string", count) |Trims a number of characters from the right hand side of a string
Function StringUpper("string") |Converts a string to uppercase
Function Tan(expression) |Calculates the tangent of a number
Function TCPAccept(mainsocket) |Permits an incoming connection attempt on a socket
Function TCPCloseSocket(socket) |Closes a TCP socket
Function TCPConnect(IPAddr, port) |Create a socket connected to an existing server
Function TCPListen(IPAddr, port [, MaxPendingConnection]) |Creates a socket listening for an incoming connection
Function TCPNameToIP(name) |Converts an Internet name to IP address
Function TCPRecv(mainsocket, maxlen [, flag = 0]) |Receives data from a connected socket
Function TCPSend(mainsocket, data) |Sends data on a connected socket
Function TCPShutdown |Stops TCP/UDP services.
Function TCPStartup |Starts TCP or UDP services.
Function TimerDiff() |Returns the difference in time from a previous call to TimerInit(handle)
Function TimerInit() |Returns a handle that can be passed to TimerDiff to calculate the difference in milliseconds.
Function ToolTip("text" [, x [, y [, "title" [, icon = 0 [, options]]]]]) |Creates a tooltip anywhere on the screen
Function TrayCreateItem("text" [, menuID = -1 [, menuentry = -1 [, menuradioitem = 0]]]) |Creates a menuitem control for the tray
Function TrayCreateMenu("sub/menutext" [, menuID = -1 [, menuentry = -1]]) |Creates a menu control for the tray menu
Function TrayGetMsg |Polls the tray to see if any events have occurred.
Function TrayItemDelete(controlID) |Deletes a menu/item control from the tray menu
Function TrayItemGetHandle(item) |Returns the handle for a tray menu(controlID)
Function TrayItemGetState([controlID]) |Gets the current state of a control
Function TrayItemGetText(controlID) |Gets the itemtext of a tray menu/item control
Function TrayItemSetOnEvent(itemID, "function") |Defines a user-defined function to be called when a tray item is clicked
Function TrayItemSetState(controlID, state) |Sets the state of a tray menu/item control
Function TrayItemSetText(controlID, text) |Sets the itemtext of a tray menu/item control
Function TraySetClick(flag) |Sets the clickmode of the tray icon - what mouseclicks will display the tray menu
Function TraySetIcon([filename [, iconID]]) |Loads/Sets a specified tray icon
Function TraySetOnEvent(specialID, "function") |Defines a user function to be called when a special tray action happens
Function TraySetPauseIcon([filename [, iconID]]) |Loads/Sets a specified tray pause icon
Function TraySetState([flag = 1]) |Sets the state of the tray icon
Function TraySetToolTip(Re) |Sets the tooltip text for the tray icon([text])
Function TrayTip("title", "text", timeout [, option = 0]) |Displays a balloon tip from the AutoIt Icon
Function UBound(Variable [, Dimension = 1]) |Returns the size of array dimensions or the number of keys in a map
Function UDPBind(IPAddr, port) |Create a socket bound to an incoming connection
Function UDPCloseSocket(socketarray) |Close a UDP socket
Function UDPOpen(IPAddr, port [, flag = 0]) |Open a socket connected to an existing server 
Function UDPRecv(socketarray, maxlen [, flag = 0]) |Receives data from an opened socket
Function UDPSend(socketarray, data) |Sends data on an opened socket
Function VarGetType(expression) |Returns the internal type representation of a variant
Function WinActivate(gives focus to) |Activates a window("title" [, "text"])
Function WinActive("title" [, "text"]) |Checks to see if a specified window exists and is currently active
Function WinClose("title" [, "text"]) |Closes a window
Function WinExists("title" [, "text"]) |Checks to see if a specified window exists
Function WinFlash("title" [, "text" [, flashes = 4 [, delay = 500]]]) |Flashes a window in the taskbar
Function WinGetCaretPos |Returns the coordinates of the caret in the foreground window.
Function WinGetClassList("title" [, "text"]) |Retrieves the classes from a window
Function WinGetClientSize("title" [, "text"]) |Retrieves the size of a given window's client area
Function WinGetHandle("title" [, "text"]) |Retrieves the internal handle of a window
Function WinGetPos("title" [, "text"]) |Retrieves the position and size of a given window
Function WinGetProcess(PID) |Retrieves the Process ID associated with a window("title" [, "text"])
Function WinGetState("title" [, "text"]) |Retrieves the state of a given window
Function WinGetText("title" [, "text"]) |Retrieves the text from a window
Function WinGetTitle("title" [, "text"]) |Retrieves the full title from a window
Function WinKill("title" [, "text"]) |Forces a window to close
Function WinList(["title" [, "text"]]) |Retrieves a list of windows
Function WinMenuSelectItem("title", "text", "item" [, "item" [, "item" [, "item" [, "item" [, "item" [, "item"]]]]]]) |Invokes a menu item of a window
Function WinMinimizeAll |Minimizes all windows.
Function WinMinimizeAllUndo |Undoes a previous WinMinimizeAll function.
Function WinMove("title", "text", x, y [, width [, height [, speed]]]) |Moves and/or resizes a window
Function WinSetOnTop("title", "text", flag) |Change a window's "Always On Top" attribute
Function WinSetState("title", "text", flag) |Shows, hides, minimizes, maximizes, or restores a window
Function WinSetTitle("title", "text", "newtitle") |Changes the title of a window
Function WinSetTrans("title", "text", transparency) |Sets the transparency of a window
Function WinWait("title" [, "text" [, timeout = 0]]) |Pauses execution of the script until the requested window exists
Function WinWaitActive("title" [, "text" [, timeout = 0]]) |Pauses execution of the script until the requested window is active
Function WinWaitClose("title" [, "text" [, timeout = 0]]) |Pauses execution of the script until the requested window does not exist
Function WinWaitNotActive("title" [, "text" [, timeout = 0]]) |Pauses execution of the script until the requested window is not active
Function _Array1DToHistogram(Requires: #include <Array.au3>) |Transform a 1D array to Histogram , $aArray [, $iSizing = 100])
Function _ArrayAdd(Requires: #include <Array.au3>) |Adds a specified value at the end of an existing 1D or 2D array , ByRef $aArray, $vValue [, $iStart = 0 [, $sDelim_Item = "|" [, $sDelim_Row = @CRLF [, $iForce = $ARRAYFILL_FORCE_DEFAULT]]]])
Function _ArrayBinarySearch(Requires: #include <Array.au3>) |Uses the binary search algorithm to search through a 1D or 2D array , Const ByRef $aArray, $vValue [, $iStart = 0 [, $iEnd = 0 [, $iColumn = 0]]])
Function _ArrayColDelete(Requires: #include <Array.au3>) |Deletes a specified column from a 2D array , ByRef $aArray, $iColumn [, $bConvert = False])
Function _ArrayColInsert(Requires: #include <Array.au3>) |Inserts a specified column into a 1D or 2D array , ByRef $aArray, $iColumn)
Function _ArrayCombinations(Requires: #include <Array.au3>) |Returns an array of the combinations of a set of elements from a selected 1D array , Const ByRef $aArray, $iSet [, $sDelimiter = ""])
Function _ArrayConcatenate(Requires: #include <Array.au3>) |Concatenate two arrays - either 1D or 2D with the same number of columns , Const ByRef $aArrayTarget, ByRef $aArraySource [, $iStart = 0])
Function _ArrayDelete(s) |Deletes the specified element from the specified 1D or 2D array (Requires: #include <Array.au3>), ByRef $aArray, $vRange)
Function _ArrayDisplay(Requires: #include <Array.au3>) |Displays a 1D or 2D array in a ListView , Const ByRef $aArray [, $sTitle = "ArrayDisplay" [, $sArrayRange = "" [, $iFlags = 0 [, $vUser_Separator = Default [, $sHeader = Default [, $iMax_ColWidth = Default [, $iAlt_Color = Default [, $hUser_Function = ""]]]]]]]])
Function _ArrayExtract(s) |Extracts an array from the specified element of a 1D or 2D array (Requires: #include <Array.au3>), Const ByRef $aArray [, $iStart_Row = -1 [, $iEnd_Row = -1 [, $iStart_Col = -1 [, $iEnd_Col = -1]]]])
Function _ArrayFindAll() |Find the indices of all ocurrences of a search query between two points in a 1D or 2D array using _ArraySearch (Requires: #include <Array.au3>), Const ByRef $aArray, $vValue [, $iStart = 0 [, $iEnd = 0 [, $iCase = 0 [, $iCompare = 0 [, $iSubItem = 0 [, $bRow = False]]]]]])
Function _ArrayInsert(Requires: #include <Array.au3>) |Insert a new value at the specified position of a 1D or 2D array , ByRef $aArray, $vRange [, $vValue = "" [, $iStart = 0 [, $sDelim_Item = "|" [, $sDelim_Row = @CRLF [, $iForce = $ARRAYFILL_FORCE_DEFAULT]]]]])
Function _ArrayMax(Requires: #include <Array.au3>) |Returns the highest value held in a 1D or 2D array , Const ByRef $aArray [, $iCompNumeric = 0 [, $iStart = -1 [, $iEnd = -1 [, $iSubItem = 0]]]])
Function _ArrayMaxIndex(Requires: #include <Array.au3>) |Returns the index where the highest value occurs in a 1D or 2D array , Const ByRef $aArray [, $iCompNumeric = 0 [, $iStart = -1 [, $iEnd = -1 [, $iSubItem = 0]]]])
Function _ArrayMin(Requires: #include <Array.au3>) |Returns the lowest value held in a 1D or 2D array , Const ByRef $aArray [, $iCompNumeric = 0 [, $iStart = -1 [, $iEnd = -1 [, $iSubItem = 0]]]])
Function _ArrayMinIndex(Requires: #include <Array.au3>) |Returns the index where the lowest value occurs in a 1D or 2D array , Const ByRef $aArray [, $iCompNumeric = 0 [, $iStart = -1 [, $iEnd = -1 [, $iSubItem = 0]]]])
Function _ArrayPermute(Requires: #include <Array.au3>) |Returns an array of the Permutations of all Elements in a 1D array , ByRef $aArray [, $sDelimiter = ""])
Function _ArrayPop(Requires: #include <Array.au3>) |Returns the last element of an array, deleting that element from the array at the same time , ByRef $aArray)
Function _ArrayPush(Requires: #include <Array.au3>) |Add new values without increasing array size by inserting at the end the new value and deleting the first one or vice versa , ByRef $aArray, $vValue [, $iDirection = 0])
Function _ArrayReverse(Requires: #include <Array.au3>) |Takes the given array and reverses the order in which the elements appear in a 1D array , ByRef $aArray [, $iStart = 0 [, $iEnd = 0]])
Function _ArraySearch() |Finds an entry within a 1D or 2D array. Similar to _ArrayBinarySearch, except that the array does not need to be sorted (Requires: #include <Array.au3>), Const ByRef $aArray, $vValue [, $iStart = 0 [, $iEnd = 0 [, $iCase = 0 [, $iCompare = 0 [, $iForward = 1 [, $iSubItem = -1 [, $bRow = False]]]]]]])
Function _ArrayShuffle(Requires: #include <Array.au3>) |Shuffles selected rows of 1D or 2D arrays - can be limited to a specific column in 2D arrays , ByRef $aArray [, $iStart_Row = 0 [, $iEnd_Row = 0 [, $iCol = -1]]])
Function _ArraySort(Requires: #include <Array.au3>) |Sort a 1D or 2D array on a specific index using the dualpivotsort/quicksort/insertionsort algorithms , ByRef $aArray [, $iDescending = 0 [, $iStart = 0 [, $iEnd = 0 [, $iSubItem = 0 [, $iPivot = 0]]]]])
Function _ArraySwap(Requires: #include <Array.au3>) |Swaps elements of a 1D array and full or part rows/columns of a 2D array , ByRef $aArray, $iIndex_1, $iIndex_2 [, $bCol = False [, $iStart = -1 [, $iEnd = -1]]])
Function _ArrayToClip(Requires: #include <Array.au3>) |Sends the contents of a 1D or 2D array to the clipboard, each element separated by a specified delimiter , Const ByRef $aArray [, $sDelim_Col = "|" [, $iStart_Row = -1 [, $iEnd_Row = -1 [, $sDelim_Row = @CRLF [, $iStart_Col = -1 [, $iEnd_Col = -1]]]]]])
Function _ArrayToString(Requires: #include <Array.au3>) |Places the elements of a 1D or 2D array into a single string, separated by the specified delimiters , Const ByRef $aArray [, $sDelim_Col = "|" [, $iStart_Row = -1 [, $iEnd_Row = -1 [, $sDelim_Row = @CRLF [, $iStart_Col = -1 [, $iEnd_Col = -1]]]]]])
Function _ArrayTranspose(swaps rows and columns) |Transposes a 1D or 2D array (Requires: #include <Array.au3>), ByRef $aArray)
Function _ArrayTrim(Requires: #include <Array.au3>) |Trims a certain number of characters from all elements in a 1D or 2D array , ByRef $aArray, $iTrimNum [, $iDirection = 0 [, $iStart = 0 [, $iEnd = 0 [, $iSubItem = 0]]]])
Function _ArrayUnique(Requires: #include <Array.au3>) |Returns the Elements from a column of a 1D or 2D array, removing all duplicates , Const ByRef $aArray [, $iColumn = 0 [, $iBase = 0 [, $iCase = 0 [, $iCount = $ARRAYUNIQUE_COUNT [, $iIntType = $ARRAYUNIQUE_AUTO]]]]])
Function _Assert(Requires: #include <Debug.au3>) |Display a message if assertion fails , $sCondition [, $bExit = True [, $iCode = 0x7FFFFFFF [, $sLine = @ScriptLineNumber]]])
Function _ChooseColor(Requires: #include <Misc.au3>) |Creates a Color dialog box that enables the user to select a color , [$iReturnType = 0 [, $iColorRef = 0 [, $iRefType = 0 [, $hWndOwnder = 0]]]])
Function _ChooseFont(Requires: #include <Misc.au3>) |Creates a Font dialog box that enables the user to choose attributes for a logical font , [$sFontName = "Courier New" [, $iPointSize = 10 [, $iFontColorRef = 0 [, $iFontWeight = 0 [, $bItalic = False [, $bUnderline = False [, $bStrikethru = False [, $hWndOwner = 0]]]]]]]])
Function _ClipBoard_ChangeChain(Requires: #include <Clipboard.au3>) |Removes a specified window from the chain of clipboard viewers , $hRemove, $hNewNext)
Function _ClipBoard_Close(Requires: #include <Clipboard.au3>) |Closes the clipboard 
Function _ClipBoard_CountFormats(Requires: #include <Clipboard.au3>) |Retrieves the number of different data formats currently on the clipboard 
Function _ClipBoard_Empty(Requires: #include <Clipboard.au3>) |Empties the clipboard and frees handles to data in the clipboard 
Function _ClipBoard_EnumFormats(Requires: #include <Clipboard.au3>) |Enumerates the data formats currently available on the clipboard , $iFormat)
Function _ClipBoard_FormatStr(Requires: #include <Clipboard.au3>) |Returns a string representation of a standard clipboard format , $iFormat)
Function _ClipBoard_GetData(Requires: #include <Clipboard.au3>) |Retrieves data from the clipboard in a specified format , [$iFormat = 1])
Function _ClipBoard_GetDataEx(Requires: #include <Clipboard.au3>) |Retrieves data from the clipboard in a specified format , [$iFormat = 1])
Function _ClipBoard_GetFormatName(Requires: #include <Clipboard.au3>) |Retrieves the name of the specified registered format , $iFormat)
Function _ClipBoard_GetOpenWindow(Requires: #include <Clipboard.au3>) |Retrieves the handle to the window that currently has the clipboard open 
Function _ClipBoard_GetOwner(Requires: #include <Clipboard.au3>) |Retrieves the window handle of the current owner of the clipboard 
Function _ClipBoard_GetPriorityFormat(Requires: #include <Clipboard.au3>) |Retrieves the first available clipboard format in the specified list , $aFormats)
Function _ClipBoard_GetSequenceNumber(Requires: #include <Clipboard.au3>) |Retrieves the clipboard sequence number for the current window station 
Function _ClipBoard_GetViewer(Requires: #include <Clipboard.au3>) |Retrieves the handle to the first window in the clipboard viewer chain 
Function _ClipBoard_IsFormatAvailable(Requires: #include <Clipboard.au3>) |Determines whether the clipboard contains data in the specified format , $iFormat)
Function _ClipBoard_Open(Requires: #include <Clipboard.au3>) |Opens the clipboard and prevents other applications from modifying the clipboard , $hOwner)
Function _ClipBoard_RegisterFormat(Requires: #include <Clipboard.au3>) |Registers a new clipboard format , $sFormat)
Function _ClipBoard_SetData(Requires: #include <Clipboard.au3>) |Places data on the clipboard in a specified clipboard format , $vData [, $iFormat = 1])
Function _ClipBoard_SetDataEx(Requires: #include <Clipboard.au3>) |Places data on the clipboard in a specified clipboard format , ByRef $hMemory [, $iFormat = 1])
Function _ClipBoard_SetViewer(Requires: #include <Clipboard.au3>) |Adds the specified window to the chain of clipboard viewers , $hViewer)
Function _ClipPutFile(Requires: #include <Misc.au3>) |Copy Files to Clipboard Like Explorer does , $sFilePath [, $sDelimiter = "|"])
Function _ColorConvertHSLtoRGB(Requires: #include <Color.au3>) |Converts HSL to RGB , $aArray)
Function _ColorConvertRGBtoHSL(Requires: #include <Color.au3>) |Converts RGB to HSL , $aArray)
Function _ColorGetBlue(Requires: #include <Color.au3>) |Returns the blue component of a given color , $iColor)
Function _ColorGetCOLORREF(Requires: #include <Color.au3>) |Returns the COLORREF color , $iColor)
Function _ColorGetGreen(Requires: #include <Color.au3>) |Returns the green component of a given color , $iColor)
Function _ColorGetRed(Requires: #include <Color.au3>) |Returns the red component of a given color , $iColor)
Function _ColorGetRGB(Requires: #include <Color.au3>) |Returns an array containing RGB values in their respective positions , $iColor)
Function _ColorSetCOLORREF(Requires: #include <Color.au3>) |Returns the COLORREF color , $aColor)
Function _ColorSetRGB(Requires: #include <Color.au3>) |Returns the RGB color , $aColor)
Function _Crypt_DecryptData(Requires: #include <Crypt.au3>) |Decrypts data using the supplied key , $vData, $vCryptKey, $iAlgID [, $bFinal = True])
Function _Crypt_DecryptFile(Requires: #include <Crypt.au3>) |Decrypts a file with specified key and algorithm , $sSourceFile, $sDestinationFile, $vCryptKey, $iAlgID)
Function _Crypt_DeriveKey(Requires: #include <Crypt.au3>) |Creates a key from algorithm and password , $vPassword, $iAlgID [, $iHashAlgID = $CALG_MD5])
Function _Crypt_DestroyKey(Requires: #include <Crypt.au3>) |Frees the resources used by a key , $hCryptKey)
Function _Crypt_EncryptData(Requires: #include <Crypt.au3>) |Encrypts data using the supplied key , $vData, $vCryptKey, $iAlgID [, $bFinal = True])
Function _Crypt_EncryptFile(Requires: #include <Crypt.au3>) |Encrypts a file with specified key and algorithm , $sSourceFile, $sDestinationFile, $vCryptKey, $iAlgID)
Function _Crypt_GenRandom(Requires: #include <Crypt.au3>) |Fill a buffer with cryptographically random data , $pBuffer, $iSize)
Function _Crypt_HashData(Requires: #include <Crypt.au3>) |Hash data with specified algorithm , $vData, $iAlgID [, $bFinal = True [, $hCryptHash = 0]])
Function _Crypt_HashFile(Requires: #include <Crypt.au3>) |Hash a string with specified algorithm , $sFilePath, $iAlgID)
Function _Crypt_Shutdown(Requires: #include <Crypt.au3>) |Uninitialize the Crypt library 
Function _Crypt_Startup(Requires: #include <Crypt.au3>) |Initialize the Crypt library 
Function _DateAdd(Requires: #include <Date.au3>) |Calculates a new date/time by adding/subtracting a specified number of time intervals from an initial date/time , $sType, $iNumber, $sDate)
Function _DateDayOfWeek(Requires: #include <Date.au3>) |Returns the name of the weekday, based on the specified day , $iDayNum [, $iFormat = 0])
Function _DateDaysInMonth(Requires: #include <Date.au3>) |Returns the number of days in a month, based on the specified month and year , $iYear, $iMonthNum)
Function _DateDiff(Requires: #include <Date.au3>) |Returns the difference between 2 dates, expressed in the type requested , $sType, $sStartDate, $sEndDate)
Function _DateIsLeapYear(Requires: #include <Date.au3>) |Checks a given year to see if it is a leap year , $iYear)
Function _DateIsValid(Requires: #include <Date.au3>) |Checks the given date to determine if it is a valid date , $sDate)
Function _DateTimeFormat(Requires: #include <Date.au3>) |Returns the date in the PC's regional settings format , $sDate, $sType)
Function _DateTimeSplit(Requires: #include <Date.au3>) |Split a string containing Date and Time into two separate Arrays , $sDate, ByRef $aDatePart, ByRef $iTimePart)
Function _DateToDayOfWeek(Requires: #include <Date.au3>) |Returns the weekday number for a given date , $iYear, $iMonth, $iDay)
Function _DateToDayOfWeekISO(Requires: #include <Date.au3>) |Returns the ISO weekday number for a given date , $iYear, $iMonth, $iDay)
Function _DateToDayValue(Requires: #include <Date.au3>) |Returns the day number since noon 4713 BC January 1 for a given Gregorian date , $iYear, $iMonth, $iDay)
Function _DateToMonth(Requires: #include <Date.au3>) |Returns the name of the month, based on the specified month , $iMonNum [, $iFormat = 0])
Function _Date_Time_CompareFileTime(Requires: #include <Date.au3>) |Compares two file times , $tFileTime1, $tFileTime2)
Function _Date_Time_DOSDateTimeToArray(Requires: #include <Date.au3>) |Decode a DOS date/time to an array , $iDosDate, $iDosTime)
Function _Date_Time_DOSDateTimeToFileTime(Requires: #include <Date.au3>) |Converts MS-DOS date and time values to a file time , $iFatDate, $iFatTime)
Function _Date_Time_DOSDateTimeToStr(Requires: #include <Date.au3>) |Decode a DOS date to a string , $iDosDate, $iDosTime)
Function _Date_Time_DOSDateToArray(Requires: #include <Date.au3>) |Decode a DOS date to an array , $iDosDate)
Function _Date_Time_DOSDateToStr(Requires: #include <Date.au3>) |Decode a DOS date to a string , $iDosDate)
Function _Date_Time_DOSTimeToArray(Requires: #include <Date.au3>) |Decode a DOS time to an array , $iDosTime)
Function _Date_Time_DOSTimeToStr(Requires: #include <Date.au3>) |Decode a DOS time to a string , $iDosTime)
Function _Date_Time_EncodeFileTime(Requires: #include <Date.au3>) |Encodes and returns a $tagFILETIME structure , $iMonth, $iDay, $iYear [, $iHour = 0 [, $iMinute = 0 [, $iSecond = 0 [, $iMSeconds = 0]]]])
Function _Date_Time_EncodeSystemTime(Requires: #include <Date.au3>) |Encodes and returns a $tagSYSTEMTIME structure , $iMonth, $iDay, $iYear [, $iHour = 0 [, $iMinute = 0 [, $iSecond = 0 [, $iMSeconds = 0]]]])
Function _Date_Time_FileTimeToArray(Requires: #include <Date.au3>) |Decode a file time to an array , ByRef $tFileTime)
Function _Date_Time_FileTimeToDOSDateTime(Requires: #include <Date.au3>) |Converts MS-DOS date and time values to a file time , $tFileTime)
Function _Date_Time_FileTimeToLocalFileTime(Requires: #include <Date.au3>) |Converts a file time based on the Coordinated Universal Time to a local file time , $tFileTime)
Function _Date_Time_FileTimeToStr(Requires: #include <Date.au3>) |Decode a file time to a date/time string , ByRef $tFileTime [, $iFmt = 0])
Function _Date_Time_FileTimeToSystemTime(Requires: #include <Date.au3>) |Converts a file time to system time format , $tFileTime)
Function _Date_Time_GetFileTime(Requires: #include <Date.au3>) |Retrieves the date and time that a file was created, accessed and modified , $hFile)
Function _Date_Time_GetLocalTime(Requires: #include <Date.au3>) |Retrieves the current local date and time 
Function _Date_Time_GetSystemTime(Requires: #include <Date.au3>) |Retrieves the current system date and time expressed in UTC 
Function _Date_Time_GetSystemTimeAdjustment(Requires: #include <Date.au3>) |Determines whether the system is applying periodic time adjustments 
Function _Date_Time_GetSystemTimeAsFileTime(Requires: #include <Date.au3>) |Retrieves the current system date and time expressed in UTC 
Function _Date_Time_GetSystemTimes(Requires: #include <Date.au3>) |Retrieves system timing information 
Function _Date_Time_GetTickCount(Requires: #include <Date.au3>) |Retrieves the number of milliseconds that have elapsed since Windows was started 
Function _Date_Time_GetTimeZoneInformation(Requires: #include <Date.au3>) |Retrieves the current time zone settings 
Function _Date_Time_LocalFileTimeToFileTime(Requires: #include <Date.au3>) |Converts a local file time to a file time based on UTC , $tLocalTime)
Function _Date_Time_SetFileTime(Requires: #include <Date.au3>) |Sets the date and time that a file was created, accessed and modified , $hFile, $tCreateTime, $tLastAccess, $tLastWrite)
Function _Date_Time_SetLocalTime(Requires: #include <Date.au3>) |Sets the current local date and time , $tSYSTEMTIME)
Function _Date_Time_SetSystemTime(Requires: #include <Date.au3>) |Sets the current system time and date, expressed in UTC , $tSYSTEMTIME)
Function _Date_Time_SetSystemTimeAdjustment(Requires: #include <Date.au3>) |Enables or disables periodic time adjustments to the system's time of day clock , $iAdjustment, $bDisabled)
Function _Date_Time_SetTimeZoneInformation(Requires: #include <Date.au3>) |Sets the current time zone settings , $iBias, $sStdName, $tStdDate, $iStdBias, $sDayName, $tDayDate, $iDayBias)
Function _Date_Time_SystemTimeToArray(Requires: #include <Date.au3>) |Decode a system time to an array , ByRef $tSYSTEMTIME)
Function _Date_Time_SystemTimeToDateStr(Requires: #include <Date.au3>) |Decode a system time to a date string , ByRef $tSYSTEMTIME [, $iFmt = 0])
Function _Date_Time_SystemTimeToDateTimeStr(Requires: #include <Date.au3>) |Decode a system time to a date/time string , ByRef $tSYSTEMTIME [, $iFmt = 0])
Function _Date_Time_SystemTimeToFileTime(Requires: #include <Date.au3>) |Converts a system time to file time format , $tSYSTEMTIME)
Function _Date_Time_SystemTimeToTimeStr(Requires: #include <Date.au3>) |Decode a system time to a time string , ByRef $tSYSTEMTIME)
Function _Date_Time_SystemTimeToTzSpecificLocalTime(Requires: #include <Date.au3>) |Converts a UTC time to a specified time zone's corresponding local time , $tUTC [, $tTimeZone = 0])
Function _Date_Time_TzSpecificLocalTimeToSystemTime(Requires: #include <Date.au3>) |Converts a local time to a time in UTC , $tLocalTime [, $tTimeZone = 0])
Function _DayValueToDate(Requires: #include <Date.au3>) |Add the given days since noon 4713 BC January 1 and returns the Gregorian date , $iJulianDate, ByRef $iYear, ByRef $iMonth, ByRef $iDay)
Function _DebugBugReportEnv(Requires: #include <Debug.au3>) |Outputs a string containing information for Bug report submission 
Function _DebugCOMError(Requires: #include <Debug.au3>) |Sets, resets or queries the debug level for COM errors , [$iComDebug = 1 [, $bExit = False]])
Function _DebugOut() |Displays output on a debugging session started by _DebugSetup (Requires: #include <Debug.au3>), $sOutput)
Function _DebugReport(Requires: #include <Debug.au3>) |Writes to a debugging session , $sData [, $bLastError = False [, $bExit = False]])
Function _DebugReportEx(Requires: #include <Debug.au3>) |Writes to a debugging session a formatted message , $sData [, $bLastError = False [, $bExit = False]])
Function _DebugReportVar(Requires: #include <Debug.au3>) |Writes to debugging session the content of a variable , $sVarName, $vVar [, $bErrExt = False [, $iDebugLineNumber = @ScriptLineNumber]])
Function _DebugSetup(Requires: #include <Debug.au3>) |Setup up a debug session using a specific reporting type , [$sTitle = Default [, $bBugReportInfos = False [, $vReportType = 1 [, $sLogFile = "" [, $bTimeStamp = False]]]]])
Function _Degree(Requires: #include <Math.au3>) |Converts radians to degrees , $iRadians)
Function _EventLog__Backup(Requires: #include <EventLog.au3>) |Saves the event log to a backup file , $hEventLog, $sFileName)
Function _EventLog__Clear(Requires: #include <EventLog.au3>) |Clears the event log , $hEventLog, $sFileName)
Function _EventLog__Close(Requires: #include <EventLog.au3>) |Closes a read handle to the event log , $hEventLog)
Function _EventLog__Count(Requires: #include <EventLog.au3>) |Retrieves the number of records in the event log , $hEventLog)
Function _EventLog__DeregisterSource(Requires: #include <EventLog.au3>) |Closes a write handle to the event log , $hEventLog)
Function _EventLog__Full(Requires: #include <EventLog.au3>) |Retrieves whether the event log is full , $hEventLog)
Function _EventLog__Notify(Requires: #include <EventLog.au3>) |Enables an application to receive event notifications , $hEventLog, $hEvent)
Function _EventLog__Oldest(Requires: #include <EventLog.au3>) |Retrieves the absolute record number of the oldest record in the event log , $hEventLog)
Function _EventLog__Open(Requires: #include <EventLog.au3>) |Opens a handle to the event log , $sServerName, $sSourceName)
Function _EventLog__OpenBackup(Requires: #include <EventLog.au3>) |Opens a handle to a backup event log , $sServerName, $sFileName)
Function _EventLog__Read(Requires: #include <EventLog.au3>) |Reads an entry from the event log , $hEventLog [, $bRead = True [, $bForward = True [, $iOffset = 0]]])
Function _EventLog__RegisterSource(Requires: #include <EventLog.au3>) |Retrieves a registered handle to the specified event log , $sServerName, $sSourceName)
Function _EventLog__Report(Requires: #include <EventLog.au3>) |Writes an entry at the end of the specified event log , $hEventLog, $iType, $iCategory, $iEventID, $sUserName, $sDesc, $aData)
Function _Excel_BookAttach(Requires: #include <Excel.au3>) |Attaches to the first instance of a workbook where the search string matches based on the selected mode , $sString [, $sMode = "FilePath" [, $oInstance = Default]])
Function _Excel_BookClose(Requires: #include <Excel.au3>) |Closes the specified workbook , $oWorkbook [, $bSave = True])
Function _Excel_BookList(Requires: #include <Excel.au3>) |Returns a list of workbooks of a specified or all Excel instances , [$oExcel = Default])
Function _Excel_BookNew(Requires: #include <Excel.au3>) |Creates a new workbook , $oExcel [, $iSheets = Default])
Function _Excel_BookOpen(Requires: #include <Excel.au3>) |Opens an existing workbook , $oExcel, $sFilePath [, $bReadOnly = False [, $bVisible = True [, $sPassword = Default [, $sWritePassword = Default [, $bUpdateLinks = Default]]]]])
Function _Excel_BookOpenText(Requires: #include <Excel.au3>) |Opens a text file and parses the content to a new workbook with a single sheet , $oExcel, $sFilePath [, $iStartRow = 1 [, $iDataType = Default [, $sTextQualifier = $xlTextQualifierDoubleQuote [, $bConsecutiveDelimiter = False [, $sDelimiter = ", " [, $aFieldInfo = "" [, $sDecimalSeparator = Default [, $sThousandsSeparator = Default [, $bTrailingMinusNumbers = True [, $iOrigin = Default]]]]]]]]]])
Function _Excel_BookSave(Requires: #include <Excel.au3>) |Saves the specified workbook , $oWorkbook)
Function _Excel_BookSaveAs(Requires: #include <Excel.au3>) |Saves the specified workbook with a new filename and/or type , $oWorkbook, $sFilePath [, $iFormat = $xlWorkbookDefault [, $bOverWrite = False [, $sPassword = Default [, $sWritePassword = Default [, $bReadOnlyRecommended = False]]]]])
Function _Excel_Close(Requires: #include <Excel.au3>) |Closes all worksheets and the instance of the Excel application , $oExcel [, $bSaveChanges = True [, $bForceClose = False]])
Function _Excel_ColumnToLetter(s) |Converts the column number to letter (Requires: #include <Excel.au3>), $iColumn)
Function _Excel_ColumnToNumber(s) |Converts the column letter to a number (Requires: #include <Excel.au3>), $sColumn)
Function _Excel_ConvertFormula(Requires: #include <Excel.au3>) |Converts cell references in a formula between A1 and R1C1 reference styles, relative and absolute reference type, or both , $oExcel, $sFormula, $iFromStyle [, $iToStyle = Default [, $iToAbsolute = Default [, $vRelativeTo = Default]]])
Function _Excel_Export(Requires: #include <Excel.au3>) |Exports a workbook, worksheet, chart or range as PDF or XPS , $oExcel, $vObject, $sFileName [, $iType = $xlTypePDF [, $iQuality = $xlQualityStandard [, $bIncludeProperties = True [, $iFrom = Default [, $iTo = Default [, $bOpenAfterPublish = Default]]]]]])
Function _Excel_FilterGet(Requires: #include <Excel.au3>) |Returns a list of set filters , $oWorkbook [, $vWorksheet = Default])
Function _Excel_FilterSet(Requires: #include <Excel.au3>) |Sets/unsets filter definitions and filters the range , $oWorkbook, $vWorksheet, $vRange, $iField [, $sCriteria1 = Default [, $iOperator = Default [, $sCriteria2 = Default]]])
Function _Excel_Open(Requires: #include <Excel.au3>) |Connects to an existing Excel instance or creates a new one , [$bVisible = True [, $bDisplayAlerts = False [, $bScreenUpdating = True [, $bInteractive = True [, $bForceNew = False]]]]])
Function _Excel_PictureAdd(Requires: #include <Excel.au3>) |Adds a picture on the specified workbook and worksheet , $oWorkbook, $vWorksheet, $sFile, $vRangeOrLeft [, $iTop = Default [, $iWidth = Default [, $iHeight = Default [, $bKeepRatio = True]]]])
Function _Excel_Print(Requires: #include <Excel.au3>) |Prints a workbook, worksheet, chart or range , $oExcel, $vObject [, $iCopies = Default [, $sPrinter = Default [, $bPreview = Default [, $iFrom = Default [, $iTo = Default [, $bPrintToFile = Default [, $bCollate = Default [, $sPrToFileName = ""]]]]]]]])
Function _Excel_RangeCopyPaste(Requires: #include <Excel.au3>) |Cuts or copies one or multiple cells, rows or columns to a range or from/to the clipboard , $oWorksheet, $vSourceRange [, $vTargetRange = Default [, $bCut = False [, $iPaste = Default [, $iOperation = Default [, $bSkipBlanks = False [, $bTranspose = False]]]]]])
Function _Excel_RangeDelete(Requires: #include <Excel.au3>) |Deletes one or multiple cells, rows or columns from the specified worksheet , $oWorksheet, $vRange [, $iShift = Default [, $iEntireRowCol = Default]])
Function _Excel_RangeFind(Requires: #include <Excel.au3>) |Finds matching cells in a range or workbook and returns an array with information about the found cells , $oWorkbook, $sSearch [, $vRange = Default [, $iLookIn = $xlValues [, $iLookAt = $xlPart [, $bMatchcase = False]]]])
Function _Excel_RangeInsert(Requires: #include <Excel.au3>) |Inserts one or multiple empty cells, rows or columns into the specified worksheet , $oWorksheet, $vRange [, $iShift = Default [, $iCopyOrigin = Default]])
Function _Excel_RangeLinkAddRemove(Requires: #include <Excel.au3>) |Adds or removes a hyperlink to/from a specified range , $oWorkbook, $vWorksheet, $vRange, $sAddress [, $sSubAddress = Default [, $sScreenTip = Default [, $sTextToDisplay = Default]]])
Function _Excel_RangeRead(Requires: #include <Excel.au3>) |Reads the value, formula or displayed text from a cell or range of cells of the specified workbook and worksheet , $oWorkbook [, $vWorksheet = Default [, $vRange = Default [, $iReturn = 1 [, $bForceFunc = False]]]])
Function _Excel_RangeReplace(Requires: #include <Excel.au3>) |Finds and replaces matching strings in a range or worksheet , $oWorkbook, $vWorksheet, $vRange, $sSearch, $sReplace [, $iLookAt = $xlPart [, $bMatchcase = False]])
Function _Excel_RangeSort(Requires: #include <Excel.au3>) |Sorts a cell range , $oWorkbook, $vWorksheet, $vRange, $vKey1 [, $iOrder1 = $xlAscending [, $iSortText = $xlSortNormal [, $iHeader = $xlNo [, $bMatchcase = False [, $iOrientation = $xlSortRows [, $vKey2 = Default [, $iOrder2 = Default [, $vKey3 = Default [, $iOrder3 = Default]]]]]]]]])
Function _Excel_RangeValidate(Requires: #include <Excel.au3>) |Adds data validation to the specified range , $oWorkbook, $vWorksheet, $vRange, $iType, $sFormula1 [, $iOperator = Default [, $sFormula2 = Default [, $bIgnoreBlank = True [, $iAlertStyle = $xlValidAlertStop [, $sErrorMessage = Default [, $sInputMessage = Default]]]]]])
Function _Excel_RangeWrite(s) |Writes value or formula(s) to a cell or a cell range on the specified workbook and worksheet (Requires: #include <Excel.au3>), $oWorkbook, $vWorksheet, $vValue [, $vRange = "A1" [, $bValue = True [, $bForceFunc = False]]])
Function _Excel_SheetAdd(s) |Adds new sheet to a workbook and sets their names (Requires: #include <Excel.au3>), $oWorkbook [, $vSheet = Default [, $bBefore = True [, $iCount = 1 [, $sName = ""]]]])
Function _Excel_SheetCopyMove(Requires: #include <Excel.au3>) |Copies or moves the specified sheet before or after a specified sheet in the same or a different workbook , $oSourceBook [, $vSourceSheet = Default [, $oTargetBook = $oSourceBook [, $vTargetSheet = 1 [, $bBefore = True [, $bCopy = True]]]]])
Function _Excel_SheetDelete(Requires: #include <Excel.au3>) |Deletes the specified sheet by object, string name or by number , $oWorkbook [, $vSheet = Default])
Function _Excel_SheetList(Requires: #include <Excel.au3>) |Returns a list of all sheets in the specified workbook , $oWorkbook)
Function _FileCountLines(Requires: #include <File.au3>) |Returns the number of lines in the specified file , $sFilePath)
Function _FileCreate(Requires: #include <File.au3>) |Creates or zero's out the length of the file specified , $sFilePath)
Function _FileListToArray(Similar to using Dir with the /B Switch) |Lists files and\or folders in a specified folder (Requires: #include <File.au3>), $sFilePath [, $sFilter = "*" [, $iFlag = $FLTA_FILESFOLDERS [, $bReturnPath = False]]])
Function _FileListToArrayRec(Requires: #include <File.au3>) |Lists files and\or folders in specified path with optional recursion to defined level and result sorting , $sFilePath [, $sMask = "*" [, $iReturn = $FLTAR_FILESFOLDERS [, $iRecur = $FLTAR_NORECUR [, $iSort = $FLTAR_NOSORT [, $iReturnPath = $FLTAR_RELPATH]]]]])
Function _FilePrint(Requires: #include <File.au3>) |Prints a plain text file , $sFilePath [, $iShow = @SW_HIDE])
Function _FileReadToArray(Requires: #include <File.au3>) |Reads the specified file into a 1D or 2D array , $sFilePath, ByRef $vReturn [, $iFlags = $FRTA_COUNT [, $sDelimiter = ""]])
Function _FileWriteFromArray(Requires: #include <File.au3>) |Writes an array to a specified file , $sFilePath, Const ByRef $aArray [, $iBase = Default [, $iUBound = Default [, $sDelimiter = "|"]]])
Function _FileWriteLog(Requires: #include <File.au3>) |Writes current date, time and the specified text to a log file , $sLogPath, $sLogMsg [, $iFlag = -1])
Function _FileWriteToLine(Requires: #include <File.au3>) |Writes text to a specific line in a file , $sFilePath, $iLine, $sText [, $bOverWrite = False])
Function _FTP_Close(Requires: #include <FTPEx.au3>) |Closes the _FTP_Open or _FTP_Connect session , $hSession)
Function _FTP_Command(Requires: #include <FTPEx.au3>) |Sends a command to an FTP server , $hFTPSession, $sFTPCommand [, $iFlags = $FTP_TRANSFER_TYPE_ASCII [, $iExpectResponse = 0 [, $iContext = 0]]])
Function _FTP_Connect(Requires: #include <FTPEx.au3>) |Connects to an FTP server , $hInternetSession, $sServerName, $sUsername, $sPassword [, $iPassive = 0 [, $iServerPort = 0 [, $iService = $INTERNET_SERVICE_FTP [, $iFlags = 0 [, $fuContext = 0]]]]])
Function _FTP_DecodeInternetStatus(Requires: #include <FTPEx.au3>) |Decode a received Internet Status , $iInternetStatus)
Function _FTP_DirCreate(Requires: #include <FTPEx.au3>) |Makes an Directory on an FTP server , $hFTPSession, $sRemote)
Function _FTP_DirDelete(Requires: #include <FTPEx.au3>) |Delete's an Directory on an FTP server , $hFTPSession, $sRemote)
Function _FTP_DirGetCurrent(Requires: #include <FTPEx.au3>) |Get Current Directory on an FTP server , $hFTPSession)
Function _FTP_DirPutContents(Requires: #include <FTPEx.au3>) |Puts an folder on an FTP server. Recursivley if selected , $hFTPSession, $sLocalFolder, $sRemoteFolder, $bRecursivePut [, $iContext = 0])
Function _FTP_DirSetCurrent(Requires: #include <FTPEx.au3>) |Set Current Directory on an FTP server , $hFTPSession, $sRemote)
Function _FTP_FileClose(Requires: #include <FTPEx.au3>) |Closes the Handle returned by _FTP_FileOpen , $hFTPFile)
Function _FTP_FileDelete(Requires: #include <FTPEx.au3>) |Delete an file from an FTP server , $hFTPSession, $sRemoteFile)
Function _FTP_FileGet(Requires: #include <FTPEx.au3>) |Get file from a FTP server , $hFTPSession, $sRemoteFile, $sLocalFile [, $bFailIfExists = False [, $iFlagsAndAttributes = 0 [, $iFlags = $FTP_TRANSFER_TYPE_UNKNOWN [, $iContext = 0]]]])
Function _FTP_FileGetSize(Requires: #include <FTPEx.au3>) |Gets filesize of a file on the FTP server , $hFTPSession, $sFileName)
Function _FTP_FileOpen(Requires: #include <FTPEx.au3>) |Initiates access to a remote file on an FTP server for reading or writing , $hConnect, $sFileName [, $iAccess = $GENERIC_READ [, $iFlags = $INTERNET_FLAG_TRANSFER_BINARY [, $iContext = 0]]])
Function _FTP_FilePut(Requires: #include <FTPEx.au3>) |Puts an file on an FTP server , $hFTPSession, $sLocalFile, $sRemoteFile [, $iFlags = 0 [, $iContext = 0]])
Function _FTP_FileRead() |Reads data from a handle opened by _FTP_FileOpen (Requires: #include <FTPEx.au3>), $hFTPFile, $iNumberOfBytesToRead)
Function _FTP_FileRename(Requires: #include <FTPEx.au3>) |Renames an file on an FTP server , $hFTPSession, $sExisting, $sNew)
Function _FTP_FileTimeLoHiToStr(Requires: #include <FTPEx.au3>) |Converts filetime Loword and Hiword to a string , $iLoDWORD, $iHiDWORD [, $bFmt = 0])
Function _FTP_FindFileClose(Requires: #include <FTPEx.au3>) |Delete FindFile Handle , $hFTPFind)
Function _FTP_FindFileFirst(Requires: #include <FTPEx.au3>) |Find First File on an FTP server , $hFTPSession, $sRemotePath, ByRef $hFTPFind [, $iFlags = 0 [, $iContext = 0]])
Function _FTP_FindFileNext(Requires: #include <FTPEx.au3>) |Find Next File on an FTP server , $hFTPFind)
Function _FTP_GetLastResponseInfo(Requires: #include <FTPEx.au3>) |Retrieves the last error description or server response on the thread calling this function , ByRef $iError, ByRef $sMessage)
Function _FTP_ListToArray(Requires: #include <FTPEx.au3>) |Get Filenames, Directories or Both of current remote directory , $hFTPSession [, $iReturnType = 0 [, $iFlags = $INTERNET_FLAG_NO_CACHE_WRITE [, $iContext = 0]]])
Function _FTP_ListToArray2D(Requires: #include <FTPEx.au3>) |Get Filenames and filesizes of current remote directory , $hFTPSession [, $iReturnType = 0 [, $iFlags = $INTERNET_FLAG_NO_CACHE_WRITE [, $iContext = 0]]])
Function _FTP_ListToArrayEx(Requires: #include <FTPEx.au3>) |Get names, sizes, attributes and times of files/dir of current remote directory , $hFTPSession [, $iReturnType = 0 [, $iFlags = $INTERNET_FLAG_NO_CACHE_WRITE [, $iFmt = 1 [, $iContext = 0]]]])
Function _FTP_Open(Requires: #include <FTPEx.au3>) |Opens an FTP session , $sAgent [, $iAccessType = $INTERNET_OPEN_TYPE_DIRECT [, $sProxyName = '' [, $sProxyBypass = '' [, $iFlags = 0]]]])
Function _FTP_ProgressDownload(Requires: #include <FTPEx.au3>) |Downloads a file in Binary Mode and shows a Progress window or by Calling a User defined Function , $hFTPSession, $sLocalFile, $sRemoteFile [, $hFunctionToCall = 0])
Function _FTP_ProgressUpload(Requires: #include <FTPEx.au3>) |Uploads a file in Binary Mode and shows a Progress window or by Calling a User defined Function , $hFTPSession, $sLocalFile, $sRemoteFile [, $hFunctionToCall = 0])
Function _FTP_SetStatusCallback(Requires: #include <FTPEx.au3>) |Registers callback function that WinINet functions can call as progress is made during an operation , $hInternetSession, $sFunctionName)
Function _GDIPlus_ArrowCapCreate(Requires: #include <GDIPlus.au3>) |Creates an adjustable arrow line cap with the specified height and width , $fHeight, $fWidth [, $bFilled = True])
Function _GDIPlus_ArrowCapDispose(Requires: #include <GDIPlus.au3>) |Release an adjustable arrow line cap object , $hCap)
Function _GDIPlus_ArrowCapGetFillState(Requires: #include <GDIPlus.au3>) |Determines whether the arrow cap is filled , $hArrowCap)
Function _GDIPlus_ArrowCapGetHeight(Requires: #include <GDIPlus.au3>) |Gets the height of the arrow cap , $hArrowCap)
Function _GDIPlus_ArrowCapGetMiddleInset(Requires: #include <GDIPlus.au3>) |Gets the value of the inset , $hArrowCap)
Function _GDIPlus_ArrowCapGetWidth(Requires: #include <GDIPlus.au3>) |Gets the width of the arrow cap , $hArrowCap)
Function _GDIPlus_ArrowCapSetFillState(Requires: #include <GDIPlus.au3>) |Sets whether the arrow cap is filled , $hArrowCap [, $bFilled = True])
Function _GDIPlus_ArrowCapSetHeight(Requires: #include <GDIPlus.au3>) |Sets the height of the arrow cap , $hArrowCap, $fHeight)
Function _GDIPlus_ArrowCapSetMiddleInset(Requires: #include <GDIPlus.au3>) |Gets the value of the inset , $hArrowCap, $fInset)
Function _GDIPlus_ArrowCapSetWidth(Requires: #include <GDIPlus.au3>) |Sets the width of the arrow cap , $hArrowCap, $fWidth)
Function _GDIPlus_BitmapApplyEffect(Requires: #include <GDIPlus.au3>) |Alters a Bitmap by applying a specified effect , $hBitmap, $hEffect [, $tRECT = Null])
Function _GDIPlus_BitmapApplyEffectEx(Requires: #include <GDIPlus.au3>) |Alters a Bitmap by applying a specified effect , $hBitmap, $hEffect [, $iX = 0 [, $iY = 0 [, $iW = 0 [, $iH = 0]]]])
Function _GDIPlus_BitmapCloneArea(Requires: #include <GDIPlus.au3>) |Create a clone of a Bitmap object from the coordinates and format specified , $hBitmap, $nLeft, $nTop, $nWidth, $nHeight [, $iFormat = 0x00021808])
Function _GDIPlus_BitmapConvertFormat(Requires: #include <GDIPlus.au3>) |Converts a bitmap to a specified pixel format , $hBitmap, $iPixelFormat, $iDitherType, $iPaletteType, $tPalette [, $fAlphaThresholdPercent = 0.0])
Function _GDIPlus_BitmapCreateApplyEffect(Requires: #include <GDIPlus.au3>) |Creates a new Bitmap by applying a specified effect to an existing Bitmap , $hBitmap, $hEffect [, $tRECT = Null [, $tOutRECT = Null]])
Function _GDIPlus_BitmapCreateApplyEffectEx(Requires: #include <GDIPlus.au3>) |Creates a new Bitmap by applying a specified effect to an existing Bitmap , $hBitmap, $hEffect [, $iX = 0 [, $iY = 0 [, $iW = 0 [, $iH = 0]]]])
Function _GDIPlus_BitmapCreateDIBFromBitmap(Requires: #include <GDIPlus.au3>) |Creates a DIB Section , $hBitmap)
Function _GDIPlus_BitmapCreateFromFile(Requires: #include <GDIPlus.au3>) |Create a Bitmap object from file , $sFileName)
Function _GDIPlus_BitmapCreateFromGraphics(Requires: #include <GDIPlus.au3>) |Creates a Bitmap object based on a Graphics object, a width, and a height , $iWidth, $iHeight, $hGraphics)
Function _GDIPlus_BitmapCreateFromHBITMAP(Requires: #include <GDIPlus.au3>) |Create a Bitmap object from a bitmap handle , $hBitmap [, $hPal = 0])
Function _GDIPlus_BitmapCreateFromHICON(Requires: #include <GDIPlus.au3>) |Creates a Bitmap object based on an icon , $hIcon)
Function _GDIPlus_BitmapCreateFromHICON32(Requires: #include <GDIPlus.au3>) |Creates a Bitmap object based on a 32bit icon , $hIcon)
Function _GDIPlus_BitmapCreateFromMemory(JPG, BMP, PNG, etc.) |Loads an image which is saved as a binary string and converts it to a bitmap (GDI+) or hbitmap (GDI) (Requires: #include <GDIPlus.au3>), $dImage [, $bHBITMAP = False])
Function _GDIPlus_BitmapCreateFromResource(Requires: #include <GDIPlus.au3>) |Creates a Bitmap object based on an icon , $hInst, $vResourceName)
Function _GDIPlus_BitmapCreateFromScan0(Requires: #include <GDIPlus.au3>) |Creates a Bitmap object based on an array of bytes along with size and format information , $iWidth, $iHeight [, $iPixelFormat = $GDIP_PXF32ARGB [, $iStride = 0 [, $pScan0 = 0]]])
Function _GDIPlus_BitmapCreateFromStream(Requires: #include <GDIPlus.au3>) |Creates a Bitmap object based on an IStream COM interface , $pStream)
Function _GDIPlus_BitmapCreateHBITMAPFromBitmap(Requires: #include <GDIPlus.au3>) |Create a handle to a bitmap from a bitmap object , $hBitmap [, $iARGB = 0xFF000000])
Function _GDIPlus_BitmapDispose(Requires: #include <GDIPlus.au3>) |Release a bitmap object , $hBitmap)
Function _GDIPlus_BitmapGetHistogram(Requires: #include <GDIPlus.au3>) |Returns one or more histograms for specified color channels of the specified Bitmap , $hBitmap, $iHistogramFormat, $iHistogramSize, $tChannel_0 [, $tChannel_1 = 0 [, $tChannel_2 = 0 [, $tChannel_3 = 0]]])
Function _GDIPlus_BitmapGetHistogramEx(Requires: #include <GDIPlus.au3>) |Returns histograms for the BitmapÂ´s color channels: Red, Green, Blue, Alpha and Grey , $hBitmap)
Function _GDIPlus_BitmapGetHistogramSize() |Returns the number of elements for allocation by _GDIPlus_BitmapGetHistogramEx (Requires: #include <GDIPlus.au3>), $iFormat)
Function _GDIPlus_BitmapGetPixel(Requires: #include <GDIPlus.au3>) |Gets the color of a specified pixel in this bitmap , $hBitmap, $iX, $iY)
Function _GDIPlus_BitmapLockBits(Requires: #include <GDIPlus.au3>) |Locks a portion of a bitmap for reading or writing , $hBitmap, $iLeft, $iTop, $iWidth, $iHeight [, $iFlags = $GDIP_ILMREAD [, $iFormat = $GDIP_PXF32RGB]])
Function _GDIPlus_BitmapSetPixel(Requires: #include <GDIPlus.au3>) |Sets the color of a specified pixel in this bitmap , $hBitmap, $iX, $iY, $iARGB)
Function _GDIPlus_BitmapUnlockBits(Requires: #include <GDIPlus.au3>) |Unlocks a portion of a bitmap that was locked by _GDIPlus_BitmapLockBits , $hBitmap, $tBitmapData)
Function _GDIPlus_BrushClone(Requires: #include <GDIPlus.au3>) |Clone a Brush object , $hBrush)
Function _GDIPlus_BrushCreateSolid(Requires: #include <GDIPlus.au3>) |Create a solid Brush object , [$iARGB = 0xFF000000])
Function _GDIPlus_BrushDispose(Requires: #include <GDIPlus.au3>) |Release a Brush object , $hBrush)
Function _GDIPlus_BrushGetSolidColor(Requires: #include <GDIPlus.au3>) |Get the color of a Solid Brush object , $hBrush)
Function _GDIPlus_BrushGetType(Requires: #include <GDIPlus.au3>) |Retrieve the type of Brush object , $hBrush)
Function _GDIPlus_BrushSetSolidColor(Requires: #include <GDIPlus.au3>) |Set the color of a Solid Brush object , $hBrush [, $iARGB = 0xFF000000])
Function _GDIPlus_ColorMatrixCreate(Requires: #include <GDIPlus.au3>) |Creates and initializes an identity color matrix 
Function _GDIPlus_ColorMatrixCreateGrayScale(Requires: #include <GDIPlus.au3>) |Creates and initializes a gray-scaling color matrix 
Function _GDIPlus_ColorMatrixCreateNegative(Requires: #include <GDIPlus.au3>) |Creates and initializes a negative color matrix 
Function _GDIPlus_ColorMatrixCreateSaturation(Requires: #include <GDIPlus.au3>) |Creates and initializes a saturation color matrix , $fSat)
Function _GDIPlus_ColorMatrixCreateScale(Requires: #include <GDIPlus.au3>) |Creates and initializes a scaling color matrix , $fRed, $fGreen, $fBlue [, $fAlpha = 1])
Function _GDIPlus_ColorMatrixCreateTranslate(Requires: #include <GDIPlus.au3>) |Creates and initializes a translation color matrix , $fRed, $fGreen, $fBlue [, $fAlpha = 0])
Function _GDIPlus_CustomLineCapClone(Requires: #include <GDIPlus.au3>) |Clones a CustomLineCap object , $hCustomLineCap)
Function _GDIPlus_CustomLineCapCreate(Requires: #include <GDIPlus.au3>) |Creates a CustomLineCap object , $hPathFill, $hPathStroke [, $iLineCap = 0 [, $nBaseInset = 0]])
Function _GDIPlus_CustomLineCapDispose(Requires: #include <GDIPlus.au3>) |Release a custom line cap object , $hCap)
Function _GDIPlus_CustomLineCapGetStrokeCaps(Requires: #include <GDIPlus.au3>) |Gets the end cap styles for both the start line cap and the end line cap , $hCustomLineCap)
Function _GDIPlus_CustomLineCapSetStrokeCaps(Requires: #include <GDIPlus.au3>) |Sets the distance between the base cap to the start of the line , $hCustomLineCap, $iStartCap, $iEndCap)
Function _GDIPlus_Decoders(Requires: #include <GDIPlus.au3>) |Get an array of information about the available image decoders 
Function _GDIPlus_DecodersGetCount(Requires: #include <GDIPlus.au3>) |Get the number of available image decoders 
Function _GDIPlus_DecodersGetSize(Requires: #include <GDIPlus.au3>) |Get the total size of the structure that is returned by _GDIPlus_GetImageDecoders 
Function _GDIPlus_DrawImageFX(Requires: #include <GDIPlus.au3>) |Draws a portion of an image after applying a specified effect , $hGraphics, $hImage, $hEffect [, $tRECTF = 0 [, $hMatrix = 0 [, $hImgAttributes = 0 [, $iUnit = 2]]]])
Function _GDIPlus_DrawImageFXEx(Requires: #include <GDIPlus.au3>) |Draws a portion of an image after applying a specified effect , $hGraphics, $hImage, $hEffect [, $nX = 0 [, $nY = 0 [, $nW = 0 [, $nH = 0 [, $hMatrix = 0 [, $hImgAttributes = 0 [, $iUnit = 2]]]]]]])
Function _GDIPlus_DrawImagePoints(Requires: #include <GDIPlus.au3>) |Draws an image at a specified location , $hGraphic, $hImage, $nULX, $nULY, $nURX, $nURY, $nLLX, $nLLY [, $iCount = 3])
Function _GDIPlus_EffectCreate(Requires: #include <GDIPlus.au3>) |Creates an Effect object of the type specified by the guid parameter , $sEffectGUID)
Function _GDIPlus_EffectCreateBlur(Requires: #include <GDIPlus.au3>) |Creates a Blur class effect object , [$fRadius = 10.0 [, $bExpandEdge = False]])
Function _GDIPlus_EffectCreateBrightnessContrast(Requires: #include <GDIPlus.au3>) |Creates a BrightnessContrast class effect object , [$iBrightnessLevel = 0 [, $iContrastLevel = 0]])
Function _GDIPlus_EffectCreateColorBalance(Requires: #include <GDIPlus.au3>) |Creates a ColorBalance class effect object , [$iCyanRed = 0 [, $iMagentaGreen = 0 [, $iYellowBlue = 0]]])
Function _GDIPlus_EffectCreateColorCurve(Requires: #include <GDIPlus.au3>) |Creates a ColorBalance class effect object , $iAdjustment, $iChannel, $iAdjustValue)
Function _GDIPlus_EffectCreateColorLUT(Requires: #include <GDIPlus.au3>) |Creates a ColorLUT class effect object , $aColorLUT)
Function _GDIPlus_EffectCreateColorMatrix(Requires: #include <GDIPlus.au3>) |Creates a ColorMatrixEffect class effect object , $tColorMatrix)
Function _GDIPlus_EffectCreateHueSaturationLightness(Requires: #include <GDIPlus.au3>) |Creates a HueSaturationLightness class effect object , [$iHueLevel = 0 [, $iSaturationLevel = 0 [, $iLightnessLevel = 0]]])
Function _GDIPlus_EffectCreateLevels(Requires: #include <GDIPlus.au3>) |Creates a Levels class effect object , [$iHighlight = 100 [, $iMidtone = 0 [, $iShadow = 0]]])
Function _GDIPlus_EffectCreateRedEyeCorrection(Requires: #include <GDIPlus.au3>) |Creates a RedEyeCorrection class effect object , $aAreas)
Function _GDIPlus_EffectCreateSharpen(Requires: #include <GDIPlus.au3>) |Creates a Sharpen class effect object , [$fRadius = 10.0 [, $fAmount = 50.0]])
Function _GDIPlus_EffectCreateTint(Requires: #include <GDIPlus.au3>) |Creates a Tint class effect object , [$iHue = 0 [, $iAmount = 0]])
Function _GDIPlus_EffectDispose(Requires: #include <GDIPlus.au3>) |Deletes the specified Effect object , $hEffect)
Function _GDIPlus_EffectGetParameters(Requires: #include <GDIPlus.au3>) |Returns the parameters for the specified Effect object , $hEffect, $tEffectParameters)
Function _GDIPlus_EffectSetParameters(Requires: #include <GDIPlus.au3>) |Sets the parameters for the specified Effect object , $hEffect, $tEffectParameters [, $iSizeAdjust = 1])
Function _GDIPlus_Encoders(Requires: #include <GDIPlus.au3>) |Get an array of information about the available image encoders 
Function _GDIPlus_EncodersGetCLSID(Requires: #include <GDIPlus.au3>) |Return the encoder CLSID for a specific image file type , $sFileExtension)
Function _GDIPlus_EncodersGetCount(Requires: #include <GDIPlus.au3>) |Get the number of available image encoders 
Function _GDIPlus_EncodersGetParamList(Requires: #include <GDIPlus.au3>) |Get the parameter list for a specified image encoder , $hImage, $sEncoder)
Function _GDIPlus_EncodersGetParamListSize(Requires: #include <GDIPlus.au3>) |Get the size of the parameter list for a specified image encoder , $hImage, $sEncoder)
Function _GDIPlus_EncodersGetSize(Requires: #include <GDIPlus.au3>) |Get the total size of the structure that is returned by _GDIPlus_GetImageEncoders 
Function _GDIPlus_FontCreate(Requires: #include <GDIPlus.au3>) |Create a Font object , $hFamily, $fSize [, $iStyle = 0 [, $iUnit = 3]])
Function _GDIPlus_FontDispose(Requires: #include <GDIPlus.au3>) |Release a Font object , $hFont)
Function _GDIPlus_FontFamilyCreate(Requires: #include <GDIPlus.au3>) |Create a Font Family object , $sFamily [, $pCollection = 0])
Function _GDIPlus_FontFamilyCreateFromCollection(Requires: #include <GDIPlus.au3>) |Creates a FontFamily object based on a specified font family , $sFontName, $hFontCollection)
Function _GDIPlus_FontFamilyDispose(Requires: #include <GDIPlus.au3>) |Release a Font Family object , $hFamily)
Function _GDIPlus_FontFamilyGetCellAscent(Requires: #include <GDIPlus.au3>) |Gets the cell ascent, in design units, of a font family for the specified style or style combination , $hFontFamily [, $iStyle = 0])
Function _GDIPlus_FontFamilyGetCellDescent(Requires: #include <GDIPlus.au3>) |Gets the cell descent, in design units, of a font family for the specified style or style combination , $hFontFamily [, $iStyle = 0])
Function _GDIPlus_FontFamilyGetEmHeight(commonly called em size or em height) |Gets the size , in design units, of a font family (Requires: #include <GDIPlus.au3>), $hFontFamily [, $iStyle = 0])
Function _GDIPlus_FontFamilyGetLineSpacing(Requires: #include <GDIPlus.au3>) |Gets the line spacing, in design units, of this font family for the specified style or style combination , $hFontFamily [, $iStyle = 0])
Function _GDIPlus_FontGetHeight(Requires: #include <GDIPlus.au3>) |Gets the line spacing of a font in the current unit of a specified Graphics object , $hFont, $hGraphics)
Function _GDIPlus_FontPrivateAddFont(Requires: #include <GDIPlus.au3>) |Adds a font file to the private font collection , $hFontCollection, $sFontFile)
Function _GDIPlus_FontPrivateAddMemoryFont(Requires: #include <GDIPlus.au3>) |Adds a font that is contained in system memory to a MicrosoftÂ® WindowsÂ® GDI+ font collection , $hFontCollection, $tFont)
Function _GDIPlus_FontPrivateCollectionDispose(Requires: #include <GDIPlus.au3>) |Deletes the specified PrivateFontCollection object , $hFontCollection)
Function _GDIPlus_FontPrivateCreateCollection(Requires: #include <GDIPlus.au3>) |Creates a PrivateFont Collection object 
Function _GDIPlus_GraphicsClear(Requires: #include <GDIPlus.au3>) |Clears a Graphics object to a specified color , $hGraphics [, $iARGB = 0xFF000000])
Function _GDIPlus_GraphicsCreateFromHDC(DC) |Create a Graphics object from a device context (Requires: #include <GDIPlus.au3>), $hDC)
Function _GDIPlus_GraphicsCreateFromHWND(Requires: #include <GDIPlus.au3>) |Create a Graphics object from a window handle , $hWnd)
Function _GDIPlus_GraphicsDispose(Requires: #include <GDIPlus.au3>) |Release a Graphics object , $hGraphics)
Function _GDIPlus_GraphicsDrawArc(Requires: #include <GDIPlus.au3>) |Draw an arc , $hGraphics, $nX, $nY, $nWidth, $nHeight, $fStartAngle, $fSweepAngle [, $hPen = 0])
Function _GDIPlus_GraphicsDrawBezier(Requires: #include <GDIPlus.au3>) |Draw a bezier spline , $hGraphics, $nX1, $nY1, $nX2, $nY2, $nX3, $nY3, $nX4, $nY4 [, $hPen = 0])
Function _GDIPlus_GraphicsDrawClosedCurve(Requires: #include <GDIPlus.au3>) |Draw a closed cardinal spline , $hGraphics, $aPoints [, $hPen = 0])
Function _GDIPlus_GraphicsDrawClosedCurve2(Requires: #include <GDIPlus.au3>) |Draws a closed cardinal spline , $hGraphics, $aPoints, $nTension [, $hPen = 0])
Function _GDIPlus_GraphicsDrawCurve(Requires: #include <GDIPlus.au3>) |Draw a cardinal spline , $hGraphics, $aPoints [, $hPen = 0])
Function _GDIPlus_GraphicsDrawCurve2(Requires: #include <GDIPlus.au3>) |Draws a cardinal spline , $hGraphics, $aPoints, $nTension [, $hPen = 0])
Function _GDIPlus_GraphicsDrawEllipse(Requires: #include <GDIPlus.au3>) |Draw an ellipse , $hGraphics, $nX, $nY, $nWidth, $nHeight [, $hPen = 0])
Function _GDIPlus_GraphicsDrawImage(Requires: #include <GDIPlus.au3>) |Draw an Image object , $hGraphics, $hImage, $nX, $nY)
Function _GDIPlus_GraphicsDrawImagePointsRect(Requires: #include <GDIPlus.au3>) |Draws an image , $hGraphics, $hImage, $nULX, $nULY, $nURX, $nURY, $nLLX, $nLLY, $nSrcX, $nSrcY, $nSrcWidth, $nSrcHeight [, $hImageAttributes = 0 [, $iUnit = 2]])
Function _GDIPlus_GraphicsDrawImageRect(Requires: #include <GDIPlus.au3>) |Draws an image at a specified location , $hGraphics, $hImage, $nX, $nY, $nW, $nH)
Function _GDIPlus_GraphicsDrawImageRectRect(Requires: #include <GDIPlus.au3>) |Draw an Image object , $hGraphics, $hImage, $nSrcX, $nSrcY, $nSrcWidth, $nSrcHeight, $nDstX, $nDstY, $nDstWidth, $nDstHeight [, $pAttributes = 0 [, $iUnit = 2]])
Function _GDIPlus_GraphicsDrawLine(Requires: #include <GDIPlus.au3>) |Draw a line , $hGraphics, $nX1, $nY1, $nX2, $nY2 [, $hPen = 0])
Function _GDIPlus_GraphicsDrawPath(Requires: #include <GDIPlus.au3>) |Draws a sequence of lines and curves defined by a GraphicsPath object , $hGraphics, $hPath [, $hPen = 0])
Function _GDIPlus_GraphicsDrawPie(Requires: #include <GDIPlus.au3>) |Draw a pie , $hGraphics, $nX, $nY, $nWidth, $nHeight, $fStartAngle, $fSweepAngle [, $hPen = 0])
Function _GDIPlus_GraphicsDrawPolygon(Requires: #include <GDIPlus.au3>) |Draw a polygon , $hGraphics, $aPoints [, $hPen = 0])
Function _GDIPlus_GraphicsDrawRect(Requires: #include <GDIPlus.au3>) |Draw a rectangle , $hGraphics, $nX, $nY, $nWidth, $nHeight [, $hPen = 0])
Function _GDIPlus_GraphicsDrawString(Requires: #include <GDIPlus.au3>) |Draw a string , $hGraphics, $sString, $nX, $nY [, $sFont = "Arial" [, $fSize = 10 [, $iFormat = 0]]])
Function _GDIPlus_GraphicsDrawStringEx(Requires: #include <GDIPlus.au3>) |Draw a string , $hGraphics, $sString, $hFont, $tLayout, $hFormat, $hBrush)
Function _GDIPlus_GraphicsFillClosedCurve(Requires: #include <GDIPlus.au3>) |Fill a closed cardinal spline , $hGraphics, $aPoints [, $hBrush = 0])
Function _GDIPlus_GraphicsFillClosedCurve2(Requires: #include <GDIPlus.au3>) |Creates a closed cardinal spline from an array of points and uses a brush to fill the interior of the spline , $hGraphics, $aPoints, $nTension [, $hBrush = 0 [, $iFillMode = 0]])
Function _GDIPlus_GraphicsFillEllipse(Requires: #include <GDIPlus.au3>) |Fill an ellipse , $hGraphics, $nX, $nY, $nWidth, $nHeight [, $hBrush = 0])
Function _GDIPlus_GraphicsFillPath(Requires: #include <GDIPlus.au3>) |Uses a brush to fill the interior of a path , $hGraphics, $hPath [, $hBrush = 0])
Function _GDIPlus_GraphicsFillPie(Requires: #include <GDIPlus.au3>) |Fill a pie , $hGraphics, $nX, $nY, $nWidth, $nHeight, $fStartAngle, $fSweepAngle [, $hBrush = 0])
Function _GDIPlus_GraphicsFillPolygon(Requires: #include <GDIPlus.au3>) |Fill a polygon , $hGraphics, $aPoints [, $hBrush = 0])
Function _GDIPlus_GraphicsFillRect(Requires: #include <GDIPlus.au3>) |Fill a rectangle , $hGraphics, $nX, $nY, $nWidth, $nHeight [, $hBrush = 0])
Function _GDIPlus_GraphicsFillRegion(Requires: #include <GDIPlus.au3>) |Uses a brush to fill a specified region , $hGraphics, $hRegion [, $hBrush = 0])
Function _GDIPlus_GraphicsGetCompositingMode(Requires: #include <GDIPlus.au3>) |Gets the compositing mode currently set for a Graphics object , $hGraphics)
Function _GDIPlus_GraphicsGetCompositingQuality(Requires: #include <GDIPlus.au3>) |Gets the compositing quality currently set for a Graphics object , $hGraphics)
Function _GDIPlus_GraphicsGetDC(Requires: #include <GDIPlus.au3>) |Gets a handle to the device context of the Graphics object , $hGraphics)
Function _GDIPlus_GraphicsGetInterpolationMode(Requires: #include <GDIPlus.au3>) |Gets the interpolation mode currently set for a Graphics object , $hGraphics)
Function _GDIPlus_GraphicsGetSmoothingMode(Requires: #include <GDIPlus.au3>) |Gets the graphics object rendering quality , $hGraphics)
Function _GDIPlus_GraphicsGetTransform(Requires: #include <GDIPlus.au3>) |Gets the world transformation matrix of a Graphics object , $hGraphics, $hMatrix)
Function _GDIPlus_GraphicsMeasureCharacterRanges(Requires: #include <GDIPlus.au3>) |Gets a set of region objects each of which bounds a range of character positions within a string , $hGraphics, $sString, $hFont, $tLayout, $hStringFormat)
Function _GDIPlus_GraphicsMeasureString(Requires: #include <GDIPlus.au3>) |Measures the size of a string , $hGraphics, $sString, $hFont, $tLayout, $hFormat)
Function _GDIPlus_GraphicsReleaseDC(Requires: #include <GDIPlus.au3>) |Releases the device context of the Graphics object , $hGraphics, $hDC)
Function _GDIPlus_GraphicsResetClip(Requires: #include <GDIPlus.au3>) |Sets the clipping region of a Graphics object to an infinite region , $hGraphics)
Function _GDIPlus_GraphicsResetTransform(Requires: #include <GDIPlus.au3>) |Sets the world transformation matrix of a Graphics object to the identity matrix , $hGraphics)
Function _GDIPlus_GraphicsRestore(Requires: #include <GDIPlus.au3>) |Restores the state of a Graphics object to the state stored by a previous call to the _GDIPlus_GraphicsSave method of the Graphics object , $hGraphics, $iState)
Function _GDIPlus_GraphicsRotateTransform(Requires: #include <GDIPlus.au3>) |Updates the world transformation matrix of a Graphics object with the product of itself and a rotation matrix , $hGraphics, $fAngle [, $iOrder = 0])
Function _GDIPlus_GraphicsSave(transformations, clipping region, and quality settings) |Saves the current state of a Graphics object (Requires: #include <GDIPlus.au3>), $hGraphics)
Function _GDIPlus_GraphicsScaleTransform(Requires: #include <GDIPlus.au3>) |Updates a Graphics object's world transformation matrix with the product of itself and a scaling matrix , $hGraphics, $fScaleX, $fScaleY [, $iOrder = 0])
Function _GDIPlus_GraphicsSetClipPath(Requires: #include <GDIPlus.au3>) |Updates the clipping region of this Graphics object to a region that is the combination of itself and the region specified by a graphics path , $hGraphics, $hPath [, $iCombineMode = 0])
Function _GDIPlus_GraphicsSetClipRect(Requires: #include <GDIPlus.au3>) |Updates the clipping region of a Graphics object to a region that is the combination of itself and a rectangle , $hGraphics, $nX, $nY, $nWidth, $nHeight [, $iCombineMode = 0])
Function _GDIPlus_GraphicsSetClipRegion(Requires: #include <GDIPlus.au3>) |Updates the clipping region of a Graphics object to a region that is the combination of itself and the region specified by a Region object , $hGraphics, $hRegion [, $iCombineMode = 0])
Function _GDIPlus_GraphicsSetCompositingMode(Requires: #include <GDIPlus.au3>) |Sets the compositing mode of a Graphics object , $hGraphics, $iCompositionMode)
Function _GDIPlus_GraphicsSetCompositingQuality(Requires: #include <GDIPlus.au3>) |Sets the compositing quality of a Graphics object , $hGraphics, $iCompositionQuality)
Function _GDIPlus_GraphicsSetInterpolationMode(Requires: #include <GDIPlus.au3>) |Sets the interpolation mode of a Graphics object , $hGraphics, $iInterpolationMode)
Function _GDIPlus_GraphicsSetPixelOffsetMode(Requires: #include <GDIPlus.au3>) |Sets the pixel offset mode of a Graphics object , $hGraphics, $iPixelOffsetMode)
Function _GDIPlus_GraphicsSetSmoothingMode(Requires: #include <GDIPlus.au3>) |Sets the graphics object rendering quality , $hGraphics, $iSmooth)
Function _GDIPlus_GraphicsSetTextRenderingHint(Requires: #include <GDIPlus.au3>) |Sets the contrast value of a Graphics object , $hGraphics, $iTextRenderingHint)
Function _GDIPlus_GraphicsSetTransform(Requires: #include <GDIPlus.au3>) |Sets the world transformation for a graphics object , $hGraphics, $hMatrix)
Function _GDIPlus_GraphicsTransformPoints(Requires: #include <GDIPlus.au3>) |Converts an array of points from one coordinate space to another , $hGraphics, ByRef $aPoints [, $iCoordSpaceTo = 0 [, $iCoordSpaceFrom = 1]])
Function _GDIPlus_GraphicsTranslateTransform(Requires: #include <GDIPlus.au3>) |Updates a Graphics object's world transformation matrix with the product of itself and a translation matrix , $hGraphics, $nDX, $nDY [, $iOrder = 0])
Function _GDIPlus_HatchBrushCreate(Requires: #include <GDIPlus.au3>) |Creates a HatchBrush object based on a hatch style, a foreground color, and a background color , [$iHatchStyle = 0 [, $iARGBForeground = 0xFFFFFFFF [, $iARGBBackground = 0xFFFFFFFF]]])
Function _GDIPlus_HICONCreateFromBitmap(Requires: #include <GDIPlus.au3>) |Creates an icon handle from a bitmap object , $hBitmap)
Function _GDIPlus_ImageAttributesCreate(Requires: #include <GDIPlus.au3>) |Creates an ImageAttributes object 
Function _GDIPlus_ImageAttributesDispose(Requires: #include <GDIPlus.au3>) |Releases an ImageAttributes object , $hImageAttributes)
Function _GDIPlus_ImageAttributesSetColorKeys(transparency range) |Sets or clears the color key for a specified category (Requires: #include <GDIPlus.au3>), $hImageAttributes [, $iColorAdjustType = 0 [, $bEnable = False [, $iARGBLow = 0 [, $iARGBHigh = 0]]]])
Function _GDIPlus_ImageAttributesSetColorMatrix(Requires: #include <GDIPlus.au3>) |Sets or clears the color- and grayscale-adjustment matrices for a specified category , $hImageAttributes [, $iColorAdjustType = 0 [, $bEnable = False [, $tClrMatrix = 0 [, $tGrayMatrix = 0 [, $iColorMatrixFlags = 0]]]]])
Function _GDIPlus_ImageDispose(Requires: #include <GDIPlus.au3>) |Release an image object , $hImage)
Function _GDIPlus_ImageGetDimension(Requires: #include <GDIPlus.au3>) |Gets the width and height of an image which is supported by GDIPlus , $hImage)
Function _GDIPlus_ImageGetFlags(Requires: #include <GDIPlus.au3>) |Returns enumeration of pixel data attributes contained in an image , $hImage)
Function _GDIPlus_ImageGetGraphicsContext(Requires: #include <GDIPlus.au3>) |Get the graphics context of the image , $hImage)
Function _GDIPlus_ImageGetHeight(Requires: #include <GDIPlus.au3>) |Get the image height , $hImage)
Function _GDIPlus_ImageGetHorizontalResolution(pixels per inch) |Returns horizontal resolution in DPI of an image (Requires: #include <GDIPlus.au3>), $hImage)
Function _GDIPlus_ImageGetPixelFormat(Requires: #include <GDIPlus.au3>) |Returns pixel format of an image: Bits per pixel, Alpha channels, RGB, Grayscale, Indexed etc , $hImage)
Function _GDIPlus_ImageGetRawFormat(Requires: #include <GDIPlus.au3>) |Returns file format GUID and image format name of an image , $hImage)
Function _GDIPlus_ImageGetThumbnail(Requires: #include <GDIPlus.au3>) |Gets a thumbnail image from this Image object , $hImage [, $iWidth = 0 [, $iHeight = 0 [, $bKeepRatio = True [, $hCallback = Null [, $hCallbackData = Null]]]]])
Function _GDIPlus_ImageGetType(bitmap or metafile) |Returns type of an image (Requires: #include <GDIPlus.au3>), $hImage)
Function _GDIPlus_ImageGetVerticalResolution(pixels per inch) |Returns vertical resolution in DPI of an image (Requires: #include <GDIPlus.au3>), $hImage)
Function _GDIPlus_ImageGetWidth(Requires: #include <GDIPlus.au3>) |Get the image width , $hImage)
Function _GDIPlus_ImageLoadFromFile(Requires: #include <GDIPlus.au3>) |Create an image object based on a file , $sFileName)
Function _GDIPlus_ImageLoadFromStream(Requires: #include <GDIPlus.au3>) |Creates an Image object based on a stream , $pStream)
Function _GDIPlus_ImageResize(Requires: #include <GDIPlus.au3>) |Resize an image to a new given size , $hImage, $iNewWidth, $iNewHeight [, $iInterpolationMode = $GDIP_INTERPOLATIONMODE_HIGHQUALITYBICUBIC])
Function _GDIPlus_ImageRotateFlip(Requires: #include <GDIPlus.au3>) |Rotates and flips an image , $hImage, $iRotateFlipType)
Function _GDIPlus_ImageSaveToFile(Requires: #include <GDIPlus.au3>) |Save an image to file , $hImage, $sFileName)
Function _GDIPlus_ImageSaveToFileEx(Requires: #include <GDIPlus.au3>) |Save an image to file , $hImage, $sFileName, $sEncoder [, $tParams = 0])
Function _GDIPlus_ImageSaveToStream(Requires: #include <GDIPlus.au3>) |Saves an Image object to a stream , $hImage, $pStream, $tEncoder [, $tParams = 0])
Function _GDIPlus_ImageScale(Requires: #include <GDIPlus.au3>) |Scales an image by a given factor , $hImage, $iScaleW, $iScaleH [, $iInterpolationMode = $GDIP_INTERPOLATIONMODE_HIGHQUALITYBICUBIC])
Function _GDIPlus_LineBrushCreate(Requires: #include <GDIPlus.au3>) |Creates a LinearGradientBrush object from a set of boundary points and boundary colors , $nX1, $nY1, $nX2, $nY2, $iARGBClr1, $iARGBClr2 [, $iWrapMode = 0])
Function _GDIPlus_LineBrushCreateFromRect(Requires: #include <GDIPlus.au3>) |Creates a LinearGradientBrush object from a rectangle and boundary colors , $tRECTF, $iARGBClr1, $iARGBClr2 [, $iGradientMode = 0 [, $iWrapMode = 0]])
Function _GDIPlus_LineBrushCreateFromRectWithAngle(Requires: #include <GDIPlus.au3>) |Creates a LinearGradientBrush object from a rectangle, boundary colors and angle of direction , $tRECTF, $iARGBClr1, $iARGBClr2, $fAngle [, $bIsAngleScalable = True [, $iWrapMode = 0]])
Function _GDIPlus_LineBrushGetColors(Requires: #include <GDIPlus.au3>) |Gets the starting color and ending color of a linear gradient brush , $hLineGradientBrush)
Function _GDIPlus_LineBrushGetRect(Requires: #include <GDIPlus.au3>) |Gets the rectangle that defines the boundaries of a linear gradient brush , $hLineGradientBrush)
Function _GDIPlus_LineBrushMultiplyTransform(Requires: #include <GDIPlus.au3>) |Updates a brush's transformation matrix with the product of itself and another matrix , $hLineGradientBrush, $hMatrix [, $iOrder = 0])
Function _GDIPlus_LineBrushResetTransform(Requires: #include <GDIPlus.au3>) |Resets the transformation matrix of a linear gradient brush to the identity matrix , $hLineGradientBrush)
Function _GDIPlus_LineBrushSetBlend(Requires: #include <GDIPlus.au3>) |Sets the blend factors and the blend positions of a linear gradient brush to create a custom blend , $hLineGradientBrush, $aBlends)
Function _GDIPlus_LineBrushSetColors(Requires: #include <GDIPlus.au3>) |Sets the starting color and ending color of a linear gradient brush , $hLineGradientBrush, $iARGBStart, $iARGBEnd)
Function _GDIPlus_LineBrushSetGammaCorrection(Requires: #include <GDIPlus.au3>) |Specifies whether gamma correction is enabled for a linear gradient brush , $hLineGradientBrush [, $bUseGammaCorrection = True])
Function _GDIPlus_LineBrushSetLinearBlend(Requires: #include <GDIPlus.au3>) |Sets the blend shape of a linear gradient brush to create a custom blend based on a triangular shape , $hLineGradientBrush, $fFocus [, $fScale = 1])
Function _GDIPlus_LineBrushSetPresetBlend(Requires: #include <GDIPlus.au3>) |Sets the colors to be interpolated for a linear gradient brush and their corresponding blend positions , $hLineGradientBrush, $aInterpolations)
Function _GDIPlus_LineBrushSetSigmaBlend(Requires: #include <GDIPlus.au3>) |Sets the blend shape of a linear gradient brush to create a custom blend based on a bell-shaped curve , $hLineGradientBrush, $fFocus [, $fScale = 1])
Function _GDIPlus_LineBrushSetTransform(Requires: #include <GDIPlus.au3>) |Sets the transformation matrix of a linear gradient brush , $hLineGradientBrush, $hMatrix)
Function _GDIPlus_MatrixClone(Requires: #include <GDIPlus.au3>) |Clones a Matrix object , $hMatrix)
Function _GDIPlus_MatrixCreate(Requires: #include <GDIPlus.au3>) |Creates and initializes a Matrix object that represents the identity matrix 
Function _GDIPlus_MatrixDispose(Requires: #include <GDIPlus.au3>) |Release a matrix object , $hMatrix)
Function _GDIPlus_MatrixGetElements(Requires: #include <GDIPlus.au3>) |Gets the elements of a matrix , $hMatrix)
Function _GDIPlus_MatrixInvert(Requires: #include <GDIPlus.au3>) |Replaces the elements of a matrix with the elements of its inverse , $hMatrix)
Function _GDIPlus_MatrixMultiply(Requires: #include <GDIPlus.au3>) |Updates a matrix with the product of itself and another matrix , $hMatrix1, $hMatrix2 [, $iOrder = 0])
Function _GDIPlus_MatrixRotate(Requires: #include <GDIPlus.au3>) |Updates a matrix with the product of itself and a rotation matrix , $hMatrix, $fAngle [, $bAppend = False])
Function _GDIPlus_MatrixScale(Requires: #include <GDIPlus.au3>) |Updates a matrix with the product of itself and a scaling matrix , $hMatrix, $fScaleX, $fScaleY [, $bOrder = False])
Function _GDIPlus_MatrixSetElements(Requires: #include <GDIPlus.au3>) |Sets the elements of a matrix , $hMatrix [, $nM11 = 1 [, $nM12 = 0 [, $nM21 = 0 [, $nM22 = 1 [, $nDX = 0 [, $nDY = 0]]]]]])
Function _GDIPlus_MatrixShear(Requires: #include <GDIPlus.au3>) |Updates a matrix with the product of itself and another matrix , $hMatrix, $fShearX, $fShearY [, $iOrder = 0])
Function _GDIPlus_MatrixTransformPoints(Requires: #include <GDIPlus.au3>) |Multiplies each point in an array by a matrix , $hMatrix, ByRef $aPoints)
Function _GDIPlus_MatrixTranslate(Requires: #include <GDIPlus.au3>) |Updates a matrix with the product of itself and a translation matrix , $hMatrix, $fOffsetX, $fOffsetY [, $bAppend = False])
Function _GDIPlus_PaletteInitialize(Requires: #include <GDIPlus.au3>) |Initializes a standard, optimal, or custom color palette , $iEntries [, $iPaletteType = $GDIP_PaletteTypeOptimal [, $iOptimalColors = 0 [, $bUseTransparentColor = True [, $hBitmap = Null]]]])
Function _GDIPlus_ParamAdd(Requires: #include <GDIPlus.au3>) |Add a value to an encoder parameter list , ByRef $tParams, $sGUID, $iNbOfValues, $iType, $pValues)
Function _GDIPlus_ParamInit(Requires: #include <GDIPlus.au3>) |Allocate an empty encoder parameter list , $iCount)
Function _GDIPlus_ParamSize(Requires: #include <GDIPlus.au3>) |Get an encoder parameter size 
Function _GDIPlus_PathAddArc(Requires: #include <GDIPlus.au3>) |Adds an elliptical arc to the current figure of a path , $hPath, $nX, $nY, $nWidth, $nHeight, $fStartAngle, $fSweepAngle)
Function _GDIPlus_PathAddBezier(Requires: #include <GDIPlus.au3>) |Adds a bezier spline to the current figure of a path , $hPath, $nX1, $nY1, $nX2, $nY2, $nX3, $nY3, $nX4, $nY4)
Function _GDIPlus_PathAddClosedCurve(Requires: #include <GDIPlus.au3>) |Adds a closed cardinal spline to a path , $hPath, $aPoints)
Function _GDIPlus_PathAddClosedCurve2(Requires: #include <GDIPlus.au3>) |Adds a closed cardinal spline to a path , $hPath, $aPoints [, $nTension = 0.5])
Function _GDIPlus_PathAddCurve(Requires: #include <GDIPlus.au3>) |Adds a cardinal spline to the current figure of a path , $hPath, $aPoints)
Function _GDIPlus_PathAddCurve2(Requires: #include <GDIPlus.au3>) |Adds a cardinal spline to the current figure of a path , $hPath, $aPoints [, $nTension = 0.5])
Function _GDIPlus_PathAddCurve3(Requires: #include <GDIPlus.au3>) |Adds a cardinal spline to the current figure of a path , $hPath, $aPoints, $iOffset, $iNumOfSegments [, $nTension = 0.5])
Function _GDIPlus_PathAddEllipse(Requires: #include <GDIPlus.au3>) |Adds an ellipse to the current figure a path , $hPath, $nX, $nY, $nWidth, $nHeight)
Function _GDIPlus_PathAddLine(Requires: #include <GDIPlus.au3>) |Adds a line to the current figure of a path , $hPath, $nX1, $nY1, $nX2, $nY2)
Function _GDIPlus_PathAddLine2(Requires: #include <GDIPlus.au3>) |Adds a sequence of lines to the current figure of a path , $hPath, $aPoints)
Function _GDIPlus_PathAddPath(Requires: #include <GDIPlus.au3>) |Adds a path to another path , $hPath1, $hPath2 [, $bConnect = True])
Function _GDIPlus_PathAddPie(Requires: #include <GDIPlus.au3>) |Adds a pie to a path , $hPath, $nX, $nY, $nWidth, $nHeight, $fStartAngle, $fSweepAngle)
Function _GDIPlus_PathAddPolygon(Requires: #include <GDIPlus.au3>) |Adds a polygon to a path , $hPath, $aPoints)
Function _GDIPlus_PathAddRectangle(Requires: #include <GDIPlus.au3>) |Adds a rectangle to a path , $hPath, $nX, $nY, $nWidth, $nHeight)
Function _GDIPlus_PathAddString(Requires: #include <GDIPlus.au3>) |Adds the outline of a string to a path , $hPath, $sString, $tLayout, $hFamily [, $iStyle = 0 [, $fSize = 8.5 [, $hFormat = 0]]])
Function _GDIPlus_PathBrushCreate(Requires: #include <GDIPlus.au3>) |Creates a PathGradientBrush object based on an array of points and initializes the wrap mode of the brush , $aPoints [, $iWrapMode = 0])
Function _GDIPlus_PathBrushCreateFromPath(Requires: #include <GDIPlus.au3>) |Creates a PathGradientBrush object based on a GraphicsPath object , $hPath)
Function _GDIPlus_PathBrushGetCenterPoint(Requires: #include <GDIPlus.au3>) |Gets the center point of a path gradient brush , $hPathGradientBrush)
Function _GDIPlus_PathBrushGetFocusScales(Requires: #include <GDIPlus.au3>) |Gets the focus scales of a path gradient brush , $hPathGradientBrush)
Function _GDIPlus_PathBrushGetPointCount(Requires: #include <GDIPlus.au3>) |Gets the number of points in the array of points that defines a brush's boundary path , $hPathGradientBrush)
Function _GDIPlus_PathBrushGetRect(Requires: #include <GDIPlus.au3>) |Gets the smallest rectangle that encloses the boundary path of a path gradient brush , $hPathGradientBrush)
Function _GDIPlus_PathBrushGetWrapMode(Requires: #include <GDIPlus.au3>) |Gets the wrap mode currently set for a path gradient brush , $hPathGradientBrush)
Function _GDIPlus_PathBrushMultiplyTransform(Requires: #include <GDIPlus.au3>) |Updates a brush's transformation matrix with the product of itself and another matrix , $hPathGradientBrush, $hMatrix [, $iOrder = 0])
Function _GDIPlus_PathBrushResetTransform(Requires: #include <GDIPlus.au3>) |Resets the transformation matrix of a path gradient brush to the identity matrix , $hPathGradientBrush)
Function _GDIPlus_PathBrushSetBlend(Requires: #include <GDIPlus.au3>) |Sets the blend factors and the blend positions of a path gradient brush , $hPathGradientBrush, $aBlends)
Function _GDIPlus_PathBrushSetCenterColor(Requires: #include <GDIPlus.au3>) |Sets the color of the center point of a path gradient brush , $hPathGradientBrush, $iARGB)
Function _GDIPlus_PathBrushSetCenterPoint(Requires: #include <GDIPlus.au3>) |Sets the center point of a path gradient brush , $hPathGradientBrush, $nX, $nY)
Function _GDIPlus_PathBrushSetFocusScales(Requires: #include <GDIPlus.au3>) |Sets the focus scales of a path gradient brush , $hPathGradientBrush, $fScaleX, $fScaleY)
Function _GDIPlus_PathBrushSetGammaCorrection(Requires: #include <GDIPlus.au3>) |Specifies whether gamma correction is enabled for a path gradient brush , $hPathGradientBrush, $bUseGammaCorrection)
Function _GDIPlus_PathBrushSetLinearBlend(Requires: #include <GDIPlus.au3>) |Sets the blend shape of a path gradient brush to create a custom blend based on a triangular shape , $hPathGradientBrush, $fFocus [, $fScale = 1])
Function _GDIPlus_PathBrushSetPresetBlend(Requires: #include <GDIPlus.au3>) |Sets the preset colors and the blend positions of a path gradient brush , $hPathGradientBrush, $aInterpolations)
Function _GDIPlus_PathBrushSetSigmaBlend(Requires: #include <GDIPlus.au3>) |Sets the blend shape of a path gradient brush to create a custom blend based on a bell-shaped curve , $hPathGradientBrush, $fFocus [, $fScale = 1])
Function _GDIPlus_PathBrushSetSurroundColor(Requires: #include <GDIPlus.au3>) |Sets the surround color for a path gradient brush , $hPathGradientBrush, $iARGB)
Function _GDIPlus_PathBrushSetSurroundColorsWithCount(Requires: #include <GDIPlus.au3>) |Sets the surround colors currently specified for a path gradient brush , $hPathGradientBrush, $aColors)
Function _GDIPlus_PathBrushSetTransform(Requires: #include <GDIPlus.au3>) |Sets the transformation matrix of a path gradient brush , $hPathGradientBrush, $hMatrix)
Function _GDIPlus_PathBrushSetWrapMode(Requires: #include <GDIPlus.au3>) |Sets the wrap mode of a path gradient brush , $hPathGradientBrush, $iWrapMode)
Function _GDIPlus_PathClone(Requires: #include <GDIPlus.au3>) |Clones a path , $hPath)
Function _GDIPlus_PathCloseFigure(Requires: #include <GDIPlus.au3>) |Closes the current figure of a path , $hPath)
Function _GDIPlus_PathCreate(Requires: #include <GDIPlus.au3>) |Creates a GraphicsPath object and initializes the fill mode , [$iFillMode = 0])
Function _GDIPlus_PathCreate2(Requires: #include <GDIPlus.au3>) |Creates a GraphicsPath object based on an array of points, an array of types, and a fill mode , $aPathData [, $iFillMode = 0])
Function _GDIPlus_PathDispose(Requires: #include <GDIPlus.au3>) |Releases a GraphicsPath object , $hPath)
Function _GDIPlus_PathFlatten(Requires: #include <GDIPlus.au3>) |Applies a transformation to a path and converts each curve in the path to a sequence of connected lines , $hPath [, $fFlatness = 0.25 [, $hMatrix = 0]])
Function _GDIPlus_PathGetData(Requires: #include <GDIPlus.au3>) |Gets an array of points and types from a path , $hPath)
Function _GDIPlus_PathGetFillMode(Requires: #include <GDIPlus.au3>) |Gets the fill mode of a path , $hPath)
Function _GDIPlus_PathGetLastPoint(Requires: #include <GDIPlus.au3>) |Gets the ending point of the last figure in a path , $hPath)
Function _GDIPlus_PathGetPointCount(Requires: #include <GDIPlus.au3>) |Gets the number of points in a path's array of data points , $hPath)
Function _GDIPlus_PathGetPoints(Requires: #include <GDIPlus.au3>) |Gets an array of points from a path , $hPath)
Function _GDIPlus_PathGetWorldBounds(Requires: #include <GDIPlus.au3>) |Gets the bounding rectangle for a path , $hPath [, $hMatrix = 0 [, $hPen = 0]])
Function _GDIPlus_PathIsOutlineVisiblePoint(Requires: #include <GDIPlus.au3>) |Determines whether a specified point touches the outline of a path with the specified Graphics and Pen , $hPath, $nX, $nY [, $hPen = 0 [, $hGraphics = 0]])
Function _GDIPlus_PathIsVisiblePoint(Requires: #include <GDIPlus.au3>) |Determines whether a specified point lies in the area that is filled when a path is filled by a specified Graphics object , $hPath, $nX, $nY [, $hGraphics = 0])
Function _GDIPlus_PathIterCreate(Requires: #include <GDIPlus.au3>) |Creates a new GraphicsPathIterator object and associates it with a GraphicsPath object , $hPath)
Function _GDIPlus_PathIterDispose(Requires: #include <GDIPlus.au3>) |Releases a GraphicsPathIterator object , $hPathIter)
Function _GDIPlus_PathIterGetSubpathCount(also called figures) |Gets the number of subpaths in the path (Requires: #include <GDIPlus.au3>), $hPathIter)
Function _GDIPlus_PathIterNextMarkerPath(Requires: #include <GDIPlus.au3>) |Gets the next marker-delimited section of an iterator's associated path , $hPathIter, $hPath)
Function _GDIPlus_PathIterNextSubpathPath(subpath) |Gets the next figure from an iterator's associated path (Requires: #include <GDIPlus.au3>), $hPathIter, $hPath)
Function _GDIPlus_PathIterRewind(Requires: #include <GDIPlus.au3>) |Rewinds an iterator to the beginning of its associated path , $hPathIter)
Function _GDIPlus_PathReset(0) |Empties a path and sets the fill mode to alternate (Requires: #include <GDIPlus.au3>), $hPath)
Function _GDIPlus_PathReverse(Requires: #include <GDIPlus.au3>) |Reverses the order of the points that define a path's lines and curves , $hPath)
Function _GDIPlus_PathSetFillMode(Requires: #include <GDIPlus.au3>) |Sets the fill mode of a path , $hPath, $iFillMode)
Function _GDIPlus_PathSetMarker(Requires: #include <GDIPlus.au3>) |Designates the last point in a path as a marker point , $hPath)
Function _GDIPlus_PathStartFigure(Requires: #include <GDIPlus.au3>) |Starts a new figure without closing the current figure. Subsequent points added to a path are added to the new figure , $hPath)
Function _GDIPlus_PathTransform(Requires: #include <GDIPlus.au3>) |Multiplies each of a path's data points by a specified matrix , $hPath, $hMatrix)
Function _GDIPlus_PathWarp(converts to a sequence of straight lines) |Applies a warp transformation to a path. The function also flattens the path (Requires: #include <GDIPlus.au3>), $hPath, $hMatrix, $aPoints, $nX, $nY, $nWidth, $nHeight [, $iWarpMode = 0 [, $fFlatness = 0.25]])
Function _GDIPlus_PathWiden(Requires: #include <GDIPlus.au3>) |Replaces a path with curves that enclose the area that is filled when the path is drawn by a specified pen. The function also flattens the path , $hPath, $hPen [, $hMatrix = 0 [, $fFlatness = 0.25]])
Function _GDIPlus_PathWindingModeOutline(Requires: #include <GDIPlus.au3>) |Transforms and flattens a path, and then converts the path's data points so that they represent only the outline of the path , $hPath [, $hMatrix = 0 [, $fFlatness = 0.25]])
Function _GDIPlus_PenCreate(Requires: #include <GDIPlus.au3>) |Create a pen object , [$iARGB = 0xFF000000 [, $nWidth = 1 [, $iUnit = 2]]])
Function _GDIPlus_PenCreate2(Requires: #include <GDIPlus.au3>) |Creates a Pen object that uses the attributes of a brush , $hBrush [, $nWidth = 1 [, $iUnit = 2]])
Function _GDIPlus_PenDispose(Requires: #include <GDIPlus.au3>) |Release a pen object , $hPen)
Function _GDIPlus_PenGetAlignment(Requires: #include <GDIPlus.au3>) |Gets the pen alignment , $hPen)
Function _GDIPlus_PenGetColor(Requires: #include <GDIPlus.au3>) |Gets the pen color , $hPen)
Function _GDIPlus_PenGetCustomEndCap(Requires: #include <GDIPlus.au3>) |Gets the custom end cap for the pen , $hPen)
Function _GDIPlus_PenGetDashCap(Requires: #include <GDIPlus.au3>) |Gets the pen dash cap style , $hPen)
Function _GDIPlus_PenGetDashStyle(Requires: #include <GDIPlus.au3>) |Gets the pen dash style , $hPen)
Function _GDIPlus_PenGetEndCap(Requires: #include <GDIPlus.au3>) |Gets the pen end cap , $hPen)
Function _GDIPlus_PenGetMiterLimit(Requires: #include <GDIPlus.au3>) |Gets the miter length currently set for a Pen object , $hPen)
Function _GDIPlus_PenGetWidth(Requires: #include <GDIPlus.au3>) |Retrieve the width of a pen , $hPen)
Function _GDIPlus_PenSetAlignment(Requires: #include <GDIPlus.au3>) |Sets the pen alignment , $hPen [, $iAlignment = 0])
Function _GDIPlus_PenSetColor(Requires: #include <GDIPlus.au3>) |Sets the pen color , $hPen, $iARGB)
Function _GDIPlus_PenSetCustomEndCap(Requires: #include <GDIPlus.au3>) |Sets the custom end cap for the pen , $hPen, $hEndCap)
Function _GDIPlus_PenSetDashCap(Requires: #include <GDIPlus.au3>) |Sets the pen dash cap style , $hPen [, $iDash = 0])
Function _GDIPlus_PenSetDashStyle(Requires: #include <GDIPlus.au3>) |Sets the pen dash style , $hPen [, $iStyle = 0])
Function _GDIPlus_PenSetEndCap(Requires: #include <GDIPlus.au3>) |Sets the pen end cap , $hPen, $iEndCap)
Function _GDIPlus_PenSetLineCap(Requires: #include <GDIPlus.au3>) |Sets the cap styles for the start, end, and dashes in a line drawn with the pen , $hPen, $iStartCap, $iEndCap, $iDashCap)
Function _GDIPlus_PenSetLineJoin(Requires: #include <GDIPlus.au3>) |Sets the line join for a Pen object , $hPen, $iLineJoin)
Function _GDIPlus_PenSetMiterLimit(Requires: #include <GDIPlus.au3>) |Sets the miter limit of a Pen object , $hPen, $fMiterLimit)
Function _GDIPlus_PenSetStartCap(Requires: #include <GDIPlus.au3>) |Sets the start cap for a Pen object , $hPen, $iLineCap)
Function _GDIPlus_PenSetWidth(Requires: #include <GDIPlus.au3>) |Sets the width of a pen , $hPen, $fWidth)
Function _GDIPlus_RectFCreate(Requires: #include <GDIPlus.au3>) |Create a $tagGDIPRECTF structure , [$nX = 0 [, $nY = 0 [, $nWidth = 0 [, $nHeight = 0]]]])
Function _GDIPlus_RegionClone(Requires: #include <GDIPlus.au3>) |Clones a Region object , $hRegion)
Function _GDIPlus_RegionCombinePath(Requires: #include <GDIPlus.au3>) |Updates a region to the portion of itself that intersects the specified path's interior , $hRegion, $hPath [, $iCombineMode = 2])
Function _GDIPlus_RegionCombineRect(Requires: #include <GDIPlus.au3>) |Updates a region to the portion of itself that intersects the specified rectangle's interior , $hRegion, $nX, $nY, $nWidth, $nHeight [, $iCombineMode = 2])
Function _GDIPlus_RegionCombineRegion(Requires: #include <GDIPlus.au3>) |Updates a region to the portion of itself that intersects another region , $hRegionDst, $hRegionSrc [, $iCombineMode = 2])
Function _GDIPlus_RegionCreate(Requires: #include <GDIPlus.au3>) |Creates a region that is infinite 
Function _GDIPlus_RegionCreateFromPath(Requires: #include <GDIPlus.au3>) |Creates a region that is defined by a path object and has a fill mode that is contained in the path object , $hPath)
Function _GDIPlus_RegionCreateFromRect(Requires: #include <GDIPlus.au3>) |Creates a region that is defined by a rectangle , $nX, $nY, $nWidth, $nHeight)
Function _GDIPlus_RegionDispose(Requires: #include <GDIPlus.au3>) |Releases a Region object , $hRegion)
Function _GDIPlus_RegionGetBounds(Requires: #include <GDIPlus.au3>) |Gets a rectangle that encloses a region , $hRegion, $hGraphics)
Function _GDIPlus_RegionGetHRgn(Requires: #include <GDIPlus.au3>) |Creates a GDI region from a GDI+ Region object , $hRegion [, $hGraphics = 0])
Function _GDIPlus_RegionTransform(Requires: #include <GDIPlus.au3>) |Tansforms a region by multiplying each of its data points by a specified matrix , $hRegion, $hMatrix)
Function _GDIPlus_RegionTranslate(Requires: #include <GDIPlus.au3>) |Offsets a region by specified amounts in the horizontal and vertical directions , $hRegion, $nDX, $nDY)
Function _GDIPlus_Shutdown(Requires: #include <GDIPlus.au3>) |Clean up resources used by Microsoft Windows GDI+ 
Function _GDIPlus_Startup(Requires: #include <GDIPlus.au3>) |Initialize Microsoft Windows GDI+ , [$sGDIPDLL = Default [, $bRetDllHandle = False]])
Function _GDIPlus_StringFormatCreate(Requires: #include <GDIPlus.au3>) |Create a String Format object , [$iFormat = 0 [, $iLangID = 0]])
Function _GDIPlus_StringFormatDispose(Requires: #include <GDIPlus.au3>) |Release a String Format object , $hFormat)
Function _GDIPlus_StringFormatGetMeasurableCharacterRangeCount(Requires: #include <GDIPlus.au3>) |Gets the number of measurable character ranges that are currently set for a StringFormat object , $hStringFormat)
Function _GDIPlus_StringFormatSetAlign(Requires: #include <GDIPlus.au3>) |Sets the text alignment of a string format object , $hStringFormat, $iFlag)
Function _GDIPlus_StringFormatSetLineAlign(Requires: #include <GDIPlus.au3>) |Sets the line alignment of a StringFormat object in relation to the origin of a layout rectangle , $hStringFormat, $iStringAlign)
Function _GDIPlus_StringFormatSetMeasurableCharacterRanges(Requires: #include <GDIPlus.au3>) |Sets a series of character ranges for a StringFormat object that, when in a string, can be measured , $hStringFormat, $aRanges)
Function _GDIPlus_TextureCreate(Requires: #include <GDIPlus.au3>) |Creates a TextureBrush object based on an image and a wrap mode , $hImage [, $iWrapMode = 0])
Function _GDIPlus_TextureCreate2(Requires: #include <GDIPlus.au3>) |Creates a TextureBrush object based on an image, a wrap mode and a defining rectangle , $hImage, $nX, $nY, $nWidth, $nHeight [, $iWrapMode = 0])
Function _GDIPlus_TextureCreateIA(Requires: #include <GDIPlus.au3>) |Creates a TextureBrush object based on an image, a defining rectangle, and a set of image properties , $hImage, $nX, $nY, $nWidth, $nHeight [, $pImageAttributes = 0])
Function _GetIP(Requires: #include <Inet.au3>) |Get public IP address of a network/computer 
Function _GUICtrlAVI_Close(Requires: #include <GuiAVI.au3>) |Closes an AVI clip , $hWnd)
Function _GUICtrlAVI_Create(Requires: #include <GuiAVI.au3>) |Creates an AVI control , $hWnd [, $sFilePath = "" [, $iSubFileID = -1 [, $iX = 0 [, $iY = 0 [, $iWidth = 0 [, $iHeight = 0 [, $iStyle = 0x00000006 [, $iExStyle = 0x00000000]]]]]]]])
Function _GUICtrlAVI_Destroy(Requires: #include <GuiAVI.au3>) |Delete the control , ByRef $hWnd)
Function _GUICtrlAVI_IsPlaying(AVI) |Checks whether an Audio-Video Interleaved clip is playing (Requires: #include <GuiAVI.au3>), $hWnd)
Function _GUICtrlAVI_Open(Requires: #include <GuiAVI.au3>) |Opens an AVI clip and displays its first frame in an animation control , $hWnd, $sFileName)
Function _GUICtrlAVI_OpenEx(Requires: #include <GuiAVI.au3>) |Opens an AVI clip and displays its first frame in an animation control , $hWnd, $sFileName, $iResourceID)
Function _GUICtrlAVI_Play(Requires: #include <GuiAVI.au3>) |Plays an AVI clip in an animation control , $hWnd [, $iFrom = 0 [, $iTo = -1 [, $iRepeat = -1]]])
Function _GUICtrlAVI_Seek(Requires: #include <GuiAVI.au3>) |Directs an AVI control to display a particular frame of an AVI clip , $hWnd, $iFrame)
Function _GUICtrlAVI_Show(Requires: #include <GuiAVI.au3>) |Show/Hide the AVI control , $hWnd, $iState)
Function _GUICtrlAVI_Stop(Requires: #include <GuiAVI.au3>) |Stops playing an AVI clip , $hWnd)
Function _GUICtrlButton_Click(Requires: #include <GuiButton.au3>) |Simulates the user clicking a button , $hWnd)
Function _GUICtrlButton_Create(Requires: #include <GuiButton.au3>) |Creates a Button control , $hWnd, $sText, $iX, $iY, $iWidth, $iHeight [, $iStyle = -1 [, $iExStyle = -1]])
Function _GUICtrlButton_Destroy(Requires: #include <GuiButton.au3>) |Delete the Button control , ByRef $hWnd)
Function _GUICtrlButton_Enable(Requires: #include <GuiButton.au3>) |Enables or disables mouse and keyboard input to the specified button , $hWnd [, $bEnable = True])
Function _GUICtrlButton_GetCheck(Requires: #include <GuiButton.au3>) |Gets the check state of a radio button or check box , $hWnd)
Function _GUICtrlButton_GetFocus(Requires: #include <GuiButton.au3>) |Retrieves if the button has keyboard focus , $hWnd)
Function _GUICtrlButton_GetIdealSize(Requires: #include <GuiButton.au3>) |Gets the size of the button that best fits its text and image, if an image list is present , $hWnd)
Function _GUICtrlButton_GetImage(icon or bitmap) |Retrieves a handle to the image associated with the button (Requires: #include <GuiButton.au3>), $hWnd)
Function _GUICtrlButton_GetImageList(Requires: #include <GuiButton.au3>) |Retrieves an array that describes the image list assigned to a button control , $hWnd)
Function _GUICtrlButton_GetNote(Requires: #include <GuiButton.au3>) |Gets the text of the note associated with the Command Link button , $hWnd)
Function _GUICtrlButton_GetNoteLength(Requires: #include <GuiButton.au3>) |Gets the length of the note text that may be displayed in the description for a command link button , $hWnd)
Function _GUICtrlButton_GetSplitInfo(Requires: #include <GuiButton.au3>) |Gets information for a split button control , $hWnd)
Function _GUICtrlButton_GetState(Requires: #include <GuiButton.au3>) |Determines the state of a button or check box , $hWnd)
Function _GUICtrlButton_GetText(Requires: #include <GuiButton.au3>) |Retrieve the text of the button , $hWnd)
Function _GUICtrlButton_GetTextMargin(Requires: #include <GuiButton.au3>) |Gets the margins used to draw text in a button control , $hWnd)
Function _GUICtrlButton_SetCheck(Requires: #include <GuiButton.au3>) |Sets the check state of a radio button or check box , $hWnd [, $iState = $BST_CHECKED])
Function _GUICtrlButton_SetDontClick(Requires: #include <GuiButton.au3>) |Sets the state of $BST_DONTCLICK flag on a button , $hWnd [, $bState = True])
Function _GUICtrlButton_SetFocus(Requires: #include <GuiButton.au3>) |Sets the keyboard focus to the specified button , $hWnd [, $bFocus = True])
Function _GUICtrlButton_SetImage(Requires: #include <GuiButton.au3>) |Sets the image of a button , $hWnd, $sImageFile [, $iIconID = -1 [, $bLarge = False]])
Function _GUICtrlButton_SetImageList(Requires: #include <GuiButton.au3>) |Assigns an image list to a button control , $hWnd, $hImage [, $iAlign = 0 [, $iLeft = 1 [, $iTop = 1 [, $iRight = 1 [, $iBottom = 1]]]]])
Function _GUICtrlButton_SetNote(Requires: #include <GuiButton.au3>) |Sets the text of the note associated with a command link button , $hWnd, $sNote)
Function _GUICtrlButton_SetShield(Requires: #include <GuiButton.au3>) |Sets the elevation required state for a specified button or command link to display an elevated icon , $hWnd [, $bRequired = True])
Function _GUICtrlButton_SetSize(Requires: #include <GuiButton.au3>) |Sets the size of the button , $hWnd, $iWidth, $iHeight)
Function _GUICtrlButton_SetSplitInfo(Requires: #include <GuiButton.au3>) |Gets information for a split button control , $hWnd [, $hImlGlyph = -1 [, $iSplitStyle = $BCSS_ALIGNLEFT [, $iWidth = 0 [, $iHeight = 0]]]])
Function _GUICtrlButton_SetState(Requires: #include <GuiButton.au3>) |Sets the highlight state of a button. The highlight state indicates whether the button is highlighted as if the user had pushed it , $hWnd [, $bHighlighted = True])
Function _GUICtrlButton_SetStyle(Requires: #include <GuiButton.au3>) |Sets the style of a button , $hWnd, $iStyle)
Function _GUICtrlButton_SetText(Requires: #include <GuiButton.au3>) |Sets the text of the button , $hWnd, $sText)
Function _GUICtrlButton_SetTextMargin(Requires: #include <GuiButton.au3>) |Sets the margins for drawing text in a button control , $hWnd [, $iLeft = 1 [, $iTop = 1 [, $iRight = 1 [, $iBottom = 1]]]])
Function _GUICtrlButton_Show(Requires: #include <GuiButton.au3>) |Show/Hide button , $hWnd [, $bShow = True])
Function _GUICtrlComboBoxEx_AddDir(Requires: #include <GuiComboBoxEx.au3>) |Adds the names of directories and files , $hWnd, $sFilePath [, $iAttributes = 0 [, $bBrackets = True]])
Function _GUICtrlComboBoxEx_AddString(Requires: #include <GuiComboBoxEx.au3>) |Add a string , $hWnd, $sText [, $iImage = -1 [, $iSelectedImage = -1 [, $iOverlayImage = -1 [, $iIndent = -1 [, $iParam = -1]]]]])
Function _GUICtrlComboBoxEx_BeginUpdate(Requires: #include <GuiComboBoxEx.au3>) |Prevents updating of the control until the EndUpdate function is called , $hWnd)
Function _GUICtrlComboBoxEx_Create(Requires: #include <GuiComboBoxEx.au3>) |Create a ComboBoxEx control , $hWnd, $sText, $iX, $iY [, $iWidth = 100 [, $iHeight = 200 [, $iStyle = 0x00200002 [, $iExStyle = 0x00000000]]]])
Function _GUICtrlComboBoxEx_CreateSolidBitMap(Requires: #include <GuiComboBoxEx.au3>) |Creates a solid color bitmap , $hWnd, $iColor, $iWidth, $iHeight)
Function _GUICtrlComboBoxEx_DeleteString(Requires: #include <GuiComboBoxEx.au3>) |Removes an item from a ComboBoxEx control , $hWnd, $iIndex)
Function _GUICtrlComboBoxEx_Destroy(Requires: #include <GuiComboBoxEx.au3>) |Delete the control , ByRef $hWnd)
Function _GUICtrlComboBoxEx_EndUpdate(Requires: #include <GuiComboBoxEx.au3>) |Enables screen repainting that was turned off with the BeginUpdate function , $hWnd)
Function _GUICtrlComboBoxEx_FindStringExact(Requires: #include <GuiComboBoxEx.au3>) |Search for a string , $hWnd, $sText [, $iIndex = -1])
Function _GUICtrlComboBoxEx_GetComboBoxInfo(Requires: #include <GuiComboBoxEx.au3>) |Gets information about the specified ComboBox , $hWnd, ByRef $tInfo)
Function _GUICtrlComboBoxEx_GetComboControl(Requires: #include <GuiComboBoxEx.au3>) |Gets the handle to the child combo box control , $hWnd)
Function _GUICtrlComboBoxEx_GetCount(Requires: #include <GuiComboBoxEx.au3>) |Retrieve the number of items , $hWnd)
Function _GUICtrlComboBoxEx_GetCurSel(Requires: #include <GuiComboBoxEx.au3>) |Retrieve the index of the currently selected item , $hWnd)
Function _GUICtrlComboBoxEx_GetDroppedControlRect(Requires: #include <GuiComboBoxEx.au3>) |Retrieve the screen coordinates of a combo box in its dropped-down state , $hWnd)
Function _GUICtrlComboBoxEx_GetDroppedControlRectEx(Requires: #include <GuiComboBoxEx.au3>) |Retrieve the screen coordinates of a combo box in its dropped-down state , $hWnd)
Function _GUICtrlComboBoxEx_GetDroppedState(Requires: #include <GuiComboBoxEx.au3>) |Determines whether the ListBox of a ComboBox is dropped down , $hWnd)
Function _GUICtrlComboBoxEx_GetDroppedWidth(Requires: #include <GuiComboBoxEx.au3>) |Retrieve the minimum allowable width, of the ListBox of a ComboBox , $hWnd)
Function _GUICtrlComboBoxEx_GetEditControl(Requires: #include <GuiComboBoxEx.au3>) |Gets the handle to the edit control portion of a ComboBoxEx control , $hWnd)
Function _GUICtrlComboBoxEx_GetEditSel(Requires: #include <GuiComboBoxEx.au3>) |Gets the starting and ending character positions of the current selection in the edit control of a ComboBox , $hWnd)
Function _GUICtrlComboBoxEx_GetEditText(Requires: #include <GuiComboBoxEx.au3>) |Get the text from the edit control of a ComboBoxEx , $hWnd)
Function _GUICtrlComboBoxEx_GetExtendedStyle(Requires: #include <GuiComboBoxEx.au3>) |Gets the extended styles that are in use for a ComboBoxEx control , $hWnd)
Function _GUICtrlComboBoxEx_GetExtendedUI(Requires: #include <GuiComboBoxEx.au3>) |Determines whether a ComboBox has the default user interface or the extended user interface , $hWnd)
Function _GUICtrlComboBoxEx_GetImageList(Requires: #include <GuiComboBoxEx.au3>) |Retrieves the handle to an image list assigned to a ComboBoxEx control , $hWnd)
Function _GUICtrlComboBoxEx_GetItem(Requires: #include <GuiComboBoxEx.au3>) |Retrieves an item's attributes , $hWnd, $iIndex)
Function _GUICtrlComboBoxEx_GetItemEx(Requires: #include <GuiComboBoxEx.au3>) |Retrieves some or all of an item's attributes , $hWnd, ByRef $tItem)
Function _GUICtrlComboBoxEx_GetItemHeight(Requires: #include <GuiComboBoxEx.au3>) |Determines the height of list items or the selection field in a ComboBox , $hWnd [, $iComponent = -1])
Function _GUICtrlComboBoxEx_GetItemImage(Requires: #include <GuiComboBoxEx.au3>) |Retrieves the index of the item's icon , $hWnd, $iIndex)
Function _GUICtrlComboBoxEx_GetItemIndent(Requires: #include <GuiComboBoxEx.au3>) |Retrieves the number of image widths the item is indented , $hWnd, $iIndex)
Function _GUICtrlComboBoxEx_GetItemOverlayImage(Requires: #include <GuiComboBoxEx.au3>) |Retrieves the index of the item's overlay image icon , $hWnd, $iIndex)
Function _GUICtrlComboBoxEx_GetItemParam(Requires: #include <GuiComboBoxEx.au3>) |Retrieves the application specific value of the item , $hWnd, $iIndex)
Function _GUICtrlComboBoxEx_GetItemSelectedImage(Requires: #include <GuiComboBoxEx.au3>) |Retrieves the index of the item's selected image icon , $hWnd, $iIndex)
Function _GUICtrlComboBoxEx_GetItemText(Requires: #include <GuiComboBoxEx.au3>) |Retrieve a string from the list of a ComboBox , $hWnd, $iIndex, ByRef $sText)
Function _GUICtrlComboBoxEx_GetItemTextLen(Requires: #include <GuiComboBoxEx.au3>) |Gets the length, in characters, of a string in the list of a combo box , $hWnd, $iIndex)
Function _GUICtrlComboBoxEx_GetList(Requires: #include <GuiComboBoxEx.au3>) |Retrieves all items from the list portion of a ComboBox control , $hWnd)
Function _GUICtrlComboBoxEx_GetListArray(Requires: #include <GuiComboBoxEx.au3>) |Retrieves all items from the list portion of a ComboBox control , $hWnd)
Function _GUICtrlComboBoxEx_GetLocale(Requires: #include <GuiComboBoxEx.au3>) |Retrieves the current locale , $hWnd)
Function _GUICtrlComboBoxEx_GetLocaleCountry(Requires: #include <GuiComboBoxEx.au3>) |Retrieves the current country code , $hWnd)
Function _GUICtrlComboBoxEx_GetLocaleLang(Requires: #include <GuiComboBoxEx.au3>) |Retrieves the current language identifier , $hWnd)
Function _GUICtrlComboBoxEx_GetLocalePrimLang(Requires: #include <GuiComboBoxEx.au3>) |Extract primary language id from a language id , $hWnd)
Function _GUICtrlComboBoxEx_GetLocaleSubLang(Requires: #include <GuiComboBoxEx.au3>) |Extract sublanguage id from a language id , $hWnd)
Function _GUICtrlComboBoxEx_GetMinVisible(Requires: #include <GuiComboBoxEx.au3>) |Retrieve the minimum number of visible items in the drop-down list of a ComboBox , $hWnd)
Function _GUICtrlComboBoxEx_GetTopIndex(Requires: #include <GuiComboBoxEx.au3>) |Retrieve the 0-based index of the first visible item in the ListBox portion of a ComboBox , $hWnd)
Function _GUICtrlComboBoxEx_GetUnicode(Requires: #include <GuiComboBoxEx.au3>) |Retrieves if control is using Unicode , $hWnd)
Function _GUICtrlComboBoxEx_InitStorage(Requires: #include <GuiComboBoxEx.au3>) |Allocates memory for storing ListBox items , $hWnd, $iNum, $iBytes)
Function _GUICtrlComboBoxEx_InsertString(Requires: #include <GuiComboBoxEx.au3>) |Inserts a new item in the control , $hWnd, $sText [, $iIndex = -1 [, $iImage = -1 [, $iSelectedImage = -1 [, $iOverlayImage = -1 [, $iIndent = -1 [, $iParam = -1]]]]]])
Function _GUICtrlComboBoxEx_LimitText(Requires: #include <GuiComboBoxEx.au3>) |Limits the length of the text the user may type into the edit control of a ComboBox , $hWnd [, $iLimit = 0])
Function _GUICtrlComboBoxEx_ReplaceEditSel(Requires: #include <GuiComboBoxEx.au3>) |Replace text selected in edit box , $hWnd, $sText)
Function _GUICtrlComboBoxEx_ResetContent(Requires: #include <GuiComboBoxEx.au3>) |Removes all items , $hWnd)
Function _GUICtrlComboBoxEx_SetCurSel(Requires: #include <GuiComboBoxEx.au3>) |Select a string in the list of a ComboBox , $hWnd [, $iIndex = -1])
Function _GUICtrlComboBoxEx_SetDroppedWidth(Requires: #include <GuiComboBoxEx.au3>) |Set the maximum allowable width, in pixels, of the ListBox of a ComboBox , $hWnd, $iWidth)
Function _GUICtrlComboBoxEx_SetEditSel(Requires: #include <GuiComboBoxEx.au3>) |Select characters in the edit control of a ComboBox , $hWnd, $iStart, $iStop)
Function _GUICtrlComboBoxEx_SetEditText(Requires: #include <GuiComboBoxEx.au3>) |Set the text of the edit control of the ComboBox , $hWnd, $sText)
Function _GUICtrlComboBoxEx_SetExtendedStyle(Requires: #include <GuiComboBoxEx.au3>) |Sets extended styles within a ComboBoxEx control , $hWnd, $iExStyle [, $iExMask = 0])
Function _GUICtrlComboBoxEx_SetExtendedUI(Requires: #include <GuiComboBoxEx.au3>) |Select either the default user interface or the extended user interface , $hWnd [, $bExtended = False])
Function _GUICtrlComboBoxEx_SetImageList(Requires: #include <GuiComboBoxEx.au3>) |Sets an image list for a ComboBoxEx control , $hWnd, $hHandle)
Function _GUICtrlComboBoxEx_SetItem(Requires: #include <GuiComboBoxEx.au3>) |Sets some or all of a item's attributes , $hWnd, $sText [, $iIndex = 0 [, $iImage = -1 [, $iSelectedImage = -1 [, $iOverlayImage = -1 [, $iIndent = -1 [, $iParam = -1]]]]]])
Function _GUICtrlComboBoxEx_SetItemEx(Requires: #include <GuiComboBoxEx.au3>) |Sets some or all of a item's attributes , $hWnd, ByRef $tItem)
Function _GUICtrlComboBoxEx_SetItemHeight(Requires: #include <GuiComboBoxEx.au3>) |Set the height of list items or the selection field in a ComboBox , $hWnd, $iComponent, $iHeight)
Function _GUICtrlComboBoxEx_SetItemImage(Requires: #include <GuiComboBoxEx.au3>) |Sets the index of the item's icon in the control's image list , $hWnd, $iIndex, $iImage)
Function _GUICtrlComboBoxEx_SetItemIndent(Requires: #include <GuiComboBoxEx.au3>) |Sets the number of image widths to indent the item , $hWnd, $iIndex, $iIndent)
Function _GUICtrlComboBoxEx_SetItemOverlayImage(Requires: #include <GuiComboBoxEx.au3>) |Sets the index of the item's overlay icon in the control's image list , $hWnd, $iIndex, $iImage)
Function _GUICtrlComboBoxEx_SetItemParam(Requires: #include <GuiComboBoxEx.au3>) |Sets the value specific to the item , $hWnd, $iIndex, $iParam)
Function _GUICtrlComboBoxEx_SetItemSelectedImage(Requires: #include <GuiComboBoxEx.au3>) |Sets the index of the item's overlay icon in the control's image list , $hWnd, $iIndex, $iImage)
Function _GUICtrlComboBoxEx_SetMinVisible(Requires: #include <GuiComboBoxEx.au3>) |Set the minimum number of visible items in the drop-down list of a ComboBox , $hWnd, $iMinimum)
Function _GUICtrlComboBoxEx_SetTopIndex(Requires: #include <GuiComboBoxEx.au3>) |Ensure that a particular item is visible in the ListBox of a ComboBox , $hWnd, $iIndex)
Function _GUICtrlComboBoxEx_SetUnicode(Requires: #include <GuiComboBoxEx.au3>) |Sets if control is using Unicode , $hWnd [, $bUnicode = True])
Function _GUICtrlComboBoxEx_ShowDropDown(Requires: #include <GuiComboBoxEx.au3>) |Show or hide the ListBox of a ComboBox , $hWnd [, $bShow = False])
Function _GUICtrlComboBox_AddDir(Requires: #include <GuiComboBox.au3>) |Adds the names of directories and files , $hWnd, $sFilePath [, $iAttributes = 0 [, $bBrackets = True]])
Function _GUICtrlComboBox_AddString(Requires: #include <GuiComboBox.au3>) |Add a string , $hWnd, $sText)
Function _GUICtrlComboBox_AutoComplete(Requires: #include <GuiComboBox.au3>) |AutoComplete a ComboBox edit control , $hWnd)
Function _GUICtrlComboBox_BeginUpdate(Requires: #include <GuiComboBox.au3>) |Prevents updating of the control until the EndUpdate function is called , $hWnd)
Function _GUICtrlComboBox_Create(Requires: #include <GuiComboBox.au3>) |Create a ComboBox control , $hWnd, $sText, $iX, $iY [, $iWidth = 100 [, $iHeight = 120 [, $iStyle = 0x00200042 [, $iExStyle = 0x00000000]]]])
Function _GUICtrlComboBox_DeleteString(Requires: #include <GuiComboBox.au3>) |Delete a string , $hWnd, $iIndex)
Function _GUICtrlComboBox_Destroy(Requires: #include <GuiComboBox.au3>) |Delete the control , ByRef $hWnd)
Function _GUICtrlComboBox_EndUpdate(Requires: #include <GuiComboBox.au3>) |Enables screen repainting that was turned off with the BeginUpdate function , $hWnd)
Function _GUICtrlComboBox_FindString(Requires: #include <GuiComboBox.au3>) |Search for a string , $hWnd, $sText [, $iIndex = -1])
Function _GUICtrlComboBox_FindStringExact(Requires: #include <GuiComboBox.au3>) |Search for a string , $hWnd, $sText [, $iIndex = -1])
Function _GUICtrlComboBox_GetComboBoxInfo(Requires: #include <GuiComboBox.au3>) |Gets information about the specified ComboBox , $hWnd, ByRef $tInfo)
Function _GUICtrlComboBox_GetCount(Requires: #include <GuiComboBox.au3>) |Retrieve the number of items , $hWnd)
Function _GUICtrlComboBox_GetCueBanner(Requires: #include <GuiComboBox.au3>) |Gets the cue banner text displayed in the edit control of a combo box , $hWnd)
Function _GUICtrlComboBox_GetCurSel(Requires: #include <GuiComboBox.au3>) |Retrieve the index of the currently selected item , $hWnd)
Function _GUICtrlComboBox_GetDroppedControlRect(Requires: #include <GuiComboBox.au3>) |Retrieve the screen coordinates of a combo box in its dropped-down state , $hWnd)
Function _GUICtrlComboBox_GetDroppedControlRectEx(Requires: #include <GuiComboBox.au3>) |Retrieve the screen coordinates of a combo box in its dropped-down state , $hWnd)
Function _GUICtrlComboBox_GetDroppedState(Requires: #include <GuiComboBox.au3>) |Determines whether the ListBox of a ComboBox is dropped down , $hWnd)
Function _GUICtrlComboBox_GetDroppedWidth(Requires: #include <GuiComboBox.au3>) |Retrieve the minimum allowable width, of the ListBox of a ComboBox , $hWnd)
Function _GUICtrlComboBox_GetEditSel(Requires: #include <GuiComboBox.au3>) |Gets the starting and ending character positions of the current selection in the edit control of a ComboBox , $hWnd)
Function _GUICtrlComboBox_GetEditText(Requires: #include <GuiComboBox.au3>) |Get the text from the edit control of a ComboBox , $hWnd)
Function _GUICtrlComboBox_GetExtendedUI(Requires: #include <GuiComboBox.au3>) |Determines whether a ComboBox has the default user interface or the extended user interface , $hWnd)
Function _GUICtrlComboBox_GetHorizontalExtent(Requires: #include <GuiComboBox.au3>) |Gets the width, in pixels, that the ListBox of a ComboBox control can be scrolled horizontally , $hWnd)
Function _GUICtrlComboBox_GetItemHeight(Requires: #include <GuiComboBox.au3>) |Determines the height of list items or the selection field in a ComboBox , $hWnd [, $iIndex = -1])
Function _GUICtrlComboBox_GetLBText(Requires: #include <GuiComboBox.au3>) |Retrieve a string from the list of a ComboBox , $hWnd, $iIndex, ByRef $sText)
Function _GUICtrlComboBox_GetLBTextLen(Requires: #include <GuiComboBox.au3>) |Gets the length, in characters, of a string in the list of a combo box , $hWnd, $iIndex)
Function _GUICtrlComboBox_GetList(Requires: #include <GuiComboBox.au3>) |Retrieves all items from the list portion of a ComboBox control , $hWnd)
Function _GUICtrlComboBox_GetListArray(Requires: #include <GuiComboBox.au3>) |Retrieves all items from the list portion of a ComboBox control , $hWnd)
Function _GUICtrlComboBox_GetLocale(Requires: #include <GuiComboBox.au3>) |Retrieves the current locale , $hWnd)
Function _GUICtrlComboBox_GetLocaleCountry(Requires: #include <GuiComboBox.au3>) |Retrieves the current country code , $hWnd)
Function _GUICtrlComboBox_GetLocaleLang(Requires: #include <GuiComboBox.au3>) |Retrieves the current language identifier , $hWnd)
Function _GUICtrlComboBox_GetLocalePrimLang(Requires: #include <GuiComboBox.au3>) |Extract primary language id from a language id , $hWnd)
Function _GUICtrlComboBox_GetLocaleSubLang(Requires: #include <GuiComboBox.au3>) |Extract sublanguage id from a language id , $hWnd)
Function _GUICtrlComboBox_GetMinVisible(Requires: #include <GuiComboBox.au3>) |Retrieve the minimum number of visible items in the drop-down list of a ComboBox , $hWnd)
Function _GUICtrlComboBox_GetTopIndex(Requires: #include <GuiComboBox.au3>) |Retrieve the 0-based index of the first visible item in the ListBox portion of a ComboBox , $hWnd)
Function _GUICtrlComboBox_InitStorage(Requires: #include <GuiComboBox.au3>) |Allocates memory for storing ListBox items , $hWnd, $iNum, $iBytes)
Function _GUICtrlComboBox_InsertString(Requires: #include <GuiComboBox.au3>) |Insert a string , $hWnd, $sText [, $iIndex = -1])
Function _GUICtrlComboBox_LimitText(Requires: #include <GuiComboBox.au3>) |Limits the length of the text the user may type into the edit control of a ComboBox , $hWnd [, $iLimit = 0])
Function _GUICtrlComboBox_ReplaceEditSel(Requires: #include <GuiComboBox.au3>) |Replace text selected in edit box , $hWnd, $sText)
Function _GUICtrlComboBox_ResetContent(Requires: #include <GuiComboBox.au3>) |Remove all items from the ListBox and edit control of a ComboBox , $hWnd)
Function _GUICtrlComboBox_SelectString(Requires: #include <GuiComboBox.au3>) |Searches the ListBox of a ComboBox for an item that begins with the characters in a specified string , $hWnd, $sText [, $iIndex = -1])
Function _GUICtrlComboBox_SetCueBanner(Requires: #include <GuiComboBox.au3>) |Sets the cue banner text that is displayed for the edit control of a combo box , $hWnd, $sText)
Function _GUICtrlComboBox_SetCurSel(Requires: #include <GuiComboBox.au3>) |Select a string in the list of a ComboBox , $hWnd [, $iIndex = -1])
Function _GUICtrlComboBox_SetDroppedWidth(Requires: #include <GuiComboBox.au3>) |Set the maximum allowable width, in pixels, of the ListBox of a ComboBox , $hWnd, $iWidth)
Function _GUICtrlComboBox_SetEditSel(Requires: #include <GuiComboBox.au3>) |Select characters in the edit control of a ComboBox , $hWnd, $iStart, $iStop)
Function _GUICtrlComboBox_SetEditText(Requires: #include <GuiComboBox.au3>) |Set the text of the edit control of the ComboBox , $hWnd, $sText)
Function _GUICtrlComboBox_SetExtendedUI(Requires: #include <GuiComboBox.au3>) |Select either the default user interface or the extended user interface , $hWnd [, $bExtended = False])
Function _GUICtrlComboBox_SetHorizontalExtent(Requires: #include <GuiComboBox.au3>) |Set the width, in pixels, by which a list box can be scrolled horizontally , $hWnd, $iWidth)
Function _GUICtrlComboBox_SetItemHeight(Requires: #include <GuiComboBox.au3>) |Set the height of list items or the selection field in a ComboBox , $hWnd, $iHeight [, $iComponent = -1])
Function _GUICtrlComboBox_SetMinVisible(Requires: #include <GuiComboBox.au3>) |Set the minimum number of visible items in the drop-down list of a ComboBox , $hWnd, $iMinimum)
Function _GUICtrlComboBox_SetTopIndex(Requires: #include <GuiComboBox.au3>) |Ensure that a particular item is visible in the ListBox of a ComboBox , $hWnd, $iIndex)
Function _GUICtrlComboBox_ShowDropDown(Requires: #include <GuiComboBox.au3>) |Show or hide the ListBox of a ComboBox , $hWnd [, $bShow = False])
Function _GUICtrlDTP_Create(Requires: #include <GuiDateTimePicker.au3>) |Create a DTP control , $hWnd, $iX, $iY [, $iWidth = 120 [, $iHeight = 21 [, $iStyle = 0x00000000 [, $iExStyle = 0x00000000]]]])
Function _GUICtrlDTP_Destroy(Requires: #include <GuiDateTimePicker.au3>) |Delete the control , ByRef $hWnd)
Function _GUICtrlDTP_GetMCColor(Requires: #include <GuiDateTimePicker.au3>) |Retrieves the specified color , $hWnd, $iIndex)
Function _GUICtrlDTP_GetMCFont(Requires: #include <GuiDateTimePicker.au3>) |Retrieves the month calendar font handle , $hWnd)
Function _GUICtrlDTP_GetMonthCal(Requires: #include <GuiDateTimePicker.au3>) |Retrieves the handle to child month calendar control , $hWnd)
Function _GUICtrlDTP_GetRange(Requires: #include <GuiDateTimePicker.au3>) |Retrieves the current minimum and maximum allowable system times , $hWnd)
Function _GUICtrlDTP_GetRangeEx(Requires: #include <GuiDateTimePicker.au3>) |Retrieves the current minimum and maximum allowable system times , $hWnd)
Function _GUICtrlDTP_GetSystemTime(Requires: #include <GuiDateTimePicker.au3>) |Retrieves the currently selected date and time , $hWnd)
Function _GUICtrlDTP_GetSystemTimeEx(Requires: #include <GuiDateTimePicker.au3>) |Retrieves the currently selected date and time , $hWnd)
Function _GUICtrlDTP_SetFormat(Requires: #include <GuiDateTimePicker.au3>) |Sets the display based on a given format string , $hWnd, $sFormat)
Function _GUICtrlDTP_SetMCColor(Requires: #include <GuiDateTimePicker.au3>) |Sets the color for a given portion of the month calendar , $hWnd, $iIndex, $iColor)
Function _GUICtrlDTP_SetMCFont(Requires: #include <GuiDateTimePicker.au3>) |Sets the month calendar font , $hWnd, $hFont [, $bRedraw = True])
Function _GUICtrlDTP_SetRange(Requires: #include <GuiDateTimePicker.au3>) |Sets the current minimum and maximum allowable system times , $hWnd, ByRef $aRange)
Function _GUICtrlDTP_SetRangeEx(Requires: #include <GuiDateTimePicker.au3>) |Sets the current minimum and maximum allowable system times , $hWnd, ByRef $tRange)
Function _GUICtrlDTP_SetSystemTime(Requires: #include <GuiDateTimePicker.au3>) |Sets the currently selected date and time , $hWnd, ByRef $aDate)
Function _GUICtrlDTP_SetSystemTimeEx(Requires: #include <GuiDateTimePicker.au3>) |Sets the currently selected date and time , $hWnd, ByRef $tDate [, $bFlag = False])
Function _GUICtrlEdit_AppendText(Requires: #include <GuiEdit.au3>) |Append text , $hWnd, $sText)
Function _GUICtrlEdit_BeginUpdate(Requires: #include <GuiEdit.au3>) |Prevents updating of the control until the _GUICtrlEdit_EndUpdate function is called , $hWnd)
Function _GUICtrlEdit_CanUndo(Requires: #include <GuiEdit.au3>) |Determines whether there are any actions in an edit control's undo queue , $hWnd)
Function _GUICtrlEdit_CharFromPos(Requires: #include <GuiEdit.au3>) |Retrieve information about the character closest to a specified point in the client area , $hWnd, $iX, $iY)
Function _GUICtrlEdit_Create(Requires: #include <GuiEdit.au3>) |Create an Edit control , $hWnd, $sText, $iX, $iY [, $iWidth = 150 [, $iHeight = 150 [, $iStyle = 0x003010C4 [, $iExStyle = 0x00000200]]]])
Function _GUICtrlEdit_Destroy(Requires: #include <GuiEdit.au3>) |Delete the Edit control , ByRef $hWnd)
Function _GUICtrlEdit_EmptyUndoBuffer(Requires: #include <GuiEdit.au3>) |Resets the undo flag of an edit control , $hWnd)
Function _GUICtrlEdit_EndUpdate(Requires: #include <GuiEdit.au3>) |Enables screen repainting that was turned off with the _GUICtrlEdit_BeginUpdate function , $hWnd)
Function _GUICtrlEdit_Find(Requires: #include <GuiEdit.au3>) |Initiates a find dialog , $hWnd [, $bReplace = False])
Function _GUICtrlEdit_FmtLines(Requires: #include <GuiEdit.au3>) |Determines whether an edit control includes soft line-break characters , $hWnd [, $bSoftBreak = False])
Function _GUICtrlEdit_GetCueBanner(Requires: #include <GuiEdit.au3>) |Gets the cue banner text displayed in the edit control , $hWnd)
Function _GUICtrlEdit_GetFirstVisibleLine(Requires: #include <GuiEdit.au3>) |Retrieves the 0-based index of the uppermost visible line in a multiline edit control , $hWnd)
Function _GUICtrlEdit_GetLimitText(Requires: #include <GuiEdit.au3>) |Gets the current text limit for an edit control , $hWnd)
Function _GUICtrlEdit_GetLine(Requires: #include <GuiEdit.au3>) |Retrieves a line of text from an edit control , $hWnd, $iLine)
Function _GUICtrlEdit_GetLineCount(Requires: #include <GuiEdit.au3>) |Retrieves the number of lines , $hWnd)
Function _GUICtrlEdit_GetMargins(Requires: #include <GuiEdit.au3>) |Retrieves the widths of the left and right margins , $hWnd)
Function _GUICtrlEdit_GetModify(Requires: #include <GuiEdit.au3>) |Retrieves the state of an edit control's modification flag , $hWnd)
Function _GUICtrlEdit_GetPasswordChar(Requires: #include <GuiEdit.au3>) |Gets the password character that an edit control displays when the user enters text , $hWnd)
Function _GUICtrlEdit_GetRECT(Requires: #include <GuiEdit.au3>) |Retrieves the formatting rectangle of an edit control , $hWnd)
Function _GUICtrlEdit_GetRECTEx(Requires: #include <GuiEdit.au3>) |Retrieves the formatting rectangle of an edit control , $hWnd)
Function _GUICtrlEdit_GetSel(Requires: #include <GuiEdit.au3>) |Retrieves the starting and ending character positions of the current selection , $hWnd)
Function _GUICtrlEdit_GetText(Requires: #include <GuiEdit.au3>) |Get the text from the edit control , $hWnd)
Function _GUICtrlEdit_GetTextLen(Requires: #include <GuiEdit.au3>) |Get the length of all the text from the edit control , $hWnd)
Function _GUICtrlEdit_HideBalloonTip(Requires: #include <GuiEdit.au3>) |Hides any balloon tip associated with an edit control , $hWnd)
Function _GUICtrlEdit_InsertText(Requires: #include <GuiEdit.au3>) |Insert text , $hWnd, $sText [, $iIndex = -1])
Function _GUICtrlEdit_LineFromChar(Requires: #include <GuiEdit.au3>) |Retrieves the index of the line that contains the specified character index , $hWnd [, $iIndex = -1])
Function _GUICtrlEdit_LineIndex(Requires: #include <GuiEdit.au3>) |Retrieves the character index of the first character of a specified line , $hWnd [, $iIndex = -1])
Function _GUICtrlEdit_LineLength(Requires: #include <GuiEdit.au3>) |Retrieves the length, in characters, of a line , $hWnd [, $iIndex = -1])
Function _GUICtrlEdit_LineScroll(Requires: #include <GuiEdit.au3>) |Scrolls the text , $hWnd, $iHoriz, $iVert)
Function _GUICtrlEdit_PosFromChar(Requires: #include <GuiEdit.au3>) |Retrieves the client area coordinates of a specified character in an edit control , $hWnd, $iIndex)
Function _GUICtrlEdit_ReplaceSel(Requires: #include <GuiEdit.au3>) |Replaces the current selection , $hWnd, $sText [, $bUndo = True])
Function _GUICtrlEdit_Scroll(Requires: #include <GuiEdit.au3>) |Scrolls the text vertically , $hWnd, $iDirection)
Function _GUICtrlEdit_SetCueBanner(Requires: #include <GuiEdit.au3>) |Sets the cue banner text that is displayed for the edit control , $hWnd, $sText [, $bOnFocus = False])
Function _GUICtrlEdit_SetLimitText(Requires: #include <GuiEdit.au3>) |Sets the text limit , $hWnd, $iLimit)
Function _GUICtrlEdit_SetMargins(Requires: #include <GuiEdit.au3>) |Sets the widths of the left and right margins , $hWnd [, $iMargin = 0x1 [, $iLeft = 0xFFFF [, $iRight = 0xFFFF]]])
Function _GUICtrlEdit_SetModify(Requires: #include <GuiEdit.au3>) |Sets or clears the modification flag , $hWnd, $bModified)
Function _GUICtrlEdit_SetPasswordChar(Requires: #include <GuiEdit.au3>) |Sets or removes the password character for an edit control , $hWnd [, $sDisplayChar = "0"])
Function _GUICtrlEdit_SetReadOnly($ES_READONLY) |Sets or removes the read-only style (Requires: #include <GuiEdit.au3>), $hWnd, $bReadOnly)
Function _GUICtrlEdit_SetRECT(Requires: #include <GuiEdit.au3>) |Sets the formatting rectangle of a multiline edit control , $hWnd, $aRect)
Function _GUICtrlEdit_SetRECTEx(Requires: #include <GuiEdit.au3>) |Sets the formatting rectangle of a multiline edit control , $hWnd, $tRECT)
Function _GUICtrlEdit_SetRECTNP(Requires: #include <GuiEdit.au3>) |Sets the formatting rectangle of a multiline edit control , $hWnd, $aRect)
Function _GUICtrlEdit_SetRectNPEx(Requires: #include <GuiEdit.au3>) |Sets the formatting rectangle of a multiline edit control , $hWnd, $tRECT)
Function _GUICtrlEdit_SetSel(Requires: #include <GuiEdit.au3>) |Selects a range of characters , $hWnd, $iStart, $iEnd)
Function _GUICtrlEdit_SetTabStops(Requires: #include <GuiEdit.au3>) |Sets the tab stops , $hWnd, $aTabStops)
Function _GUICtrlEdit_SetText(Requires: #include <GuiEdit.au3>) |Set the text , $hWnd, $sText)
Function _GUICtrlEdit_ShowBalloonTip(Requires: #include <GuiEdit.au3>) |Displays a balloon tip associated with an edit control , $hWnd, $sTitle, $sText, $iIcon)
Function _GUICtrlEdit_Undo(Requires: #include <GuiEdit.au3>) |Undoes the last edit control operation in the control's undo queue , $hWnd)
Function _GUICtrlHeader_AddItem(Requires: #include <GuiHeader.au3>) |Adds a new header item , $hWnd, $sText [, $iWidth = 50 [, $iAlign = 0 [, $iImage = -1 [, $bOnRight = False]]]])
Function _GUICtrlHeader_ClearFilter(Requires: #include <GuiHeader.au3>) |Clears the filter , $hWnd, $iIndex)
Function _GUICtrlHeader_ClearFilterAll(Requires: #include <GuiHeader.au3>) |Clears all of the filters , $hWnd)
Function _GUICtrlHeader_Create(Requires: #include <GuiHeader.au3>) |Creates a Header control , $hWnd [, $iStyle = 0x00000046])
Function _GUICtrlHeader_CreateDragImage(Requires: #include <GuiHeader.au3>) |Creates a semi-transparent version of an item's image for use as a dragging image , $hWnd, $iIndex)
Function _GUICtrlHeader_DeleteItem(Requires: #include <GuiHeader.au3>) |Deletes a header item , $hWnd, $iIndex)
Function _GUICtrlHeader_Destroy(Requires: #include <GuiHeader.au3>) |Delete the Header control , ByRef $hWnd)
Function _GUICtrlHeader_EditFilter(Requires: #include <GuiHeader.au3>) |Starts editing the specified filter , $hWnd, $iIndex [, $bDiscard = True])
Function _GUICtrlHeader_GetBitmapMargin(Requires: #include <GuiHeader.au3>) |Retrieves the width of the bitmap margin , $hWnd)
Function _GUICtrlHeader_GetImageList(Requires: #include <GuiHeader.au3>) |Retrieves the handle to the image list , $hWnd)
Function _GUICtrlHeader_GetItem(Requires: #include <GuiHeader.au3>) |Retrieves information about an item , $hWnd, $iIndex, ByRef $tItem)
Function _GUICtrlHeader_GetItemAlign(Requires: #include <GuiHeader.au3>) |Retrieves the item text alignment , $hWnd, $iIndex)
Function _GUICtrlHeader_GetItemBitmap(Requires: #include <GuiHeader.au3>) |Retrieves the item bitmap handle , $hWnd, $iIndex)
Function _GUICtrlHeader_GetItemCount(Requires: #include <GuiHeader.au3>) |Retrieves a count of the items , $hWnd)
Function _GUICtrlHeader_GetItemDisplay(Requires: #include <GuiHeader.au3>) |Returns the item display information , $hWnd, $iIndex)
Function _GUICtrlHeader_GetItemFlags(Requires: #include <GuiHeader.au3>) |Returns the item flag information , $hWnd, $iIndex)
Function _GUICtrlHeader_GetItemFormat(Requires: #include <GuiHeader.au3>) |Returns the format of the item , $hWnd, $iIndex)
Function _GUICtrlHeader_GetItemImage(Requires: #include <GuiHeader.au3>) |Retrieves the index of an image within the image list , $hWnd, $iIndex)
Function _GUICtrlHeader_GetItemOrder(Requires: #include <GuiHeader.au3>) |Retrieves the order in which the item appears , $hWnd, $iIndex)
Function _GUICtrlHeader_GetItemParam(Requires: #include <GuiHeader.au3>) |Retrieves the param value of the item , $hWnd, $iIndex)
Function _GUICtrlHeader_GetItemRect(Requires: #include <GuiHeader.au3>) |Retrieves the bounding rectangle for a given item , $hWnd, $iIndex)
Function _GUICtrlHeader_GetItemRectEx(Requires: #include <GuiHeader.au3>) |Retrieves the bounding rectangle for a given item , $hWnd, $iIndex)
Function _GUICtrlHeader_GetItemText(Requires: #include <GuiHeader.au3>) |Retrieves the item text , $hWnd, $iIndex)
Function _GUICtrlHeader_GetItemWidth(Requires: #include <GuiHeader.au3>) |Retrieves the item's width , $hWnd, $iIndex)
Function _GUICtrlHeader_GetOrderArray(Requires: #include <GuiHeader.au3>) |Retrieves the current left-to-right order of items in a header control , $hWnd)
Function _GUICtrlHeader_GetUnicodeFormat(Requires: #include <GuiHeader.au3>) |Retrieves the Unicode character format flag for the control , $hWnd)
Function _GUICtrlHeader_HitTest(Requires: #include <GuiHeader.au3>) |Tests a point to determine which item is at the specified point , $hWnd, $iX, $iY)
Function _GUICtrlHeader_InsertItem(Requires: #include <GuiHeader.au3>) |Inserts a new header item , $hWnd, $iIndex, $sText [, $iWidth = 50 [, $iAlign = 0 [, $iImage = -1 [, $bOnRight = False]]]])
Function _GUICtrlHeader_Layout(Requires: #include <GuiHeader.au3>) |Retrieves the correct size and position of the control , $hWnd, ByRef $tRECT)
Function _GUICtrlHeader_OrderToIndex(Requires: #include <GuiHeader.au3>) |Retrieves an index value for an item based on its order , $hWnd, $iOrder)
Function _GUICtrlHeader_SetBitmapMargin(Requires: #include <GuiHeader.au3>) |Sets the width of the margin, specified in pixels, of a bitmap , $hWnd, $iWidth)
Function _GUICtrlHeader_SetFilterChangeTimeout(Requires: #include <GuiHeader.au3>) |Sets the filter change timeout interval , $hWnd, $iTimeOut)
Function _GUICtrlHeader_SetHotDivider(Requires: #include <GuiHeader.au3>) |Changes the hot divider color , $hWnd, $iFlag, $iInputValue)
Function _GUICtrlHeader_SetImageList(Requires: #include <GuiHeader.au3>) |Assigns an image list , $hWnd, $hImage)
Function _GUICtrlHeader_SetItem(Requires: #include <GuiHeader.au3>) |Sets information about an item , $hWnd, $iIndex, ByRef $tItem)
Function _GUICtrlHeader_SetItemAlign(Requires: #include <GuiHeader.au3>) |Sets the item text alignment , $hWnd, $iIndex, $iAlign)
Function _GUICtrlHeader_SetItemBitmap(Requires: #include <GuiHeader.au3>) |Sets the item bitmap handle , $hWnd, $iIndex, $hBitmap)
Function _GUICtrlHeader_SetItemDisplay(Requires: #include <GuiHeader.au3>) |Returns the item display information , $hWnd, $iIndex, $iDisplay)
Function _GUICtrlHeader_SetItemFlags(Requires: #include <GuiHeader.au3>) |Returns the item flag information , $hWnd, $iIndex, $iFlags)
Function _GUICtrlHeader_SetItemFormat(Requires: #include <GuiHeader.au3>) |Sets the format of the item , $hWnd, $iIndex, $iFormat)
Function _GUICtrlHeader_SetItemImage(Requires: #include <GuiHeader.au3>) |Sets the index of an image within the image list , $hWnd, $iIndex, $iImage)
Function _GUICtrlHeader_SetItemOrder(Requires: #include <GuiHeader.au3>) |Sets the order in which the item appears , $hWnd, $iIndex, $iOrder)
Function _GUICtrlHeader_SetItemParam(Requires: #include <GuiHeader.au3>) |Sets the param value of the item , $hWnd, $iIndex, $iParam)
Function _GUICtrlHeader_SetItemText(Requires: #include <GuiHeader.au3>) |Sets the item text , $hWnd, $iIndex, $sText)
Function _GUICtrlHeader_SetItemWidth(Requires: #include <GuiHeader.au3>) |Sets the item's width , $hWnd, $iIndex, $iWidth)
Function _GUICtrlHeader_SetOrderArray(Requires: #include <GuiHeader.au3>) |Sets the current left-to-right order of items , $hWnd, ByRef $aOrder)
Function _GUICtrlHeader_SetUnicodeFormat(Requires: #include <GuiHeader.au3>) |Sets the Unicode character format flag for the control , $hWnd, $bUnicode)
Function _GUICtrlIpAddress_ClearAddress(Requires: #include <GuiIPAddress.au3>) |Clears the contents of the IP address control , $hWnd)
Function _GUICtrlIpAddress_Create(Requires: #include <GuiIPAddress.au3>) |Create a GUI IP Address Control , $hWnd, $iX, $iY [, $iWidth = 125 [, $iHeight = 25 [, $iStyles = 0x00000000 [, $iExstyles = 0x00000000]]]])
Function _GUICtrlIpAddress_Destroy(Requires: #include <GuiIPAddress.au3>) |Delete the IP Address control , ByRef $hWnd)
Function _GUICtrlIpAddress_Get(Requires: #include <GuiIPAddress.au3>) |Retrieves the address from the IP address control , $hWnd)
Function _GUICtrlIpAddress_GetArray(Requires: #include <GuiIPAddress.au3>) |Retrieves the address from the IP address control , $hWnd)
Function _GUICtrlIpAddress_GetEx(Requires: #include <GuiIPAddress.au3>) |Retrieves the address from the IP address control , $hWnd)
Function _GUICtrlIpAddress_IsBlank(Requires: #include <GuiIPAddress.au3>) |Determines if all fields in the IP address control are blank , $hWnd)
Function _GUICtrlIpAddress_Set(Requires: #include <GuiIPAddress.au3>) |Sets the address in the IP address control , $hWnd, $sAddress)
Function _GUICtrlIpAddress_SetArray(Requires: #include <GuiIPAddress.au3>) |Sets the address in the IP address control , $hWnd, $aAddress)
Function _GUICtrlIpAddress_SetEx(Requires: #include <GuiIPAddress.au3>) |Sets the address in the IP address control , $hWnd, $tIP)
Function _GUICtrlIpAddress_SetFocus(Requires: #include <GuiIPAddress.au3>) |Sets the keyboard focus to the specified field in the IP address control , $hWnd, $iIndex)
Function _GUICtrlIpAddress_SetFont(Requires: #include <GuiIPAddress.au3>) |Set font of the control , $hWnd [, $sFaceName = "Arial" [, $iFontSize = 12 [, $iFontWeight = 400 [, $bFontItalic = False]]]])
Function _GUICtrlIpAddress_SetRange(Requires: #include <GuiIPAddress.au3>) |Sets the valid range for the specified field in the IP address control , $hWnd, $iIndex [, $iLowRange = 0 [, $iHighRange = 255]])
Function _GUICtrlIpAddress_ShowHide(Requires: #include <GuiIPAddress.au3>) |Shows/Hides the IP address control , $hWnd, $iState)
Function _GUICtrlListBox_AddFile(Requires: #include <GuiListBox.au3>) |Adds the specified filename that contains a directory listing , $hWnd, $sFilePath)
Function _GUICtrlListBox_AddString(Requires: #include <GuiListBox.au3>) |Add a string , $hWnd, $sText)
Function _GUICtrlListBox_BeginUpdate(Requires: #include <GuiListBox.au3>) |Prevents updating of the control until the EndUpdate function is called , $hWnd)
Function _GUICtrlListBox_ClickItem(Requires: #include <GuiListBox.au3>) |Clicks an item , $hWnd, $iIndex [, $sButton = "left" [, $bMove = False [, $iClicks = 1 [, $iSpeed = 0]]]])
Function _GUICtrlListBox_Create(Requires: #include <GuiListBox.au3>) |Create a Listbox control , $hWnd, $sText, $iX, $iY [, $iWidth = 100 [, $iHeight = 200 [, $iStyle = 0x00B00002 [, $iExStyle = 0x00000200]]]])
Function _GUICtrlListBox_DeleteString(Requires: #include <GuiListBox.au3>) |Delete a string , $hWnd, $iIndex)
Function _GUICtrlListBox_Destroy(Requires: #include <GuiListBox.au3>) |Delete the control , ByRef $hWnd)
Function _GUICtrlListBox_Dir(Requires: #include <GuiListBox.au3>) |Adds the names of directories and files , $hWnd, $sFilePath [, $iAttributes = 0 [, $bBrackets = True]])
Function _GUICtrlListBox_EndUpdate(Requires: #include <GuiListBox.au3>) |Enables screen repainting that was turned off with the BeginUpdate function , $hWnd)
Function _GUICtrlListBox_FindInText(Requires: #include <GuiListBox.au3>) |Searches for an item that contains the specified text anywhere in its text , $hWnd, $sText [, $iStart = -1 [, $bWrapOK = True]])
Function _GUICtrlListBox_FindString(Requires: #include <GuiListBox.au3>) |Search for a string , $hWnd, $sText [, $bExact = False])
Function _GUICtrlListBox_GetAnchorIndex(Requires: #include <GuiListBox.au3>) |Retrieves the index of the anchor item , $hWnd)
Function _GUICtrlListBox_GetCaretIndex(Requires: #include <GuiListBox.au3>) |Return index of item that has the focus rectangle , $hWnd)
Function _GUICtrlListBox_GetCount(Requires: #include <GuiListBox.au3>) |Retrieves the number of items , $hWnd)
Function _GUICtrlListBox_GetCurSel(Requires: #include <GuiListBox.au3>) |Retrieve the index of the currently selected item , $hWnd)
Function _GUICtrlListBox_GetHorizontalExtent(Requires: #include <GuiListBox.au3>) |Retrieve from a list box the the scrollable width , $hWnd)
Function _GUICtrlListBox_GetItemData(Requires: #include <GuiListBox.au3>) |Retrieves the application defined value associated with an item , $hWnd, $iIndex)
Function _GUICtrlListBox_GetItemHeight(Requires: #include <GuiListBox.au3>) |Retrieves the height of items , $hWnd)
Function _GUICtrlListBox_GetItemRect(Requires: #include <GuiListBox.au3>) |Retrieves the rectangle that bounds an item , $hWnd, $iIndex)
Function _GUICtrlListBox_GetItemRectEx(Requires: #include <GuiListBox.au3>) |Retrieves the rectangle that bounds an item , $hWnd, $iIndex)
Function _GUICtrlListBox_GetListBoxInfo(Requires: #include <GuiListBox.au3>) |Retrieve the number of items per column in a specified list box , $hWnd)
Function _GUICtrlListBox_GetLocale(Requires: #include <GuiListBox.au3>) |Retrieves the current locale , $hWnd)
Function _GUICtrlListBox_GetLocaleCountry(Requires: #include <GuiListBox.au3>) |Retrieves the current country code , $hWnd)
Function _GUICtrlListBox_GetLocaleLang(Requires: #include <GuiListBox.au3>) |Retrieves the current language identifier , $hWnd)
Function _GUICtrlListBox_GetLocalePrimLang(Requires: #include <GuiListBox.au3>) |Extract primary language id from a language id , $hWnd)
Function _GUICtrlListBox_GetLocaleSubLang(Requires: #include <GuiListBox.au3>) |Extract sublanguage id from a language id , $hWnd)
Function _GUICtrlListBox_GetSel(Requires: #include <GuiListBox.au3>) |Retrieves the selection state of an item , $hWnd, $iIndex)
Function _GUICtrlListBox_GetSelCount(Requires: #include <GuiListBox.au3>) |Retrieves the total number of selected items , $hWnd)
Function _GUICtrlListBox_GetSelItems(Requires: #include <GuiListBox.au3>) |Fills a buffer with an array of selected items , $hWnd)
Function _GUICtrlListBox_GetSelItemsText(Requires: #include <GuiListBox.au3>) |Retrieves the text of selected items , $hWnd)
Function _GUICtrlListBox_GetText(string) |Returns the item at the specified index (Requires: #include <GuiListBox.au3>), $hWnd, $iIndex)
Function _GUICtrlListBox_GetTextLen(Requires: #include <GuiListBox.au3>) |Gets the length of a string in a list box , $hWnd, $iIndex)
Function _GUICtrlListBox_GetTopIndex(Requires: #include <GuiListBox.au3>) |Retrieve the index of the first visible item in a list , $hWnd)
Function _GUICtrlListBox_InitStorage(Requires: #include <GuiListBox.au3>) |This message allocates memory for storing items , $hWnd, $iItems, $iBytes)
Function _GUICtrlListBox_InsertString(Requires: #include <GuiListBox.au3>) |Insert a string into the list , $hWnd, $sText [, $iIndex = -1])
Function _GUICtrlListBox_ItemFromPoint(Requires: #include <GuiListBox.au3>) |Retrieves the 0-based index of the item nearest the specified point , $hWnd, $iX, $iY)
Function _GUICtrlListBox_ReplaceString(Requires: #include <GuiListBox.au3>) |Replaces the text of an item , $hWnd, $iIndex, $sText)
Function _GUICtrlListBox_ResetContent(Requires: #include <GuiListBox.au3>) |Remove all items from the list box , $hWnd)
Function _GUICtrlListBox_SelectString(Requires: #include <GuiListBox.au3>) |Searchs for an item that begins with the specified string , $hWnd, $sText [, $iIndex = -1])
Function _GUICtrlListBox_SelItemRange(Requires: #include <GuiListBox.au3>) |Select one or more consecutive items in a multiple-selection list box , $hWnd, $iFirst, $iLast [, $bSelect = True])
Function _GUICtrlListBox_SelItemRangeEx(Requires: #include <GuiListBox.au3>) |Select one or more consecutive items in a multiple-selection list box , $hWnd, $iFirst, $iLast)
Function _GUICtrlListBox_SetAnchorIndex(Requires: #include <GuiListBox.au3>) |Set the anchor itemâthat is, the item from which a multiple selection starts , $hWnd, $iIndex)
Function _GUICtrlListBox_SetCaretIndex(Requires: #include <GuiListBox.au3>) |Set the focus rectangle to the item at the specified index in a multiple-selection list box , $hWnd, $iIndex [, $bPartial = False])
Function _GUICtrlListBox_SetColumnWidth(Requires: #include <GuiListBox.au3>) |Set the width, in pixels, of all columns , $hWnd, $iWidth)
Function _GUICtrlListBox_SetCurSel(Requires: #include <GuiListBox.au3>) |Select a string and scroll it into view, if necessary , $hWnd, $iIndex)
Function _GUICtrlListBox_SetHorizontalExtent(Requires: #include <GuiListBox.au3>) |Set the width, in pixels, by which a list box can be scrolled horizontally , $hWnd, $iWidth)
Function _GUICtrlListBox_SetItemData(Requires: #include <GuiListBox.au3>) |Sets the value associated with the specified item , $hWnd, $iIndex, $iValue)
Function _GUICtrlListBox_SetItemHeight(Requires: #include <GuiListBox.au3>) |Sets the height, in pixels, of items , $hWnd, $iHeight [, $iIndex = 0])
Function _GUICtrlListBox_SetLocale(Requires: #include <GuiListBox.au3>) |Set the current locale , $hWnd, $iLocal)
Function _GUICtrlListBox_SetSel(s) |Select a string in a multiple-selection list box (Requires: #include <GuiListBox.au3>), $hWnd [, $iIndex = -1 [, $iSelect = -1]])
Function _GUICtrlListBox_SetTabStops(Requires: #include <GuiListBox.au3>) |Sets the tab-stop positions , $hWnd, $aTabStops)
Function _GUICtrlListBox_SetTopIndex(Requires: #include <GuiListBox.au3>) |Ensure that a particular item in a list box is visible , $hWnd, $iIndex)
Function _GUICtrlListBox_Sort(Requires: #include <GuiListBox.au3>) |Re-sorts list box if it has the $LBS_SORT style , $hWnd)
Function _GUICtrlListBox_SwapString(Requires: #include <GuiListBox.au3>) |Swaps the text of two items at the specified indices , $hWnd, $iIndexA, $iIndexB)
Function _GUICtrlListBox_UpdateHScroll(Requires: #include <GuiListBox.au3>) |Update the horizontal scroll bar based on the longest string , $hWnd)
Function _GUICtrlListView_AddArray(Requires: #include <GuiListView.au3>) |Adds items from an array to the control , $hWnd, ByRef $aItems)
Function _GUICtrlListView_AddColumn(Requires: #include <GuiListView.au3>) |Adds a new column in the control , $hWnd, $sText [, $iWidth = 50 [, $iAlign = -1 [, $iImage = -1 [, $bOnRight = False]]]])
Function _GUICtrlListView_AddItem(Requires: #include <GuiListView.au3>) |Adds a new item to the end of the list , $hWnd, $sText [, $iImage = -1 [, $iParam = 0]])
Function _GUICtrlListView_AddSubItem(Requires: #include <GuiListView.au3>) |Adds a new subitem to the control , $hWnd, $iIndex, $sText, $iSubItem [, $iImage = -1])
Function _GUICtrlListView_ApproximateViewHeight(Requires: #include <GuiListView.au3>) |Calculates the approximate height required to display a given number of items , $hWnd [, $iCount = -1 [, $iCX = -1 [, $iCY = -1]]])
Function _GUICtrlListView_ApproximateViewRect(Requires: #include <GuiListView.au3>) |Calculates the approximate size required to display a given number of items , $hWnd [, $iCount = -1 [, $iCX = -1 [, $iCY = -1]]])
Function _GUICtrlListView_ApproximateViewWidth(Requires: #include <GuiListView.au3>) |Calculates the approximate width required to display a given number of items , $hWnd [, $iCount = -1 [, $iCX = -1 [, $iCY = -1]]])
Function _GUICtrlListView_Arrange(Requires: #include <GuiListView.au3>) |Arranges items in icon view , $hWnd [, $iArrange = 0])
Function _GUICtrlListView_BeginUpdate() |Prevents updating of the control until the _GUICtrlListView_EndUpdate function is called (Requires: #include <GuiListView.au3>), $hWnd)
Function _GUICtrlListView_CancelEditLabel(Requires: #include <GuiListView.au3>) |Cancels an item text editing operation , $hWnd)
Function _GUICtrlListView_ClickItem(Requires: #include <GuiListView.au3>) |Clicks an item , $hWnd, $iIndex [, $sButton = "left" [, $bMove = False [, $iClicks = 1 [, $iSpeed = 1]]]])
Function _GUICtrlListView_CopyItems(Requires: #include <GuiListView.au3>) |Copy Items between 2 list-view controls , $hWnd_Source, $hWnd_Destination [, $bDelFlag = False])
Function _GUICtrlListView_Create(Requires: #include <GuiListView.au3>) |Create a ListView control , $hWnd, $sHeaderText, $iX, $iY [, $iWidth = 150 [, $iHeight = 150 [, $iStyle = 0x0000000D [, $iExStyle = 0x00000000 [, $bCoInit = False]]]]])
Function _GUICtrlListView_CreateDragImage(Requires: #include <GuiListView.au3>) |Creates a drag image list for the specified item , $hWnd, $iIndex)
Function _GUICtrlListView_CreateSolidBitMap(Requires: #include <GuiListView.au3>) |Creates a solid color bitmap , $hWnd, $iColor, $iWidth, $iHeight)
Function _GUICtrlListView_DeleteAllItems(Requires: #include <GuiListView.au3>) |Removes all items from a list-view control , $hWnd)
Function _GUICtrlListView_DeleteColumn(Requires: #include <GuiListView.au3>) |Removes a column from a list-view control , $hWnd, $iCol)
Function _GUICtrlListView_DeleteItem(Requires: #include <GuiListView.au3>) |Removes an item from a list-view control , $hWnd, $iIndex)
Function _GUICtrlListView_DeleteItemsSelected(s) |Deletes item selected (Requires: #include <GuiListView.au3>), $hWnd)
Function _GUICtrlListView_Destroy(Requires: #include <GuiListView.au3>) |Delete the listview control , ByRef $hWnd)
Function _GUICtrlListView_DrawDragImage(Requires: #include <GuiListView.au3>) |Draw the Drag Image , ByRef $hWnd, ByRef $aDrag)
Function _GUICtrlListView_EditLabel(Requires: #include <GuiListView.au3>) |Begins in place editing of the specified item text , $hWnd, $iIndex)
Function _GUICtrlListView_EnableGroupView(Requires: #include <GuiListView.au3>) |Enables or disables whether the items in the control display as a group , $hWnd [, $bEnable = True])
Function _GUICtrlListView_EndUpdate() |Enables screen repainting that was turned off with the _GUICtrlListView_BeginUpdate function (Requires: #include <GuiListView.au3>), $hWnd)
Function _GUICtrlListView_EnsureVisible(Requires: #include <GuiListView.au3>) |Ensures that a list-view item is either entirely or partially visible , $hWnd, $iIndex [, $bPartialOK = False])
Function _GUICtrlListView_FindInText(Requires: #include <GuiListView.au3>) |Searches for an item that contains the specified text anywhere in its text , $hWnd, $sText [, $iStart = -1 [, $bWrapOK = True [, $bReverse = False]]])
Function _GUICtrlListView_FindItem(Requires: #include <GuiListView.au3>) |Searches for an item with the specified characteristics , $hWnd, $iStart, ByRef $tFindInfo [, $sText = ""])
Function _GUICtrlListView_FindNearest(Requires: #include <GuiListView.au3>) |Finds the item nearest to the position specified , $hWnd, $iX, $iY [, $iDir = 0 [, $iStart = -1 [, $bWrapOK = True]]])
Function _GUICtrlListView_FindParam(Requires: #include <GuiListView.au3>) |Searches for an item with the specified lParam , $hWnd, $iParam [, $iStart = -1])
Function _GUICtrlListView_FindText(Requires: #include <GuiListView.au3>) |Searches for an item with the specified text , $hWnd, $sText [, $iStart = -1 [, $bPartialOK = True [, $bWrapOK = True]]])
Function _GUICtrlListView_GetBkColor(Requires: #include <GuiListView.au3>) |Retrieves the background color of a list-view control , $hWnd)
Function _GUICtrlListView_GetBkImage(Requires: #include <GuiListView.au3>) |Retrieves the background image in the control , $hWnd)
Function _GUICtrlListView_GetCallbackMask(Requires: #include <GuiListView.au3>) |Retrieves the callback mask for the control , $hWnd)
Function _GUICtrlListView_GetColumn(Requires: #include <GuiListView.au3>) |Retrieves the attributes of a column , $hWnd, $iIndex)
Function _GUICtrlListView_GetColumnCount(Requires: #include <GuiListView.au3>) |Retrieve the number of columns , $hWnd)
Function _GUICtrlListView_GetColumnOrder(Requires: #include <GuiListView.au3>) |Retrieves the current left-to-right order of columns , $hWnd)
Function _GUICtrlListView_GetColumnOrderArray(Requires: #include <GuiListView.au3>) |Retrieves the current left-to-right order of columns in the control , $hWnd)
Function _GUICtrlListView_GetColumnWidth(Requires: #include <GuiListView.au3>) |Retrieves the width of a column in report or list view , $hWnd, $iCol)
Function _GUICtrlListView_GetCounterPage(Requires: #include <GuiListView.au3>) |Calculates the number of items that can fit vertically in the visible area , $hWnd)
Function _GUICtrlListView_GetEditControl(Requires: #include <GuiListView.au3>) |Retrieves the handle to the edit control being used to edit an item's text , $hWnd)
Function _GUICtrlListView_GetExtendedListViewStyle(Requires: #include <GuiListView.au3>) |Retrieves the extended styles that are currently in use , $hWnd)
Function _GUICtrlListView_GetFocusedGroup(Requires: #include <GuiListView.au3>) |Gets the group that has the focus , $hWnd)
Function _GUICtrlListView_GetGroupCount(Requires: #include <GuiListView.au3>) |Gets the number of groups , $hWnd)
Function _GUICtrlListView_GetGroupInfo(Requires: #include <GuiListView.au3>) |Retrieves group information , $hWnd, $iGroupID)
Function _GUICtrlListView_GetGroupInfoByIndex(Requires: #include <GuiListView.au3>) |Retrieves group information , $hWnd, $iIndex)
Function _GUICtrlListView_GetGroupRect(Requires: #include <GuiListView.au3>) |Gets the rectangle for a specified group , $hWnd, $iGroupID [, $iGet = $LVGGR_GROUP])
Function _GUICtrlListView_GetGroupViewEnabled(Requires: #include <GuiListView.au3>) |Checks whether the control has group view enabled , $hWnd)
Function _GUICtrlListView_GetHeader(Requires: #include <GuiListView.au3>) |Retrieves the handle to the header control , $hWnd)
Function _GUICtrlListView_GetHotCursor(Requires: #include <GuiListView.au3>) |Retrieves the HCURSOR value used when the pointer is over an item while hot tracking is enabled , $hWnd)
Function _GUICtrlListView_GetHotItem(Requires: #include <GuiListView.au3>) |Retrieves the index of the hot item , $hWnd)
Function _GUICtrlListView_GetHoverTime(Requires: #include <GuiListView.au3>) |Retrieves the amount of time that the mouse cursor must hover over an item before it is selected , $hWnd)
Function _GUICtrlListView_GetImageList(Requires: #include <GuiListView.au3>) |Retrieves the handle to an image list used for drawing listview items , $hWnd, $iImageList)
Function _GUICtrlListView_GetISearchString(Requires: #include <GuiListView.au3>) |Retrieves the incremental search string of the control , $hWnd)
Function _GUICtrlListView_GetItem(Requires: #include <GuiListView.au3>) |Retrieves an item's attributes , $hWnd, $iIndex [, $iSubItem = 0])
Function _GUICtrlListView_GetItemChecked(Requires: #include <GuiListView.au3>) |Returns the check state for a list-view control item , $hWnd, $iIndex)
Function _GUICtrlListView_GetItemCount(Requires: #include <GuiListView.au3>) |Retrieves the number of items in a list-view control , $hWnd)
Function _GUICtrlListView_GetItemCut(Requires: #include <GuiListView.au3>) |Determines whether the item is marked for a cut and paste operation , $hWnd, $iIndex)
Function _GUICtrlListView_GetItemDropHilited(Requires: #include <GuiListView.au3>) |Determines whether the item is highlighted as a drag-and-drop target , $hWnd, $iIndex)
Function _GUICtrlListView_GetItemEx(Requires: #include <GuiListView.au3>) |Retrieves some or all of an item's attributes , $hWnd, ByRef $tItem)
Function _GUICtrlListView_GetItemFocused(Requires: #include <GuiListView.au3>) |Determines whether the item is highlighted as a drag-and-drop target , $hWnd, $iIndex)
Function _GUICtrlListView_GetItemGroupID(Requires: #include <GuiListView.au3>) |Gets the item group ID , $hWnd, $iIndex)
Function _GUICtrlListView_GetItemImage(Requires: #include <GuiListView.au3>) |Retrieves the index of the item's icon , $hWnd, $iIndex [, $iSubItem = 0])
Function _GUICtrlListView_GetItemIndent(Requires: #include <GuiListView.au3>) |Retrieves the number of image widths the item is indented , $hWnd, $iIndex)
Function _GUICtrlListView_GetItemParam(Requires: #include <GuiListView.au3>) |Retrieves the application specific value of the item , $hWnd, $iIndex)
Function _GUICtrlListView_GetItemPosition(Requires: #include <GuiListView.au3>) |Retrieves the position of an item , $hWnd, $iIndex)
Function _GUICtrlListView_GetItemPositionX(Requires: #include <GuiListView.au3>) |Retrieves the X position of an item , $hWnd, $iIndex)
Function _GUICtrlListView_GetItemPositionY(Requires: #include <GuiListView.au3>) |Retrieves the Y position of an item , $hWnd, $iIndex)
Function _GUICtrlListView_GetItemRect(Requires: #include <GuiListView.au3>) |Retrieves the bounding rectangle for all or part of an item , $hWnd, $iIndex [, $iPart = 3])
Function _GUICtrlListView_GetItemRectEx(Requires: #include <GuiListView.au3>) |Retrieves the bounding rectangle for all or part of an item , $hWnd, $iIndex [, $iPart = 3])
Function _GUICtrlListView_GetItemSelected(Requires: #include <GuiListView.au3>) |Determines whether the item is selected , $hWnd, $iIndex)
Function _GUICtrlListView_GetItemSpacing(Requires: #include <GuiListView.au3>) |Determines the spacing between items in the control , $hWnd [, $bSmall = False])
Function _GUICtrlListView_GetItemSpacingX(Requires: #include <GuiListView.au3>) |Determines the horizontal spacing between items in the control , $hWnd [, $bSmall = False])
Function _GUICtrlListView_GetItemSpacingY(Requires: #include <GuiListView.au3>) |Determines the vertical spacing between items in the control , $hWnd [, $bSmall = False])
Function _GUICtrlListView_GetItemState(Requires: #include <GuiListView.au3>) |Retrieves the state of a listview item , $hWnd, $iIndex, $iMask)
Function _GUICtrlListView_GetItemStateImage(Requires: #include <GuiListView.au3>) |Gets the state image that is displayed , $hWnd, $iIndex)
Function _GUICtrlListView_GetItemText(Requires: #include <GuiListView.au3>) |Retrieves the text of an item or subitem , $hWnd, $iIndex [, $iSubItem = 0])
Function _GUICtrlListView_GetItemTextArray(Requires: #include <GuiListView.au3>) |Retrieves all of a list-view item , $hWnd [, $iItem = -1])
Function _GUICtrlListView_GetItemTextString(Requires: #include <GuiListView.au3>) |Retrieves all of a list-view item , $hWnd [, $iItem = -1])
Function _GUICtrlListView_GetNextItem(Requires: #include <GuiListView.au3>) |Searches for an item that has the specified properties , $hWnd [, $iStart = -1 [, $iSearch = 0 [, $iState = 8]]])
Function _GUICtrlListView_GetNumberOfWorkAreas(Requires: #include <GuiListView.au3>) |Retrieves the number of working areas in the control , $hWnd)
Function _GUICtrlListView_GetOrigin(Requires: #include <GuiListView.au3>) |Retrieves the current view origin for the control , $hWnd)
Function _GUICtrlListView_GetOriginX(Requires: #include <GuiListView.au3>) |Retrieves the current horizontal view origin for the control , $hWnd)
Function _GUICtrlListView_GetOriginY(Requires: #include <GuiListView.au3>) |Retrieves the current vertical view origin for the control , $hWnd)
Function _GUICtrlListView_GetOutlineColor(Requires: #include <GuiListView.au3>) |Retrieves the color of the border of the control , $hWnd)
Function _GUICtrlListView_GetSelectedColumn(Requires: #include <GuiListView.au3>) |Retrieves the index of the selected column , $hWnd)
Function _GUICtrlListView_GetSelectedCount(Requires: #include <GuiListView.au3>) |Determines the number of selected items , $hWnd)
Function _GUICtrlListView_GetSelectedIndices(s) |Retrieve indices of selected item (Requires: #include <GuiListView.au3>), $hWnd [, $bArray = False])
Function _GUICtrlListView_GetSelectionMark(Requires: #include <GuiListView.au3>) |Retrieves the selection mark from the control , $hWnd)
Function _GUICtrlListView_GetStringWidth(Requires: #include <GuiListView.au3>) |Determines the width of a specified string , $hWnd, $sString)
Function _GUICtrlListView_GetSubItemRect(Requires: #include <GuiListView.au3>) |Retrieves information about an item bounding rectangle , $hWnd, $iIndex, $iSubItem [, $iPart = 0])
Function _GUICtrlListView_GetTextBkColor(Requires: #include <GuiListView.au3>) |Retrieves the text background color of the control , $hWnd)
Function _GUICtrlListView_GetTextColor(Requires: #include <GuiListView.au3>) |Retrieves the text color of the control , $hWnd)
Function _GUICtrlListView_GetToolTips(Requires: #include <GuiListView.au3>) |Retrieves the ToolTip control handle , $hWnd)
Function _GUICtrlListView_GetTopIndex(Requires: #include <GuiListView.au3>) |Retrieves the index of the topmost visible item when in list or report view , $hWnd)
Function _GUICtrlListView_GetUnicodeFormat(Requires: #include <GuiListView.au3>) |Retrieves the Unicode character format flag for the control , $hWnd)
Function _GUICtrlListView_GetView(Requires: #include <GuiListView.au3>) |Retrieves the current view of the control , $hWnd)
Function _GUICtrlListView_GetViewDetails(Requires: #include <GuiListView.au3>) |Determines whether the view mode is in detail mode , $hWnd)
Function _GUICtrlListView_GetViewLarge(Requires: #include <GuiListView.au3>) |Determines whether the view mode is in large icon mode , $hWnd)
Function _GUICtrlListView_GetViewList(Requires: #include <GuiListView.au3>) |Determines whether the view mode is in list mode , $hWnd)
Function _GUICtrlListView_GetViewRect(Requires: #include <GuiListView.au3>) |Retrieves the bounding rectangle of all items in the control , $hWnd)
Function _GUICtrlListView_GetViewSmall(Requires: #include <GuiListView.au3>) |Determines whether the view mode is in small icon mode , $hWnd)
Function _GUICtrlListView_GetViewTile(Requires: #include <GuiListView.au3>) |Determines whether the view mode is in tile mode , $hWnd)
Function _GUICtrlListView_HideColumn(Requires: #include <GuiListView.au3>) |Hides the column "sets column width to zero" , $hWnd, $iCol)
Function _GUICtrlListView_HitTest(Requires: #include <GuiListView.au3>) |Determines which item is at a specified position , $hWnd [, $iX = -1 [, $iY = -1]])
Function _GUICtrlListView_InsertColumn(Requires: #include <GuiListView.au3>) |Inserts a new column in the control , $hWnd, $iIndex, $sText [, $iWidth = 50 [, $iAlign = -1 [, $iImage = -1 [, $bOnRight = False]]]])
Function _GUICtrlListView_InsertGroup(Requires: #include <GuiListView.au3>) |Inserts a group , $hWnd, $iIndex, $iGroupID, $sHeader [, $iAlign = 0])
Function _GUICtrlListView_InsertItem(Requires: #include <GuiListView.au3>) |Inserts a new item in the control , $hWnd, $sText [, $iIndex = -1 [, $iImage = -1 [, $iParam = 0]]])
Function _GUICtrlListView_JustifyColumn(Requires: #include <GuiListView.au3>) |Set Justification of a column for a list-view control , $hWnd, $iIndex [, $iAlign = -1])
Function _GUICtrlListView_MapIDToIndex(Requires: #include <GuiListView.au3>) |Maps the ID of an item to an index , $hWnd, $iID)
Function _GUICtrlListView_MapIndexToID(Requires: #include <GuiListView.au3>) |Maps an index to an item ID , $hWnd, $iIndex)
Function _GUICtrlListView_RedrawItems(Requires: #include <GuiListView.au3>) |Forces the control to redraw a range of items , $hWnd, $iFirst, $iLast)
Function _GUICtrlListView_RegisterSortCallBack(Requires: #include <GuiListView.au3>) |Register the Simple Sort callback function , $hWnd [, $bNumbers = True [, $bArrows = True]])
Function _GUICtrlListView_RemoveAllGroups(Requires: #include <GuiListView.au3>) |Removes all groups from the control , $hWnd)
Function _GUICtrlListView_RemoveGroup(Requires: #include <GuiListView.au3>) |Removes a group from the control , $hWnd, $iGroupID)
Function _GUICtrlListView_Scroll(Requires: #include <GuiListView.au3>) |Scrolls the content of a list-view , $hWnd, $iDX, $iDY)
Function _GUICtrlListView_SetBkColor(Requires: #include <GuiListView.au3>) |Sets the background color of the control , $hWnd, $iColor)
Function _GUICtrlListView_SetBkImage(Requires: #include <GuiListView.au3>) |Sets the background image in the control , $hWnd [, $sURL = "" [, $iStyle = 0 [, $iXOffset = 0 [, $iYOffset = 0]]]])
Function _GUICtrlListView_SetCallBackMask(Requires: #include <GuiListView.au3>) |Changes the callback mask for the control , $hWnd, $iMask)
Function _GUICtrlListView_SetColumn(Requires: #include <GuiListView.au3>) |Sets the attributes of a column , $hWnd, $iIndex, $sText [, $iWidth = -1 [, $iAlign = -1 [, $iImage = -1 [, $bOnRight = False]]]])
Function _GUICtrlListView_SetColumnOrder(Requires: #include <GuiListView.au3>) |Sets the left-to-right order of columns , $hWnd, $sOrder)
Function _GUICtrlListView_SetColumnOrderArray(Requires: #include <GuiListView.au3>) |Sets the left-to-right order of columns in the control , $hWnd, $aOrder)
Function _GUICtrlListView_SetColumnWidth(Requires: #include <GuiListView.au3>) |Changes the width of a column , $hWnd, $iCol, $iWidth)
Function _GUICtrlListView_SetExtendedListViewStyle(Requires: #include <GuiListView.au3>) |Sets extended styles , $hWnd, $iExStyle [, $iExMask = 0])
Function _GUICtrlListView_SetGroupInfo(Requires: #include <GuiListView.au3>) |Sets group information , $hWnd, $iGroupID, $sHeader [, $iAlign = 0 [, $iState = $LVGS_NORMAL]])
Function _GUICtrlListView_SetHotItem(Requires: #include <GuiListView.au3>) |Sets the hot item , $hWnd, $iIndex)
Function _GUICtrlListView_SetHoverTime(Requires: #include <GuiListView.au3>) |Sets the amount of time which the mouse cursor must hover over an item before it is selected , $hWnd, $iTime)
Function _GUICtrlListView_SetIconSpacing(Requires: #include <GuiListView.au3>) |Sets the spacing between icons where the style is large icon , $hWnd, $iCX, $iCY)
Function _GUICtrlListView_SetImageList(Requires: #include <GuiListView.au3>) |Assigns an image list to the control , $hWnd, $hHandle [, $iType = 0])
Function _GUICtrlListView_SetItem(Requires: #include <GuiListView.au3>) |Sets some or all of a item's attributes , $hWnd, $sText [, $iIndex = 0 [, $iSubItem = 0 [, $iImage = -1 [, $iParam = -1 [, $iIndent = -1]]]]])
Function _GUICtrlListView_SetItemChecked(Requires: #include <GuiListView.au3>) |Sets the checked state , $hWnd, $iIndex [, $bCheck = True])
Function _GUICtrlListView_SetItemCount(Requires: #include <GuiListView.au3>) |Causes the list-view control to allocate memory for the specified number of items , $hWnd, $iItems)
Function _GUICtrlListView_SetItemCut(Requires: #include <GuiListView.au3>) |Sets whether the item is marked for a cut-and-paste operation , $hWnd, $iIndex [, $bEnabled = True])
Function _GUICtrlListView_SetItemDropHilited(Requires: #include <GuiListView.au3>) |Sets whether the item is highlighted as a drag-and-drop target , $hWnd, $iIndex [, $bEnabled = True])
Function _GUICtrlListView_SetItemEx(Requires: #include <GuiListView.au3>) |Sets some or all of a item's attributes , $hWnd, ByRef $tItem)
Function _GUICtrlListView_SetItemFocused(Requires: #include <GuiListView.au3>) |Sets whether the item has the focus , $hWnd, $iIndex [, $bEnabled = True])
Function _GUICtrlListView_SetItemGroupID(Requires: #include <GuiListView.au3>) |Sets the item group ID , $hWnd, $iIndex, $iGroupID)
Function _GUICtrlListView_SetItemImage(Requires: #include <GuiListView.au3>) |Sets the index of the item's icon in the control's image list , $hWnd, $iIndex, $iImage [, $iSubItem = 0])
Function _GUICtrlListView_SetItemIndent(Requires: #include <GuiListView.au3>) |Sets the number of image widths to indent the item , $hWnd, $iIndex, $iIndent)
Function _GUICtrlListView_SetItemParam(Requires: #include <GuiListView.au3>) |Sets the value specific to the item , $hWnd, $iIndex, $iParam)
Function _GUICtrlListView_SetItemPosition(Requires: #include <GuiListView.au3>) |Moves an item to a specified position in the control , $hWnd, $iIndex, $iCX, $iCY)
Function _GUICtrlListView_SetItemPosition32(Requires: #include <GuiListView.au3>) |Moves an item to a specified position in the control , $hWnd, $iIndex, $iCX, $iCY)
Function _GUICtrlListView_SetItemSelected(Requires: #include <GuiListView.au3>) |Sets whether the item is selected , $hWnd, $iIndex [, $bSelected = True [, $bFocused = False]])
Function _GUICtrlListView_SetItemState(Requires: #include <GuiListView.au3>) |Changes the state of an item in the control , $hWnd, $iIndex, $iState, $iStateMask)
Function _GUICtrlListView_SetItemStateImage(Requires: #include <GuiListView.au3>) |Sets the state image that is displayed , $hWnd, $iIndex, $iImage)
Function _GUICtrlListView_SetItemText(Requires: #include <GuiListView.au3>) |Changes the text of an item or subitem , $hWnd, $iIndex, $sText [, $iSubItem = 0])
Function _GUICtrlListView_SetOutlineColor(Requires: #include <GuiListView.au3>) |Sets the color of the border , $hWnd, $iColor)
Function _GUICtrlListView_SetSelectedColumn(Requires: #include <GuiListView.au3>) |Sets the index of the selected column , $hWnd, $iCol)
Function _GUICtrlListView_SetSelectionMark(Requires: #include <GuiListView.au3>) |Sets the selection mark in the control , $hWnd, $iIndex)
Function _GUICtrlListView_SetTextBkColor(Requires: #include <GuiListView.au3>) |Sets the background color of text in the control , $hWnd, $iColor)
Function _GUICtrlListView_SetTextColor(Requires: #include <GuiListView.au3>) |Sets the color of text in the control , $hWnd, $iColor)
Function _GUICtrlListView_SetToolTips(Requires: #include <GuiListView.au3>) |Sets the ToolTip control that the control will use to display ToolTips , $hWnd, $hToolTip)
Function _GUICtrlListView_SetUnicodeFormat(Requires: #include <GuiListView.au3>) |Sets the UNICODE character format flag for the control , $hWnd, $bUnicode)
Function _GUICtrlListView_SetView(Requires: #include <GuiListView.au3>) |Sets the view of the control , $hWnd, $iView)
Function _GUICtrlListView_SetWorkAreas(Requires: #include <GuiListView.au3>) |Creates a work area within the control , $hWnd, $iLeft, $iTop, $iRight, $iBottom)
Function _GUICtrlListView_SimpleSort(limited) |Sorts a list-view control (Requires: #include <GuiListView.au3>), $hWnd, ByRef $vSortSense, $iCol [, $bToggleSense = True])
Function _GUICtrlListView_SortItems(Requires: #include <GuiListView.au3>) |Starts the sort call back, also sets the Arrow in the Header , $hWnd, $iCol)
Function _GUICtrlListView_SubItemHitTest(Requires: #include <GuiListView.au3>) |Determines which listview item or subitem is at a given position , $hWnd [, $iX = -1 [, $iY = -1]])
Function _GUICtrlListView_UnRegisterSortCallBack(Requires: #include <GuiListView.au3>) |UnRegister the Sort callback function , $hWnd)
Function _GUICtrlMenu_AddMenuItem(Requires: #include <GuiMenu.au3>) |Adds a new menu item to the end of the menu , $hMenu, $sText [, $iCmdID = 0 [, $hSubMenu = 0]])
Function _GUICtrlMenu_AppendMenu(Requires: #include <GuiMenu.au3>) |Appends a new item to the end of the specified menu bar, drop-down menu, submenu, or shortcut menu , $hMenu, $iFlags, $iNewItem, $vNewItem)
Function _GUICtrlMenu_CalculatePopupWindowPosition(Requires: #include <GuiMenu.au3>) |Calculates an appropriate pop-up window position , $iX, $iY, $iWidth, $iHeight [, $iFlags = 0 [, $tExclude = 0]])
Function _GUICtrlMenu_CheckMenuItem(Requires: #include <GuiMenu.au3>) |Sets the state of the specified menu item's check mark attribute to either selected or clear , $hMenu, $iItem [, $bCheck = True [, $bByPos = True]])
Function _GUICtrlMenu_CheckRadioItem(Requires: #include <GuiMenu.au3>) |Checks a specified menu item and makes it a radio item , $hMenu, $iFirst, $iLast, $iCheck [, $bByPos = True])
Function _GUICtrlMenu_CreateMenu(Requires: #include <GuiMenu.au3>) |Creates a menu , [$iStyle = $MNS_CHECKORBMP])
Function _GUICtrlMenu_CreatePopup(Requires: #include <GuiMenu.au3>) |Creates a drop down menu, submenu, or shortcut menu , [$iStyle = $MNS_CHECKORBMP])
Function _GUICtrlMenu_DeleteMenu(Requires: #include <GuiMenu.au3>) |Deletes an item from the specified menu , $hMenu, $iItem [, $bByPos = True])
Function _GUICtrlMenu_DestroyMenu(Requires: #include <GuiMenu.au3>) |Destroys the specified menu and frees any memory that the menu occupies , $hMenu)
Function _GUICtrlMenu_DrawMenuBar(Requires: #include <GuiMenu.au3>) |Redraws the menu bar of the specified window , $hWnd)
Function _GUICtrlMenu_EnableMenuItem(Requires: #include <GuiMenu.au3>) |Enables, disables, or grays the specified menu item , $hMenu, $iItem [, $iState = 0 [, $bByPos = True]])
Function _GUICtrlMenu_FindItem(Requires: #include <GuiMenu.au3>) |Retrieves a menu item based on it's text , $hMenu, $sText [, $bInStr = False [, $iStart = 0]])
Function _GUICtrlMenu_FindParent(Requires: #include <GuiMenu.au3>) |Retrieves the window to which a menu belongs , $hMenu)
Function _GUICtrlMenu_GetItemBmp(Requires: #include <GuiMenu.au3>) |Retrieves the bitmap displayed for the item , $hMenu, $iItem [, $bByPos = True])
Function _GUICtrlMenu_GetItemBmpChecked(Requires: #include <GuiMenu.au3>) |Retrieves the bitmap displayed if the item is selected , $hMenu, $iItem [, $bByPos = True])
Function _GUICtrlMenu_GetItemBmpUnchecked(Requires: #include <GuiMenu.au3>) |Retrieves the bitmap displayed if the item is not selected , $hMenu, $iItem [, $bByPos = True])
Function _GUICtrlMenu_GetItemChecked(Requires: #include <GuiMenu.au3>) |Retrieves the status of the menu item checked state , $hMenu, $iItem [, $bByPos = True])
Function _GUICtrlMenu_GetItemCount(Requires: #include <GuiMenu.au3>) |Retrieves the number of items in the specified menu , $hMenu)
Function _GUICtrlMenu_GetItemData(Requires: #include <GuiMenu.au3>) |Retrieves the application defined value associated with the menu item , $hMenu, $iItem [, $bByPos = True])
Function _GUICtrlMenu_GetItemDefault(Requires: #include <GuiMenu.au3>) |Retrieves the status of the menu item default state , $hMenu, $iItem [, $bByPos = True])
Function _GUICtrlMenu_GetItemDisabled(Requires: #include <GuiMenu.au3>) |Retrieves the status of the menu item disabled state , $hMenu, $iItem [, $bByPos = True])
Function _GUICtrlMenu_GetItemEnabled(Requires: #include <GuiMenu.au3>) |Retrieves the status of the menu item enabled state , $hMenu, $iItem [, $bByPos = True])
Function _GUICtrlMenu_GetItemGrayed(Requires: #include <GuiMenu.au3>) |Retrieves the status of the menu item grayed state , $hMenu, $iItem [, $bByPos = True])
Function _GUICtrlMenu_GetItemHighlighted(Requires: #include <GuiMenu.au3>) |Retrieves the status of the menu item highlighted state , $hMenu, $iItem [, $bByPos = True])
Function _GUICtrlMenu_GetItemID(Requires: #include <GuiMenu.au3>) |Retrieves the menu item ID , $hMenu, $iItem [, $bByPos = True])
Function _GUICtrlMenu_GetItemInfo(Requires: #include <GuiMenu.au3>) |Retrieves information about a menu item , $hMenu, $iItem [, $bByPos = True])
Function _GUICtrlMenu_GetItemRect(Requires: #include <GuiMenu.au3>) |Retrieves the bounding rectangle for the specified menu item , $hWnd, $hMenu, $iItem)
Function _GUICtrlMenu_GetItemRectEx(Requires: #include <GuiMenu.au3>) |Retrieves the bounding rectangle for the specified menu item , $hWnd, $hMenu, $iItem)
Function _GUICtrlMenu_GetItemState(Requires: #include <GuiMenu.au3>) |Retrieves the menu item state , $hMenu, $iItem [, $bByPos = True])
Function _GUICtrlMenu_GetItemStateEx(Requires: #include <GuiMenu.au3>) |Retrieves the menu flags associated with the specified menu item , $hMenu, $iItem [, $bByPos = True])
Function _GUICtrlMenu_GetItemSubMenu(Requires: #include <GuiMenu.au3>) |Retrieves a the submenu activated by a specified item , $hMenu, $iItem)
Function _GUICtrlMenu_GetItemText(Requires: #include <GuiMenu.au3>) |Retrieves the text of the specified menu item , $hMenu, $iItem [, $bByPos = True])
Function _GUICtrlMenu_GetItemType(Requires: #include <GuiMenu.au3>) |Retrieves the menu item type , $hMenu, $iItem [, $bByPos = True])
Function _GUICtrlMenu_GetMenu(Requires: #include <GuiMenu.au3>) |Retrieves the handle of the menu assigned to the given window , $hWnd)
Function _GUICtrlMenu_GetMenuBackground(Requires: #include <GuiMenu.au3>) |Retrieves the brush to use for the menu's background , $hMenu)
Function _GUICtrlMenu_GetMenuBarInfo(Requires: #include <GuiMenu.au3>) |Retrieves information about the specified menu bar , $hWnd [, $iItem = 0 [, $iObject = 1]])
Function _GUICtrlMenu_GetMenuContextHelpID(Requires: #include <GuiMenu.au3>) |Retrieves the context help identifier , $hMenu)
Function _GUICtrlMenu_GetMenuData(Requires: #include <GuiMenu.au3>) |Retrieves the application defined value , $hMenu)
Function _GUICtrlMenu_GetMenuDefaultItem(Requires: #include <GuiMenu.au3>) |Retrieves the default menu item on the specified menu , $hMenu [, $bByPos = True [, $iFlags = 0]])
Function _GUICtrlMenu_GetMenuHeight(Requires: #include <GuiMenu.au3>) |Retrieves the maximum height of a menu , $hMenu)
Function _GUICtrlMenu_GetMenuInfo(Requires: #include <GuiMenu.au3>) |Retrieves information about a specified menu , $hMenu)
Function _GUICtrlMenu_GetMenuStyle(Requires: #include <GuiMenu.au3>) |Retrieves the style information for a menu , $hMenu)
Function _GUICtrlMenu_GetSystemMenu(Requires: #include <GuiMenu.au3>) |Allows the application to access the window menu for copying and modifying , $hWnd [, $bRevert = False])
Function _GUICtrlMenu_InsertMenuItem(Requires: #include <GuiMenu.au3>) |Inserts a new menu item at the specified position , $hMenu, $iIndex, $sText [, $iCmdID = 0 [, $hSubMenu = 0]])
Function _GUICtrlMenu_InsertMenuItemEx(Requires: #include <GuiMenu.au3>) |Inserts a new menu item at the specified position in a menu , $hMenu, $iIndex, ByRef $tMenu [, $bByPos = True])
Function _GUICtrlMenu_IsMenu(Requires: #include <GuiMenu.au3>) |Determines whether a handle is a menu handle , $hMenu)
Function _GUICtrlMenu_LoadMenu(Requires: #include <GuiMenu.au3>) |Loads the specified menu resource from the executable file associated with an application instance , $hInst, $sMenuName)
Function _GUICtrlMenu_MapAccelerator(Requires: #include <GuiMenu.au3>) |Maps a menu accelerator key to it's position in the menu , $hMenu, $sAccelKey)
Function _GUICtrlMenu_MenuItemFromPoint(Requires: #include <GuiMenu.au3>) |Determines which menu item is at the specified location , $hWnd, $hMenu [, $iX = -1 [, $iY = -1]])
Function _GUICtrlMenu_RemoveMenu(Requires: #include <GuiMenu.au3>) |Deletes a menu item or detaches a submenu from the specified menu , $hMenu, $iItem [, $bByPos = True])
Function _GUICtrlMenu_SetItemBitmaps(Requires: #include <GuiMenu.au3>) |Associates the specified bitmap with a menu item , $hMenu, $iItem, $hChecked, $hUnChecked [, $bByPos = True])
Function _GUICtrlMenu_SetItemBmp(Requires: #include <GuiMenu.au3>) |Sets the bitmap displayed for the item , $hMenu, $iItem, $hBitmap [, $bByPos = True])
Function _GUICtrlMenu_SetItemBmpChecked(Requires: #include <GuiMenu.au3>) |Sets the bitmap displayed if the item is selected , $hMenu, $iItem, $hBitmap [, $bByPos = True])
Function _GUICtrlMenu_SetItemBmpUnchecked(Requires: #include <GuiMenu.au3>) |Sets the bitmap displayed if the item is not selected , $hMenu, $iItem, $hBitmap [, $bByPos = True])
Function _GUICtrlMenu_SetItemChecked(Requires: #include <GuiMenu.au3>) |Sets the checked state of a menu item , $hMenu, $iItem [, $bState = True [, $bByPos = True]])
Function _GUICtrlMenu_SetItemData(Requires: #include <GuiMenu.au3>) |Sets the application defined value for a menu item , $hMenu, $iItem, $iData [, $bByPos = True])
Function _GUICtrlMenu_SetItemDefault(Requires: #include <GuiMenu.au3>) |Sets the status of the menu item default state , $hMenu, $iItem [, $bState = True [, $bByPos = True]])
Function _GUICtrlMenu_SetItemDisabled(Requires: #include <GuiMenu.au3>) |Sets the disabled state of a menu item , $hMenu, $iItem [, $bState = True [, $bByPos = True]])
Function _GUICtrlMenu_SetItemEnabled(Requires: #include <GuiMenu.au3>) |Sets the enabled state of a menu item , $hMenu, $iItem [, $bState = True [, $bByPos = True]])
Function _GUICtrlMenu_SetItemGrayed(Requires: #include <GuiMenu.au3>) |Sets the grayed state of a menu item , $hMenu, $iItem [, $bState = True [, $bByPos = True]])
Function _GUICtrlMenu_SetItemHighlighted(Requires: #include <GuiMenu.au3>) |Sets the highlighted state of a menu item , $hMenu, $iItem [, $bState = True [, $bByPos = True]])
Function _GUICtrlMenu_SetItemID(Requires: #include <GuiMenu.au3>) |Sets the menu item ID , $hMenu, $iItem, $iID [, $bByPos = True])
Function _GUICtrlMenu_SetItemInfo(Requires: #include <GuiMenu.au3>) |Changes information about a menu item , $hMenu, $iItem, ByRef $tInfo [, $bByPos = True])
Function _GUICtrlMenu_SetItemState(Requires: #include <GuiMenu.au3>) |Sets the state of a menu item , $hMenu, $iItem, $iState [, $bState = True [, $bByPos = True]])
Function _GUICtrlMenu_SetItemSubMenu(Requires: #include <GuiMenu.au3>) |Sets the drop down menu or submenu associated with the menu item , $hMenu, $iItem, $hSubMenu [, $bByPos = True])
Function _GUICtrlMenu_SetItemText(Requires: #include <GuiMenu.au3>) |Sets the text for a menu item , $hMenu, $iItem, $sText [, $bByPos = True])
Function _GUICtrlMenu_SetItemType(Requires: #include <GuiMenu.au3>) |Sets the menu item type , $hMenu, $iItem, $iType [, $bByPos = True])
Function _GUICtrlMenu_SetMenu(Requires: #include <GuiMenu.au3>) |Assigns a new menu to the specified window , $hWnd, $hMenu)
Function _GUICtrlMenu_SetMenuBackground(Requires: #include <GuiMenu.au3>) |Sets the background brush for the menu , $hMenu, $hBrush)
Function _GUICtrlMenu_SetMenuContextHelpID(Requires: #include <GuiMenu.au3>) |Sets the context help identifier for the menu , $hMenu, $iHelpID)
Function _GUICtrlMenu_SetMenuData(Requires: #include <GuiMenu.au3>) |Sets the application defined for the menu , $hMenu, $iData)
Function _GUICtrlMenu_SetMenuDefaultItem(Requires: #include <GuiMenu.au3>) |Sets the default menu item , $hMenu, $iItem [, $bByPos = True])
Function _GUICtrlMenu_SetMenuHeight(Requires: #include <GuiMenu.au3>) |Sets the maximum height of the menu , $hMenu, $iHeight)
Function _GUICtrlMenu_SetMenuInfo(Requires: #include <GuiMenu.au3>) |Sets information for a specified menu , $hMenu, ByRef $tInfo)
Function _GUICtrlMenu_SetMenuStyle(Requires: #include <GuiMenu.au3>) |Sets the menu style , $hMenu, $iStyle)
Function _GUICtrlMenu_TrackPopupMenu(Requires: #include <GuiMenu.au3>) |Displays a shortcut menu at the specified location , $hMenu, $hWnd [, $iX = -1 [, $iY = -1 [, $iAlignX = 1 [, $iAlignY = 1 [, $iNotify = 0 [, $iButtons = 0]]]]]])
Function _GUICtrlMonthCal_Create(Requires: #include <GuiMonthCal.au3>) |Creates a Month Calendar control , $hWnd, $iX, $iY [, $iStyle = 0x00000000 [, $iExStyle = 0x00000000]])
Function _GUICtrlMonthCal_Destroy(Requires: #include <GuiMonthCal.au3>) |Delete the MonthCal control , ByRef $hWnd)
Function _GUICtrlMonthCal_GetCalendarBorder(Requires: #include <GuiMonthCal.au3>) |Gets the size of the border, in pixels , $hWnd)
Function _GUICtrlMonthCal_GetCalendarCount(Requires: #include <GuiMonthCal.au3>) |Gets the number of calendars currently displayed in the calendar control , $hWnd)
Function _GUICtrlMonthCal_GetColor(Requires: #include <GuiMonthCal.au3>) |Retrieves a given color for the control , $hWnd, $iIndex)
Function _GUICtrlMonthCal_GetColorArray(Requires: #include <GuiMonthCal.au3>) |Retrieves the color for a given portion of a month calendar control , $hWnd, $iColor)
Function _GUICtrlMonthCal_GetCurSel(Requires: #include <GuiMonthCal.au3>) |Retrieves the currently selected date , $hWnd)
Function _GUICtrlMonthCal_GetCurSelStr(Requires: #include <GuiMonthCal.au3>) |Retrieves the currently selected date in string format , $hWnd [, $sFormat = "%02d/%02d/%04d"])
Function _GUICtrlMonthCal_GetFirstDOW(Requires: #include <GuiMonthCal.au3>) |Retrieves the first day of the week , $hWnd)
Function _GUICtrlMonthCal_GetFirstDOWStr(Requires: #include <GuiMonthCal.au3>) |Retrieves the first day of the week as a string , $hWnd)
Function _GUICtrlMonthCal_GetMaxSelCount(Requires: #include <GuiMonthCal.au3>) |Retrieves the maximum date range that can be selected in a month calendar control , $hWnd)
Function _GUICtrlMonthCal_GetMaxTodayWidth(Requires: #include <GuiMonthCal.au3>) |Retrieves the maximum width of the "today" string in a month calendar control , $hWnd)
Function _GUICtrlMonthCal_GetMinReqHeight(Requires: #include <GuiMonthCal.au3>) |Retrieves the minimum height required to display a full month , $hWnd)
Function _GUICtrlMonthCal_GetMinReqRect(Requires: #include <GuiMonthCal.au3>) |Retrieves the minimum size required to display a full month , $hWnd)
Function _GUICtrlMonthCal_GetMinReqRectArray(Requires: #include <GuiMonthCal.au3>) |Retrieves the minimum size required to display a full month in a month calendar control , $hWnd)
Function _GUICtrlMonthCal_GetMinReqWidth(Requires: #include <GuiMonthCal.au3>) |Retrieves the minimum width required to display a full month , $hWnd)
Function _GUICtrlMonthCal_GetMonthDelta(Requires: #include <GuiMonthCal.au3>) |Retrieves the scroll rate for a month calendar control , $hWnd)
Function _GUICtrlMonthCal_GetMonthRange(Requires: #include <GuiMonthCal.au3>) |Retrieves date information that represents the high and low display limits , $hWnd [, $bPartial = False])
Function _GUICtrlMonthCal_GetMonthRangeMax(Requires: #include <GuiMonthCal.au3>) |Retrieves date information that represents the high limit of the controls display , $hWnd [, $bPartial = False])
Function _GUICtrlMonthCal_GetMonthRangeMaxStr(Requires: #include <GuiMonthCal.au3>) |Retrieves date information that represents the high limit of the controls display in string format , $hWnd [, $sFormat = "%02d/%02d/%04d"])
Function _GUICtrlMonthCal_GetMonthRangeMin(Requires: #include <GuiMonthCal.au3>) |Retrieves date information that represents the low limit of the controls display , $hWnd [, $bPartial = False])
Function _GUICtrlMonthCal_GetMonthRangeMinStr(Requires: #include <GuiMonthCal.au3>) |Retrieves date information that represents the low limit of the controls display in string format , $hWnd [, $sFormat = "%02d/%02d/%04d"])
Function _GUICtrlMonthCal_GetMonthRangeSpan(Requires: #include <GuiMonthCal.au3>) |Returns a value that represents the range, in months, spanned , $hWnd [, $bPartial = False])
Function _GUICtrlMonthCal_GetRange(Requires: #include <GuiMonthCal.au3>) |Retrieves the minimum and maximum allowable dates , $hWnd)
Function _GUICtrlMonthCal_GetRangeMax(Requires: #include <GuiMonthCal.au3>) |Retrieves the upper limit date range , $hWnd)
Function _GUICtrlMonthCal_GetRangeMaxStr(Requires: #include <GuiMonthCal.au3>) |Retrieves the upper limit date range in string format , $hWnd [, $sFormat = "%02d/%02d/%04d"])
Function _GUICtrlMonthCal_GetRangeMin(Requires: #include <GuiMonthCal.au3>) |Retrieves the lower limit date range , $hWnd)
Function _GUICtrlMonthCal_GetRangeMinStr(Requires: #include <GuiMonthCal.au3>) |Retrieves the lower limit date range in string form , $hWnd [, $sFormat = "%02d/%02d/%04d"])
Function _GUICtrlMonthCal_GetSelRange(Requires: #include <GuiMonthCal.au3>) |Retrieves the upper and lower limits of the date range currently selected , $hWnd)
Function _GUICtrlMonthCal_GetSelRangeMax(Requires: #include <GuiMonthCal.au3>) |Retrieves the upper date range currently selected by the user , $hWnd)
Function _GUICtrlMonthCal_GetSelRangeMaxStr(Requires: #include <GuiMonthCal.au3>) |Retrieves the upper date range currently selected by the user in string form , $hWnd [, $sFormat = "%02d/%02d/%04d"])
Function _GUICtrlMonthCal_GetSelRangeMin(Requires: #include <GuiMonthCal.au3>) |Retrieves the lower date range currently selected by the user , $hWnd)
Function _GUICtrlMonthCal_GetSelRangeMinStr(Requires: #include <GuiMonthCal.au3>) |Retrieves the lower date range currently selected by the user in string form , $hWnd [, $sFormat = "%02d/%02d/%04d"])
Function _GUICtrlMonthCal_GetToday(Requires: #include <GuiMonthCal.au3>) |Retrieves the date information for the date specified as "today" , $hWnd)
Function _GUICtrlMonthCal_GetTodayStr(Requires: #include <GuiMonthCal.au3>) |Retrieves the date information for the date specified as "today" in string format , $hWnd [, $sFormat = "%02d/%02d/%04d"])
Function _GUICtrlMonthCal_GetUnicodeFormat(Requires: #include <GuiMonthCal.au3>) |Retrieves the Unicode character format flag for the control , $hWnd)
Function _GUICtrlMonthCal_HitTest(Requires: #include <GuiMonthCal.au3>) |Determines which portion of a month calendar control is at a given point , $hWnd, $iX, $iY)
Function _GUICtrlMonthCal_SetCalendarBorder(Requires: #include <GuiMonthCal.au3>) |Sets the size of the border, in pixels , $hWnd [, $iBorderSize = 4 [, $bSetBorder = True]])
Function _GUICtrlMonthCal_SetColor(Requires: #include <GuiMonthCal.au3>) |Sets the color for a given portion of the month calendar , $hWnd, $iIndex, $iColor)
Function _GUICtrlMonthCal_SetCurSel(Requires: #include <GuiMonthCal.au3>) |Sets the currently selected date , $hWnd, $iYear, $iMonth, $iDay)
Function _GUICtrlMonthCal_SetDayState(Requires: #include <GuiMonthCal.au3>) |Sets the day states for all months that are currently visible , $hWnd, $aMasks)
Function _GUICtrlMonthCal_SetFirstDOW(Requires: #include <GuiMonthCal.au3>) |Sets the first day of the week for a month calendar control , $hWnd, $sDay)
Function _GUICtrlMonthCal_SetMaxSelCount(Requires: #include <GuiMonthCal.au3>) |Sets the maximum number of days that can be selected in a month calendar control , $hWnd, $iMaxSel)
Function _GUICtrlMonthCal_SetMonthDelta(Requires: #include <GuiMonthCal.au3>) |Sets the scroll rate for a month calendar control , $hWnd, $iDelta)
Function _GUICtrlMonthCal_SetRange(Requires: #include <GuiMonthCal.au3>) |Sets date information that represents the high and low limits , $hWnd, $iMinYear, $iMinMonth, $iMinDay, $iMaxYear, $iMaxMonth, $iMaxDay)
Function _GUICtrlMonthCal_SetSelRange(Requires: #include <GuiMonthCal.au3>) |Sets the selection for a month calendar control to a given date range , $hWnd, $iMinYear, $iMinMonth, $iMinDay, $iMaxYear, $iMaxMonth, $iMaxDay)
Function _GUICtrlMonthCal_SetToday(Requires: #include <GuiMonthCal.au3>) |Sets the date information for the date specified as "today" , $hWnd, $iYear, $iMonth, $iDay)
Function _GUICtrlMonthCal_SetUnicodeFormat(Requires: #include <GuiMonthCal.au3>) |Sets the Unicode character format flag for the control , $hWnd [, $bUnicode = False])
Function _GUICtrlRebar_AddBand(Requires: #include <GuiReBar.au3>) |Adds a new band in a rebar control , $hWndRebar, $hWndChild [, $iMinWidth = 100 [, $iDefaultWidth = 100 [, $sText = "" [, $iIndex = -1 [, $iStyle = -1]]]]])
Function _GUICtrlRebar_AddToolBarBand(Requires: #include <GuiReBar.au3>) |Adds a new band in a rebar control , $hWndRebar, $hWndToolbar [, $sText = "" [, $iIndex = -1 [, $iStyle = -1]]])
Function _GUICtrlRebar_BeginDrag(Requires: #include <GuiReBar.au3>) |Adds a new band in a rebar control , $hWnd, $iIndex [, $iPos = -1])
Function _GUICtrlRebar_Create(Requires: #include <GuiReBar.au3>) |Create a Rebar control , $hWnd [, $iStyles = 0x513])
Function _GUICtrlRebar_DeleteBand(Requires: #include <GuiReBar.au3>) |Deletes a band from a rebar control , $hWnd, $iIndex)
Function _GUICtrlRebar_Destroy(Requires: #include <GuiReBar.au3>) |Delete the control , ByRef $hWnd)
Function _GUICtrlRebar_DragMove(Requires: #include <GuiReBar.au3>) |Updates the drag position in the rebar control after a previous _GUICtrlRebar_BeginDrag message , $hWnd [, $iPos = -1])
Function _GUICtrlRebar_EndDrag(Requires: #include <GuiReBar.au3>) |Terminates the rebar control's drag-and-drop operation , $hWnd)
Function _GUICtrlRebar_GetBandBackColor(Requires: #include <GuiReBar.au3>) |Retrieves the Band background color , $hWnd, $iIndex)
Function _GUICtrlRebar_GetBandBorders(Requires: #include <GuiReBar.au3>) |Retrieves the borders of a band , $hWnd, $iIndex)
Function _GUICtrlRebar_GetBandBordersEx(Requires: #include <GuiReBar.au3>) |Retrieves the borders of a band , $hWnd, $iIndex)
Function _GUICtrlRebar_GetBandChildHandle(Requires: #include <GuiReBar.au3>) |Retrieves the Handle to the child window contained in the band, if any , $hWnd, $iIndex)
Function _GUICtrlRebar_GetBandChildSize(Requires: #include <GuiReBar.au3>) |Retrieves the Child size settings , $hWnd, $iIndex)
Function _GUICtrlRebar_GetBandCount(Requires: #include <GuiReBar.au3>) |Retrieves the count of bands currently in the rebar control , $hWnd)
Function _GUICtrlRebar_GetBandForeColor(Requires: #include <GuiReBar.au3>) |Retrieves the Band foreground color , $hWnd, $iIndex)
Function _GUICtrlRebar_GetBandHeaderSize(Requires: #include <GuiReBar.au3>) |Retrieves the size of the band's header, in pixels , $hWnd, $iIndex)
Function _GUICtrlRebar_GetBandID(Requires: #include <GuiReBar.au3>) |Get the value that the control uses to identify this band for custom draw notification messages , $hWnd, $iIndex)
Function _GUICtrlRebar_GetBandIdealSize(Requires: #include <GuiReBar.au3>) |Get Ideal width of the band, in pixels , $hWnd, $iIndex)
Function _GUICtrlRebar_GetBandLength(Requires: #include <GuiReBar.au3>) |Get Length of the band, in pixels , $hWnd, $iIndex)
Function _GUICtrlRebar_GetBandLParam(Requires: #include <GuiReBar.au3>) |Get Application-defined value , $hWnd, $iIndex)
Function _GUICtrlRebar_GetBandMargins(Requires: #include <GuiReBar.au3>) |Get Length of the band, in pixels , $hWnd)
Function _GUICtrlRebar_GetBandMarginsEx(Requires: #include <GuiReBar.au3>) |Get Length of the band, in pixels , $hWnd)
Function _GUICtrlRebar_GetBandRect(Requires: #include <GuiReBar.au3>) |Retrieves the bounding rectangle for a given band in a rebar control , $hWnd, $iIndex)
Function _GUICtrlRebar_GetBandRectEx(Requires: #include <GuiReBar.au3>) |Retrieves the bounding rectangle for a given band in a rebar control , $hWnd, $iIndex)
Function _GUICtrlRebar_GetBandStyle(Requires: #include <GuiReBar.au3>) |Get the band style Flags , $hWnd, $iIndex)
Function _GUICtrlRebar_GetBandStyleBreak(Requires: #include <GuiReBar.au3>) |Determine if band break flag is set , $hWnd, $iIndex)
Function _GUICtrlRebar_GetBandStyleChildEdge(Requires: #include <GuiReBar.au3>) |Determine if band child edge flag is set , $hWnd, $iIndex)
Function _GUICtrlRebar_GetBandStyleFixedBMP(Requires: #include <GuiReBar.au3>) |Determine if band fixed BMP flag is set , $hWnd, $iIndex)
Function _GUICtrlRebar_GetBandStyleFixedSize(Requires: #include <GuiReBar.au3>) |Determine if band fixed size flag is set , $hWnd, $iIndex)
Function _GUICtrlRebar_GetBandStyleGripperAlways(Requires: #include <GuiReBar.au3>) |Determine if band gripper flag is set , $hWnd, $iIndex)
Function _GUICtrlRebar_GetBandStyleHidden(Requires: #include <GuiReBar.au3>) |Determine if band hidden flag is set , $hWnd, $iIndex)
Function _GUICtrlRebar_GetBandStyleHideTitle(Requires: #include <GuiReBar.au3>) |Determine if band hide title flag is set , $hWnd, $iIndex)
Function _GUICtrlRebar_GetBandStyleNoGripper(Requires: #include <GuiReBar.au3>) |Determine if band noGripper flag is set , $hWnd, $iIndex)
Function _GUICtrlRebar_GetBandStyleTopAlign(Requires: #include <GuiReBar.au3>) |Determine if band top align flag is set , $hWnd, $iIndex)
Function _GUICtrlRebar_GetBandStyleUseChevron(Requires: #include <GuiReBar.au3>) |Determine if band use chevron flag is set , $hWnd, $iIndex)
Function _GUICtrlRebar_GetBandStyleVariableHeight(Requires: #include <GuiReBar.au3>) |Determine if band variable height flag is set , $hWnd, $iIndex)
Function _GUICtrlRebar_GetBandText(Requires: #include <GuiReBar.au3>) |Retrieves the display text for the band , $hWnd, $iIndex)
Function _GUICtrlRebar_GetBarHeight(Requires: #include <GuiReBar.au3>) |Retrieves the height of the rebar control , $hWnd)
Function _GUICtrlRebar_GetBarInfo(Requires: #include <GuiReBar.au3>) |Retrieves information about the rebar control and the image list it uses , $hWnd)
Function _GUICtrlRebar_GetBKColor(Requires: #include <GuiReBar.au3>) |Retrieves a rebar control's default background color , $hWnd)
Function _GUICtrlRebar_GetColorScheme(Requires: #include <GuiReBar.au3>) |Retrieves the color scheme information from the rebar control , $hWnd)
Function _GUICtrlRebar_GetRowCount(Requires: #include <GuiReBar.au3>) |Retrieves the number of rows of bands in a rebar control , $hWnd)
Function _GUICtrlRebar_GetRowHeight(Requires: #include <GuiReBar.au3>) |Retrieves the height of a specified row in a rebar control , $hWnd, $iIndex)
Function _GUICtrlRebar_GetTextColor(Requires: #include <GuiReBar.au3>) |Retrieves a rebar control's default text color , $hWnd)
Function _GUICtrlRebar_GetToolTips(Requires: #include <GuiReBar.au3>) |Retrieves the handle to any ToolTip control associated with the rebar control , $hWnd)
Function _GUICtrlRebar_GetUnicodeFormat(Requires: #include <GuiReBar.au3>) |Retrieves the Unicode character format flag for the control , $hWnd)
Function _GUICtrlRebar_HitTest(Requires: #include <GuiReBar.au3>) |Determines which band is at a specified position , $hWnd [, $iX = -1 [, $iY = -1]])
Function _GUICtrlRebar_IDToIndex(Requires: #include <GuiReBar.au3>) |Converts a band identifier to a band index in a rebar control , $hWnd, $iID)
Function _GUICtrlRebar_MaximizeBand(Requires: #include <GuiReBar.au3>) |Resizes a band in a rebar control to either its ideal or largest size , $hWnd, $iIndex [, $bIdeal = True])
Function _GUICtrlRebar_MinimizeBand(Requires: #include <GuiReBar.au3>) |Resizes a band in a rebar control to its smallest size , $hWnd, $iIndex)
Function _GUICtrlRebar_MoveBand(Requires: #include <GuiReBar.au3>) |Moves a band from one index to another , $hWnd, $iIndexFrom, $iIndexTo)
Function _GUICtrlRebar_SetBandBackColor(Requires: #include <GuiReBar.au3>) |Set the Band background color , $hWnd, $iIndex, $iColor)
Function _GUICtrlRebar_SetBandForeColor(Requires: #include <GuiReBar.au3>) |Set the Band foreground color , $hWnd, $iIndex, $iColor)
Function _GUICtrlRebar_SetBandHeaderSize(Requires: #include <GuiReBar.au3>) |Set the size of the band's header, in pixels , $hWnd, $iIndex, $iNewSize)
Function _GUICtrlRebar_SetBandID(Requires: #include <GuiReBar.au3>) |Set the value that the control uses to identify this band for custom draw notification messages , $hWnd, $iIndex, $iID)
Function _GUICtrlRebar_SetBandIdealSize(Requires: #include <GuiReBar.au3>) |Set Ideal width of the band, in pixels , $hWnd, $iIndex, $iNewSize)
Function _GUICtrlRebar_SetBandLength(Requires: #include <GuiReBar.au3>) |Set the size length of the band , $hWnd, $iIndex, $iLength)
Function _GUICtrlRebar_SetBandLParam(Requires: #include <GuiReBar.au3>) |Set Application-defined value , $hWnd, $iIndex, $lParam)
Function _GUICtrlRebar_SetBandStyle(Requires: #include <GuiReBar.au3>) |Set the band style Flags , $hWnd, $iIndex, $iStyle)
Function _GUICtrlRebar_SetBandStyleBreak(Requires: #include <GuiReBar.au3>) |Set whether the band is on a new line , $hWnd, $iIndex [, $bEnabled = True])
Function _GUICtrlRebar_SetBandStyleChildEdge(Requires: #include <GuiReBar.au3>) |Set whether the band has an edge at the top and bottom of the child window , $hWnd, $iIndex [, $bEnabled = True])
Function _GUICtrlRebar_SetBandStyleFixedBMP(Requires: #include <GuiReBar.au3>) |Set whether the band background bitmap does not move when the band is resized , $hWnd, $iIndex [, $bEnabled = True])
Function _GUICtrlRebar_SetBandStyleFixedSize(Requires: #include <GuiReBar.au3>) |Set whether the band can't be sized. With this style, the sizing grip is not displayed on the band , $hWnd, $iIndex [, $bEnabled = True])
Function _GUICtrlRebar_SetBandStyleGripperAlways(Requires: #include <GuiReBar.au3>) |Set whether the band will always have a sizing grip, even if it is the only band in the rebar , $hWnd, $iIndex [, $bEnabled = True])
Function _GUICtrlRebar_SetBandStyleHidden(Requires: #include <GuiReBar.au3>) |Set whether the band will not be visible , $hWnd, $iIndex [, $bEnabled = True])
Function _GUICtrlRebar_SetBandStyleHideTitle(Requires: #include <GuiReBar.au3>) |Set whether to keep band title hidden , $hWnd, $iIndex [, $bEnabled = True])
Function _GUICtrlRebar_SetBandStyleNoGripper(Requires: #include <GuiReBar.au3>) |Set whether the band will never have a sizing grip, even if there is more than one band in the rebar , $hWnd, $iIndex [, $bEnabled = True])
Function _GUICtrlRebar_SetBandStyleTopAlign(Requires: #include <GuiReBar.au3>) |Set whether to keep band in top row , $hWnd, $iIndex [, $bEnabled = True])
Function _GUICtrlRebar_SetBandStyleUseChevron(Requires: #include <GuiReBar.au3>) |Set whether to display drop-down button , $hWnd, $iIndex [, $bEnabled = True])
Function _GUICtrlRebar_SetBandStyleVariableHeight(Requires: #include <GuiReBar.au3>) |Set whether the band can be resized by the rebar control , $hWnd, $iIndex [, $bEnabled = True])
Function _GUICtrlRebar_SetBandText(Requires: #include <GuiReBar.au3>) |Sets the display text for the band of a rebar control , $hWnd, $iIndex, $sText)
Function _GUICtrlRebar_SetBarInfo(Requires: #include <GuiReBar.au3>) |Sets the characteristics of a rebar control , $hWnd, $hIml)
Function _GUICtrlRebar_SetBKColor(Requires: #include <GuiReBar.au3>) |Sets the default background color of a rebar control , $hWnd, $iColor)
Function _GUICtrlRebar_SetColorScheme(Requires: #include <GuiReBar.au3>) |Sets the color scheme of a rebar control , $hWnd, $iBtnHighlight, $iBtnShadow)
Function _GUICtrlRebar_SetTextColor(Requires: #include <GuiReBar.au3>) |Sets a rebar control's default text color , $hWnd, $iColor)
Function _GUICtrlRebar_SetToolTips(Requires: #include <GuiReBar.au3>) |Associates a ToolTip control with the rebar control , $hWnd, $hToolTip)
Function _GUICtrlRebar_SetUnicodeFormat(Requires: #include <GuiReBar.au3>) |Sets the Unicode character format flag for the control , $hWnd [, $bUnicode = True])
Function _GUICtrlRebar_ShowBand(Requires: #include <GuiReBar.au3>) |Shows or hides a given band in a rebar control , $hWnd, $iIndex [, $bShow = True])
Function _GUICtrlRichEdit_AppendText(Requires: #include <GuiRichEdit.au3>) |Appends text at the end of the client area , $hWnd, $sText)
Function _GUICtrlRichEdit_AutoDetectURL(Requires: #include <GuiRichEdit.au3>) |Enables or disables automatic detection of URLS , $hWnd, $bState)
Function _GUICtrlRichEdit_CanPaste(Requires: #include <GuiRichEdit.au3>) |Can the contents of the clipboard be pasted into the control? , $hWnd)
Function _GUICtrlRichEdit_CanPasteSpecial(Requires: #include <GuiRichEdit.au3>) |Can the contents of the clipboard be pasted into the control in both formats? , $hWnd)
Function _GUICtrlRichEdit_CanRedo(Requires: #include <GuiRichEdit.au3>) |Can an undone action be redone? , $hWnd)
Function _GUICtrlRichEdit_CanUndo(Requires: #include <GuiRichEdit.au3>) |Can an action be undone? , $hWnd)
Function _GUICtrlRichEdit_ChangeFontSize(s) |Increment or decrement font size of selected text (Requires: #include <GuiRichEdit.au3>), $hWnd, $iIncrement)
Function _GUICtrlRichEdit_Copy(Requires: #include <GuiRichEdit.au3>) |Copy text to clipboard , $hWnd)
Function _GUICtrlRichEdit_Create(Requires: #include <GuiRichEdit.au3>) |Create an Edit control , $hWnd, $sText, $iLeft, $iTop [, $iWidth = 150 [, $iHeight = 150 [, $iStyle = -1 [, $iExStyle = -1]]]])
Function _GUICtrlRichEdit_Cut(Requires: #include <GuiRichEdit.au3>) |Cut text to clipboard , $hWnd)
Function _GUICtrlRichEdit_Deselect(Requires: #include <GuiRichEdit.au3>) |Deselects text, leaving none selected , $hWnd)
Function _GUICtrlRichEdit_Destroy(Requires: #include <GuiRichEdit.au3>) |Delete the Rich Edit control , ByRef $hWnd)
Function _GUICtrlRichEdit_EmptyUndoBuffer(Requires: #include <GuiRichEdit.au3>) |Resets the undo flag of the control , $hWnd)
Function _GUICtrlRichEdit_FindText(Requires: #include <GuiRichEdit.au3>) |Search for a text starting at insertion point or at anchor point of selection , $hWnd, $sText [, $bForward = True [, $bMatchCase = False [, $bWholeWord = False [, $iBehavior = 0]]]])
Function _GUICtrlRichEdit_FindTextInRange(Requires: #include <GuiRichEdit.au3>) |Search for a text in a range of inter-character positions , $hWnd, $sText [, $iStart = 0 [, $iEnd = -1 [, $bMatchCase = False [, $bWholeWord = False [, $iBehavior = 0]]]]])
Function _GUICtrlRichEdit_GetBkColor(Requires: #include <GuiRichEdit.au3>) |Gets the background color of the control , $hWnd)
Function _GUICtrlRichEdit_GetCharAttributes(Requires: #include <GuiRichEdit.au3>) |Returns attributes of selected text , $hWnd)
Function _GUICtrlRichEdit_GetCharBkColor(Requires: #include <GuiRichEdit.au3>) |Retrieves the background color of the selected text or, if none selected, of the character to the right of the insertion point , $hWnd)
Function _GUICtrlRichEdit_GetCharColor(Requires: #include <GuiRichEdit.au3>) |Retrieves the color of the selected text or, if none selected, of the character to the right of the insertion point , $hWnd)
Function _GUICtrlRichEdit_GetCharPosFromXY(Requires: #include <GuiRichEdit.au3>) |Gets inter-character position closest to a specified point in the client area , $hWnd, $iX, $iY)
Function _GUICtrlRichEdit_GetCharPosOfNextWord(Requires: #include <GuiRichEdit.au3>) |Gets inter-character position before the next word , $hWnd, $iCpStart)
Function _GUICtrlRichEdit_GetCharPosOfPreviousWord(Requires: #include <GuiRichEdit.au3>) |Gets inter-character position before the Previous word , $hWnd, $iCpStart)
Function _GUICtrlRichEdit_GetCharWordBreakInfo(Requires: #include <GuiRichEdit.au3>) |Gets inter-character position before the Previous word/ , $hWnd, $iCp)
Function _GUICtrlRichEdit_GetFirstCharPosOnLine(Requires: #include <GuiRichEdit.au3>) |Retrieves the inter-character position preceding the first character of a line , $hWnd [, $iLine = -1])
Function _GUICtrlRichEdit_GetFont(Requires: #include <GuiRichEdit.au3>) |Gets the font attributes of a selection or, if no selection, at the insertion point , $hWnd)
Function _GUICtrlRichEdit_GetLineCount(Requires: #include <GuiRichEdit.au3>) |Retrieves the number of lines in a multi-line edit control , $hWnd)
Function _GUICtrlRichEdit_GetLineLength(Requires: #include <GuiRichEdit.au3>) |Retrieves the length of a line , $hWnd, $iLine)
Function _GUICtrlRichEdit_GetLineNumberFromCharPos(Requires: #include <GuiRichEdit.au3>) |Retrieves the line number on which an inter-character position is found , $hWnd, $iCharPos)
Function _GUICtrlRichEdit_GetNextRedo(Requires: #include <GuiRichEdit.au3>) |Retrieves the name or type ID of the next possible redo action , $hWnd [, $bName = True])
Function _GUICtrlRichEdit_GetNextUndo(Requires: #include <GuiRichEdit.au3>) |Retrieves the name or type ID of the next possible Undo action , $hWnd [, $bName = True])
Function _GUICtrlRichEdit_GetNumberOfFirstVisibleLine(Requires: #include <GuiRichEdit.au3>) |Gets number of the first line which is visible in the control , $hWnd)
Function _GUICtrlRichEdit_GetParaAlignment(s) |Gets the alignment of selected paragraph, or (if no selection) of the current paragraph (Requires: #include <GuiRichEdit.au3>), $hWnd)
Function _GUICtrlRichEdit_GetParaAttributes(first) |Gets the attributes of selected paragraph or (if no selection) of the current paragraph (Requires: #include <GuiRichEdit.au3>), $hWnd)
Function _GUICtrlRichEdit_GetParaBorder(first) |Gets the border settings of selected paragraph or (if no selection) of the current paragraph (Requires: #include <GuiRichEdit.au3>), $hWnd)
Function _GUICtrlRichEdit_GetParaIndents(first) |Gets the border indent settings of selected paragraph or (if no selection) of the current paragraph (Requires: #include <GuiRichEdit.au3>), $hWnd)
Function _GUICtrlRichEdit_GetParaNumbering(first) |Gets the numbering style of selected paragraph or (if no selection) of the current paragraph (Requires: #include <GuiRichEdit.au3>), $hWnd)
Function _GUICtrlRichEdit_GetParaShading(first) |Gets the shading settings of selected paragraph or (if no selection) of the current paragraph (Requires: #include <GuiRichEdit.au3>), $hWnd)
Function _GUICtrlRichEdit_GetParaSpacing(first) |Gets the spacing settings of selected paragraph or (if no selection) of the current paragraph (Requires: #include <GuiRichEdit.au3>), $hWnd)
Function _GUICtrlRichEdit_GetParaTabStops(first) |Gets the tabstops of selected paragraph or (if no selection) of the current paragraph (Requires: #include <GuiRichEdit.au3>), $hWnd)
Function _GUICtrlRichEdit_GetPasswordChar(Requires: #include <GuiRichEdit.au3>) |Gets the password character that a rich edit control displays when the user enters text , $hWnd)
Function _GUICtrlRichEdit_GetRECT(Requires: #include <GuiRichEdit.au3>) |Retrieves the formatting rectangle of a control , $hWnd)
Function _GUICtrlRichEdit_GetScrollPos(Requires: #include <GuiRichEdit.au3>) |Gets the Scrolling position of the control , $hWnd)
Function _GUICtrlRichEdit_GetSel(Requires: #include <GuiRichEdit.au3>) |Gets the low and high inter-character positions of a selection , $hWnd)
Function _GUICtrlRichEdit_GetSelAA(Requires: #include <GuiRichEdit.au3>) |Gets the anchor and active inter-character positions of a selection, in that order , $hWnd)
Function _GUICtrlRichEdit_GetSelText(Requires: #include <GuiRichEdit.au3>) |Retrieves the currently selected text , $hWnd)
Function _GUICtrlRichEdit_GetSpaceUnit(Requires: #include <GuiRichEdit.au3>) |Gets the unit of measure of horizontal and vertical space used in parameters of various _GUICtrlRichEdit functions 
Function _GUICtrlRichEdit_GetText(Requires: #include <GuiRichEdit.au3>) |Get all of the text in the control , $hWnd [, $bCrToCrLf = False [, $iCodePage = 0 [, $sReplChar = ""]]])
Function _GUICtrlRichEdit_GetTextInLine(Requires: #include <GuiRichEdit.au3>) |Gets a line of text , $hWnd, $iLine)
Function _GUICtrlRichEdit_GetTextInRange(Requires: #include <GuiRichEdit.au3>) |Gets the text from from one inter-character position to another , $hWnd, $iStart, $iEnd)
Function _GUICtrlRichEdit_GetTextLength(Requires: #include <GuiRichEdit.au3>) |Get the length of the whole text in the control , $hWnd [, $bExact = True [, $bChars = False]])
Function _GUICtrlRichEdit_GetVersion(Requires: #include <GuiRichEdit.au3>) |Retrieves the version of Rich Edit 
Function _GUICtrlRichEdit_GetXYFromCharPos(Requires: #include <GuiRichEdit.au3>) |Retrieves the XY coordinates of an inter-character position , $hWnd, $iCharPos)
Function _GUICtrlRichEdit_GetZoom(Requires: #include <GuiRichEdit.au3>) |Gets the zoom level of the control , $hWnd)
Function _GUICtrlRichEdit_GotoCharPos(Requires: #include <GuiRichEdit.au3>) |Moves the insertion point to an inter-character position , $hWnd, $iCharPos)
Function _GUICtrlRichEdit_HideSelection(or shows) |Hides a selection (Requires: #include <GuiRichEdit.au3>), $hWnd [, $bHide = True])
Function _GUICtrlRichEdit_InsertText(Requires: #include <GuiRichEdit.au3>) |Inserts text at insertion point or anchor point of selection , $hWnd, $sText)
Function _GUICtrlRichEdit_IsModified(Requires: #include <GuiRichEdit.au3>) |Retrieves the state of a rich edit control's modification flag , $hWnd)
Function _GUICtrlRichEdit_IsTextSelected(Requires: #include <GuiRichEdit.au3>) |Is text selected? , $hWnd)
Function _GUICtrlRichEdit_Paste(Requires: #include <GuiRichEdit.au3>) |Paste RTF or RTF with Objects from clipboard , $hWnd)
Function _GUICtrlRichEdit_PasteSpecial(Requires: #include <GuiRichEdit.au3>) |Paste RTF or RTF and Objects from clipboard , $hWnd [, $bAndObjects = True])
Function _GUICtrlRichEdit_PauseRedraw(Requires: #include <GuiRichEdit.au3>) |Pauses redrawing of the control , $hWnd)
Function _GUICtrlRichEdit_Redo(Requires: #include <GuiRichEdit.au3>) |Redoes last undone action , $hWnd)
Function _GUICtrlRichEdit_ReplaceText(Requires: #include <GuiRichEdit.au3>) |Replaces selected text , $hWnd, $sText [, $bCanUndo = True])
Function _GUICtrlRichEdit_ResumeRedraw(Requires: #include <GuiRichEdit.au3>) |Resumes redrawing of the control , $hWnd)
Function _GUICtrlRichEdit_ScrollLineOrPage(Requires: #include <GuiRichEdit.au3>) |Scrolls the text down or up a line or a page , $hWnd, $sAction)
Function _GUICtrlRichEdit_ScrollLines(Requires: #include <GuiRichEdit.au3>) |Scrolls the text down or up a number of lines , $hWnd, $iQlines)
Function _GUICtrlRichEdit_ScrollToCaret(insertion point) |Scrolls to show line on which caret is (Requires: #include <GuiRichEdit.au3>), $hWnd)
Function _GUICtrlRichEdit_SetBkColor(Requires: #include <GuiRichEdit.au3>) |Sets the background color of the control , $hWnd [, $iBngColor = Default])
Function _GUICtrlRichEdit_SetCharAttributes(Requires: #include <GuiRichEdit.au3>) |Turns an attribute on or off for selected text or, if none selected, for text inserted at the insertion point , $hWnd, $sStatesAndEffects [, $bWord = False])
Function _GUICtrlRichEdit_SetCharBkColor(Requires: #include <GuiRichEdit.au3>) |Sets the background color of selected text or, if none selected, sets the background color of text inserted at the insertion point , $hWnd [, $iBkColor = Default])
Function _GUICtrlRichEdit_SetCharColor(Requires: #include <GuiRichEdit.au3>) |Sets the color of selected text or, if none selected, sets the background color of text inserted at the insertion point , $hWnd [, $iColor = Default])
Function _GUICtrlRichEdit_SetEventMask(Requires: #include <GuiRichEdit.au3>) |Specifies which notification messages are sent to the parent window , $hWnd, $iEventMask)
Function _GUICtrlRichEdit_SetFont(Requires: #include <GuiRichEdit.au3>) |Sets the font attributes of selected text or, if none selected, sets those of text inserted at the insertion point , $hWnd [, $iPoints = Default [, $sName = Default [, $iCharset = Default [, $iLcid = Default]]]])
Function _GUICtrlRichEdit_SetLimitOnText(Requires: #include <GuiRichEdit.au3>) |Change number of characters that can be typed, pasted or streamed in as Rich Text Format , $hWnd, $iNewLimit)
Function _GUICtrlRichEdit_SetModified(Requires: #include <GuiRichEdit.au3>) |Sets or clears the modification flag , $hWnd [, $bState = True])
Function _GUICtrlRichEdit_SetParaAlignment(s) |Sets alignment of paragraph in the current selection or, if no selection, of paragraphs inserted at the insertion point (Requires: #include <GuiRichEdit.au3>), $hWnd, $sAlignment)
Function _GUICtrlRichEdit_SetParaAttributes(s) |Sets attributes of paragraph in the current selection or, if no selection, of paragraphs inserted at the insertion point (Requires: #include <GuiRichEdit.au3>), $hWnd, $sStatesAndAtts)
Function _GUICtrlRichEdit_SetParaBorder(s) |Sets the border of paragraph in the current selection or, if no selection, of paragraphs inserted at the insertion point (Requires: #include <GuiRichEdit.au3>), $hWnd [, $sLocation = Default [, $vLineStyle = Default [, $sColor = Default [, $iSpace = Default]]]])
Function _GUICtrlRichEdit_SetParaIndents(s) |Sets indents of paragraph in the current selection or, if no selection, of paragraphs inserted at the insertion point (Requires: #include <GuiRichEdit.au3>), $hWnd [, $vLeft = Default [, $iRight = Default [, $iFirstLine = Default]]])
Function _GUICtrlRichEdit_SetParaNumbering(s) |Sets numbering of paragraph in the current selection or, if no selection, of paragraph(s) inserted at the insertion point (Requires: #include <GuiRichEdit.au3>), $hWnd, $sStyle [, $iTextToNbrSpace = Default [, $bForceRoman = False]])
Function _GUICtrlRichEdit_SetParaShading(s) |Sets the shading of paragraph in the current selection or, if no selection, of paragraphs inserted at the insertion point (Requires: #include <GuiRichEdit.au3>), $hWnd [, $iWeight = Default [, $sStyle = Default [, $sForeColor = Default [, $sBackColor = Default]]]])
Function _GUICtrlRichEdit_SetParaSpacing(Requires: #include <GuiRichEdit.au3>) |Sets paragraph spacing of paragraphs having selected text or, if none selected, sets it for text inserted at the insertion point , $hWnd [, $vInter = Default [, $iBefore = Default [, $iAfter = Default]]])
Function _GUICtrlRichEdit_SetParaTabStops(Requires: #include <GuiRichEdit.au3>) |Sets tab stops of paragraphs having selected text or, if none selected, sets it for text inserted at the insertion point , $hWnd, $sTabStops)
Function _GUICtrlRichEdit_SetPasswordChar(Requires: #include <GuiRichEdit.au3>) |Sets the characters to be displayed instead of those typed, or causes typed characters to show , $hWnd [, $sDisplayChar = "*"])
Function _GUICtrlRichEdit_SetReadOnly(Requires: #include <GuiRichEdit.au3>) |Sets or removes the read-only state , $hWnd [, $bState = True])
Function _GUICtrlRichEdit_SetRECT(Requires: #include <GuiRichEdit.au3>) |Sets the formatting rectangle of a Rich Edit control , $hWnd [, $iLeft = Default [, $iTop = Default [, $iRight = Default [, $iBottom = Default [, $bRedraw = True]]]]])
Function _GUICtrlRichEdit_SetScrollPos($ix,$iY) |Scrolls the display such that is in the upper left corner of the control (Requires: #include <GuiRichEdit.au3>), $hWnd, $iX, $iY)
Function _GUICtrlRichEdit_SetSel(Requires: #include <GuiRichEdit.au3>) |Sets the low and high character position of a selection , $hWnd, $iAnchor, $iActive [, $bHideSel = False])
Function _GUICtrlRichEdit_SetSpaceUnit(Requires: #include <GuiRichEdit.au3>) |Sets the unit of measure of horizontal and vertical space used in parameters of various _GUICtrlRichEdit functions , $sUnit)
Function _GUICtrlRichEdit_SetTabStops(Requires: #include <GuiRichEdit.au3>) |Sets tab stops for the control , $hWnd, $vTabStops [, $bRedraw = True])
Function _GUICtrlRichEdit_SetText(Requires: #include <GuiRichEdit.au3>) |Sets the text of a control , $hWnd, $sText)
Function _GUICtrlRichEdit_SetUndoLimit(Requires: #include <GuiRichEdit.au3>) |Sets the maximum number of actions that can stored in the undo queue , $hWnd, $iLimit)
Function _GUICtrlRichEdit_SetZoom(Requires: #include <GuiRichEdit.au3>) |Sets zoom level of the control , $hWnd, $iPercent)
Function _GUICtrlRichEdit_StreamFromFile(Requires: #include <GuiRichEdit.au3>) |Sets text in a control from a file , $hWnd, $sFileSpec)
Function _GUICtrlRichEdit_StreamFromVar(Requires: #include <GuiRichEdit.au3>) |Sets text in a control from a variable , $hWnd, $sVar)
Function _GUICtrlRichEdit_StreamToFile(Requires: #include <GuiRichEdit.au3>) |Writes contents of a control to a file , $hWnd, $sFileSpec [, $bIncludeCOM = True [, $iOpts = 0 [, $iCodePage = 0]]])
Function _GUICtrlRichEdit_StreamToVar(Requires: #include <GuiRichEdit.au3>) |Writes contents of a control to a variable , $hWnd [, $bRtf = True [, $bIncludeCOM = True [, $iOpts = 0 [, $iCodePage = 0]]]])
Function _GUICtrlRichEdit_Undo(Requires: #include <GuiRichEdit.au3>) |Undoes the last edit control operation in the control's undo queue , $hWnd)
Function _GUICtrlSlider_ClearSel(Requires: #include <GuiSlider.au3>) |Clears the current selection range , $hWnd)
Function _GUICtrlSlider_ClearTics(Requires: #include <GuiSlider.au3>) |Removes the current tick marks from a slider , $hWnd)
Function _GUICtrlSlider_Create(Requires: #include <GuiSlider.au3>) |Create a Slider control , $hWnd, $iX, $iY [, $iWidth = 100 [, $iHeight = 20 [, $iStyle = $TBS_AUTOTICKS [, $iExStyle = 0x00000000]]]])
Function _GUICtrlSlider_Destroy(Requires: #include <GuiSlider.au3>) |Delete the control , ByRef $hWnd)
Function _GUICtrlSlider_GetBuddy(Requires: #include <GuiSlider.au3>) |Retrieves the handle to a slider control buddy window at a given location , $hWnd, $bLocation)
Function _GUICtrlSlider_GetChannelRect(Requires: #include <GuiSlider.au3>) |Retrieves the size and position of the bounding rectangle for a sliders's channel , $hWnd)
Function _GUICtrlSlider_GetChannelRectEx(Requires: #include <GuiSlider.au3>) |Retrieves the size and position of the bounding rectangle for a sliders's channel , $hWnd)
Function _GUICtrlSlider_GetLineSize(Requires: #include <GuiSlider.au3>) |Retrieves the number of logical positions the slider moves , $hWnd)
Function _GUICtrlSlider_GetLogicalTics(Requires: #include <GuiSlider.au3>) |Retrieves an array that contains the logical positions of the tick marks for a slider , $hWnd)
Function _GUICtrlSlider_GetNumTics(Requires: #include <GuiSlider.au3>) |Retrieves the number of tick marks from a slider , $hWnd)
Function _GUICtrlSlider_GetPageSize(Requires: #include <GuiSlider.au3>) |Retrieves the number of logical positions the slider moves , $hWnd)
Function _GUICtrlSlider_GetPos(Requires: #include <GuiSlider.au3>) |Retrieves the logical position the slider , $hWnd)
Function _GUICtrlSlider_GetRange(Requires: #include <GuiSlider.au3>) |Retrieves the maximum and minimum position for the slider , $hWnd)
Function _GUICtrlSlider_GetRangeMax(Requires: #include <GuiSlider.au3>) |Retrieves the maximum position for the slider , $hWnd)
Function _GUICtrlSlider_GetRangeMin(Requires: #include <GuiSlider.au3>) |Retrieves the minimum position for the slider , $hWnd)
Function _GUICtrlSlider_GetSel(Requires: #include <GuiSlider.au3>) |Retrieves the ending and starting position of the current selection range , $hWnd)
Function _GUICtrlSlider_GetSelEnd(Requires: #include <GuiSlider.au3>) |Retrieves the ending position of the current selection range , $hWnd)
Function _GUICtrlSlider_GetSelStart(Requires: #include <GuiSlider.au3>) |Retrieves the starting position of the current selection range , $hWnd)
Function _GUICtrlSlider_GetThumbLength(Requires: #include <GuiSlider.au3>) |Retrieves the length of the slider , $hWnd)
Function _GUICtrlSlider_GetThumbRect(Requires: #include <GuiSlider.au3>) |Retrieves the size and position of the bounding rectangle for the slider , $hWnd)
Function _GUICtrlSlider_GetThumbRectEx(Requires: #include <GuiSlider.au3>) |Retrieves the size and position of the bounding rectangle for the slider , $hWnd)
Function _GUICtrlSlider_GetTic(Requires: #include <GuiSlider.au3>) |Retrieves the logical position of a tick mark , $hWnd, $iTic)
Function _GUICtrlSlider_GetTicPos(Requires: #include <GuiSlider.au3>) |Retrieves the current physical position of a tick mark , $hWnd, $iTic)
Function _GUICtrlSlider_GetToolTips(Requires: #include <GuiSlider.au3>) |Retrieves the handle to the ToolTip control assigned to the slider, if any , $hWnd)
Function _GUICtrlSlider_GetUnicodeFormat(Requires: #include <GuiSlider.au3>) |Retrieves the Unicode character format flag for the control , $hWnd)
Function _GUICtrlSlider_SetBuddy(Requires: #include <GuiSlider.au3>) |Assigns a window as the buddy window for a slider control , $hWnd, $bLocation, $hBuddy)
Function _GUICtrlSlider_SetLineSize(Requires: #include <GuiSlider.au3>) |Sets the number of logical positions the slider moves , $hWnd, $iLineSize)
Function _GUICtrlSlider_SetPageSize(Requires: #include <GuiSlider.au3>) |Sets the number of logical positions the slider moves , $hWnd, $iPageSize)
Function _GUICtrlSlider_SetPos(Requires: #include <GuiSlider.au3>) |Sets the current logical position of the slider , $hWnd, $iPosition)
Function _GUICtrlSlider_SetRange(Requires: #include <GuiSlider.au3>) |Sets the range of minimum and maximum logical positions for the slider , $hWnd, $iMinimum, $iMaximum)
Function _GUICtrlSlider_SetRangeMax(Requires: #include <GuiSlider.au3>) |Sets the maximum logical position for the slider , $hWnd, $iMaximum)
Function _GUICtrlSlider_SetRangeMin(Requires: #include <GuiSlider.au3>) |Sets the minimum logical position for the slider , $hWnd, $iMinimum)
Function _GUICtrlSlider_SetSel(Requires: #include <GuiSlider.au3>) |Sets the starting and ending positions for the available selection range , $hWnd, $iMinimum, $iMaximum)
Function _GUICtrlSlider_SetSelEnd(Requires: #include <GuiSlider.au3>) |Sets the ending logical position of the current selection range , $hWnd, $iMaximum)
Function _GUICtrlSlider_SetSelStart(Requires: #include <GuiSlider.au3>) |Sets the starting logical position of the current selection range , $hWnd, $iMinimum)
Function _GUICtrlSlider_SetThumbLength(Requires: #include <GuiSlider.au3>) |Sets the length of the slider , $hWnd, $iLength)
Function _GUICtrlSlider_SetTic(Requires: #include <GuiSlider.au3>) |Sets a tick mark in a slider at the specified logical position , $hWnd, $iPosition)
Function _GUICtrlSlider_SetTicFreq(Requires: #include <GuiSlider.au3>) |Sets the interval frequency for tick marks in a slider , $hWnd, $iFreg)
Function _GUICtrlSlider_SetTipSide(Requires: #include <GuiSlider.au3>) |Positions a ToolTip control , $hWnd, $iLocation)
Function _GUICtrlSlider_SetToolTips(Requires: #include <GuiSlider.au3>) |Assigns a ToolTip control to a slider control , $hWnd, $hWndTT)
Function _GUICtrlSlider_SetUnicodeFormat(Requires: #include <GuiSlider.au3>) |Sets the Unicode character format flag for the control , $hWnd, $bUnicode)
Function _GUICtrlStatusBar_Create(Requires: #include <GuiStatusBar.au3>) |Create a statusbar , $hWnd [, $vPartEdge = -1 [, $vPartText = "" [, $iStyles = -1 [, $iExStyles = 0x00000000]]]])
Function _GUICtrlStatusBar_Destroy(Requires: #include <GuiStatusBar.au3>) |Delete the control , ByRef $hWnd)
Function _GUICtrlStatusBar_EmbedControl(Requires: #include <GuiStatusBar.au3>) |Embeds a child control in the control , $hWnd, $iPart, $hControl [, $iFit = 4])
Function _GUICtrlStatusBar_GetBorders(Requires: #include <GuiStatusBar.au3>) |Retrieves the current widths of the horizontal and vertical borders , $hWnd)
Function _GUICtrlStatusBar_GetBordersHorz(Requires: #include <GuiStatusBar.au3>) |Retrieves the current width of the horizontal border , $hWnd)
Function _GUICtrlStatusBar_GetBordersRect(Requires: #include <GuiStatusBar.au3>) |Retrieves the current width of the rectangle border , $hWnd)
Function _GUICtrlStatusBar_GetBordersVert(Requires: #include <GuiStatusBar.au3>) |Retrieves the current width of the vertical border , $hWnd)
Function _GUICtrlStatusBar_GetCount(Requires: #include <GuiStatusBar.au3>) |Retrieves the number of parts , $hWnd)
Function _GUICtrlStatusBar_GetHeight(Requires: #include <GuiStatusBar.au3>) |Retrieves the height of the statusbar , $hWnd)
Function _GUICtrlStatusBar_GetIcon(Requires: #include <GuiStatusBar.au3>) |Retrieves the icon for a part , $hWnd [, $iIndex = 0])
Function _GUICtrlStatusBar_GetParts(Requires: #include <GuiStatusBar.au3>) |Retrieves the number of parts and the part edges , $hWnd)
Function _GUICtrlStatusBar_GetRect(Requires: #include <GuiStatusBar.au3>) |Retrieves the bounding rectangle of a part , $hWnd, $iPart)
Function _GUICtrlStatusBar_GetRectEx(Requires: #include <GuiStatusBar.au3>) |Retrieves the bounding rectangle of a part , $hWnd, $iPart)
Function _GUICtrlStatusBar_GetText(Requires: #include <GuiStatusBar.au3>) |Retrieves the text from the specified part , $hWnd, $iPart)
Function _GUICtrlStatusBar_GetTextFlags(Requires: #include <GuiStatusBar.au3>) |Retrieves the text length flags for a part , $hWnd, $iPart)
Function _GUICtrlStatusBar_GetTextLength(Requires: #include <GuiStatusBar.au3>) |Retrieves the length of a part text , $hWnd, $iPart)
Function _GUICtrlStatusBar_GetTextLengthEx(Requires: #include <GuiStatusBar.au3>) |Retrieves the uFlag of a part , $hWnd, $iPart)
Function _GUICtrlStatusBar_GetTipText(Requires: #include <GuiStatusBar.au3>) |Retrieves the ToolTip text for a part , $hWnd, $iPart)
Function _GUICtrlStatusBar_GetUnicodeFormat(Requires: #include <GuiStatusBar.au3>) |Retrieves the Unicode character format flag , $hWnd)
Function _GUICtrlStatusBar_GetWidth(Requires: #include <GuiStatusBar.au3>) |Retrieves the width of a part , $hWnd, $iPart)
Function _GUICtrlStatusBar_IsSimple(Requires: #include <GuiStatusBar.au3>) |Checks a status bar control to determine if it is in simple mode , $hWnd)
Function _GUICtrlStatusBar_Resize(Requires: #include <GuiStatusBar.au3>) |Causes the status bar to resize itself , $hWnd)
Function _GUICtrlStatusBar_SetBkColor(Requires: #include <GuiStatusBar.au3>) |Sets the background color , $hWnd, $iColor)
Function _GUICtrlStatusBar_SetIcon(Requires: #include <GuiStatusBar.au3>) |Sets the icon for a part , $hWnd, $iPart [, $hIcon = -1 [, $sIconFile = ""]])
Function _GUICtrlStatusBar_SetMinHeight(Requires: #include <GuiStatusBar.au3>) |Sets the minimum height of a status window's drawing area , $hWnd, $iMinHeight)
Function _GUICtrlStatusBar_SetParts(Requires: #include <GuiStatusBar.au3>) |Sets the number of parts and the part edges , $hWnd [, $aParts = -1 [, $aPartWidth = 25]])
Function _GUICtrlStatusBar_SetSimple(Requires: #include <GuiStatusBar.au3>) |Specifies whether a status window displays simple text or displays all window parts , $hWnd [, $bSimple = True])
Function _GUICtrlStatusBar_SetText(Requires: #include <GuiStatusBar.au3>) |Sets the text in the specified part of a status window , $hWnd [, $sText = "" [, $iPart = 0 [, $iUFlag = 0]]])
Function _GUICtrlStatusBar_SetTipText(Requires: #include <GuiStatusBar.au3>) |Sets the ToolTip text for a part , $hWnd, $iPart, $sText)
Function _GUICtrlStatusBar_SetUnicodeFormat(Requires: #include <GuiStatusBar.au3>) |Sets the Unicode character format flag , $hWnd [, $bUnicode = True])
Function _GUICtrlStatusBar_ShowHide(Requires: #include <GuiStatusBar.au3>) |Show/Hide the StatusBar control , $hWnd, $iState)
Function _GUICtrlTab_ActivateTab(Requires: #include <GuiTab.au3>) |Activates a tab by its index , $hWnd, $iIndex)
Function _GUICtrlTab_ClickTab(Requires: #include <GuiTab.au3>) |Clicks a tab , $hWnd, $iIndex [, $sButton = "left" [, $bMove = False [, $iClicks = 1 [, $iSpeed = 1]]]])
Function _GUICtrlTab_Create(Requires: #include <GuiTab.au3>) |Create a TabControl control , $hWnd, $iX, $iY [, $iWidth = 150 [, $iHeight = 150 [, $iStyle = 0x00000040 [, $iExStyle = 0x00000000]]]])
Function _GUICtrlTab_DeleteAllItems(Requires: #include <GuiTab.au3>) |Deletes all tabs , $hWnd)
Function _GUICtrlTab_DeleteItem(Requires: #include <GuiTab.au3>) |Deletes a tab , $hWnd, $iIndex)
Function _GUICtrlTab_DeselectAll(Requires: #include <GuiTab.au3>) |Resets tabs, clearing any that were set to the pressed state , $hWnd [, $bExclude = True])
Function _GUICtrlTab_Destroy(Requires: #include <GuiTab.au3>) |Delete the control , ByRef $hWnd)
Function _GUICtrlTab_FindTab(Requires: #include <GuiTab.au3>) |Searches for a tab with the specific text , $hWnd, $sText [, $bInStr = False [, $iStart = 0]])
Function _GUICtrlTab_GetCurFocus(Requires: #include <GuiTab.au3>) |Returns the index of the item that has the focus in a tab control , $hWnd)
Function _GUICtrlTab_GetCurSel(Requires: #include <GuiTab.au3>) |Determines the currently selected tab , $hWnd)
Function _GUICtrlTab_GetDisplayRect(Requires: #include <GuiTab.au3>) |Retrieves the display rectangle of the client area , $hWnd)
Function _GUICtrlTab_GetDisplayRectEx(Requires: #include <GuiTab.au3>) |Retrieves the display rectangle of the client area , $hWnd)
Function _GUICtrlTab_GetExtendedStyle(Requires: #include <GuiTab.au3>) |Retrieves the extended styles that are currently in use , $hWnd)
Function _GUICtrlTab_GetImageList(Requires: #include <GuiTab.au3>) |Retrieves the tab control image list , $hWnd)
Function _GUICtrlTab_GetItem(Requires: #include <GuiTab.au3>) |Retrieves information about a tab , $hWnd, $iIndex)
Function _GUICtrlTab_GetItemCount(Requires: #include <GuiTab.au3>) |Retrieves the number of tabs , $hWnd)
Function _GUICtrlTab_GetItemImage(Requires: #include <GuiTab.au3>) |Retrieves the image index for a tab , $hWnd, $iIndex)
Function _GUICtrlTab_GetItemParam(Requires: #include <GuiTab.au3>) |Retrieves the param data for a tab , $hWnd, $iIndex)
Function _GUICtrlTab_GetItemRect(Requires: #include <GuiTab.au3>) |Retrieves the bounding rectangle for a tab , $hWnd, $iIndex)
Function _GUICtrlTab_GetItemRectEx(Requires: #include <GuiTab.au3>) |Retrieves the bounding rectangle for a tab , $hWnd, $iIndex)
Function _GUICtrlTab_GetItemState(Requires: #include <GuiTab.au3>) |Retrieves the state of a tab , $hWnd, $iIndex)
Function _GUICtrlTab_GetItemText(Requires: #include <GuiTab.au3>) |Retrieves the text of a tab , $hWnd, $iIndex)
Function _GUICtrlTab_GetRowCount(Requires: #include <GuiTab.au3>) |Retrieves the current number of rows of tabs , $hWnd)
Function _GUICtrlTab_GetToolTips(Requires: #include <GuiTab.au3>) |Retrieves the handle to the ToolTip control associated with the control , $hWnd)
Function _GUICtrlTab_GetUnicodeFormat(Requires: #include <GuiTab.au3>) |Retrieves the Unicode character format flag for the control , $hWnd)
Function _GUICtrlTab_HighlightItem(Requires: #include <GuiTab.au3>) |Sets the highlight state of a tab item , $hWnd, $iIndex [, $bHighlight = True])
Function _GUICtrlTab_HitTest(Requires: #include <GuiTab.au3>) |Determines where a point lies control , $hWnd, $iX, $iY)
Function _GUICtrlTab_InsertItem(Requires: #include <GuiTab.au3>) |Inserts a new tab , $hWnd, $iIndex, $sText [, $iImage = -1 [, $iParam = 0]])
Function _GUICtrlTab_RemoveImage(Requires: #include <GuiTab.au3>) |Removes an image from the control's image list , $hWnd, $iIndex)
Function _GUICtrlTab_SetCurFocus(Requires: #include <GuiTab.au3>) |Sets the focus to a specified tab , $hWnd, $iIndex)
Function _GUICtrlTab_SetCurSel(Requires: #include <GuiTab.au3>) |Selects a tab , $hWnd, $iIndex)
Function _GUICtrlTab_SetExtendedStyle(Requires: #include <GuiTab.au3>) |Sets the extended styles that are currently in use , $hWnd, $iStyle)
Function _GUICtrlTab_SetImageList(Requires: #include <GuiTab.au3>) |Sets the image list associated with a tab control , $hWnd, $hImage)
Function _GUICtrlTab_SetItem(Requires: #include <GuiTab.au3>) |Sets information about a tab , $hWnd, $iIndex [, $sText = -1 [, $iState = -1 [, $iImage = -1 [, $iParam = -1]]]])
Function _GUICtrlTab_SetItemImage(Requires: #include <GuiTab.au3>) |Sets the image of a tab , $hWnd, $iIndex, $iImage)
Function _GUICtrlTab_SetItemParam(Requires: #include <GuiTab.au3>) |Sets the param data of a tab , $hWnd, $iIndex, $iParam)
Function _GUICtrlTab_SetItemSize(Requires: #include <GuiTab.au3>) |Sets the width and height of tabs in a fixed width or owner drawn control , $hWnd, $iWidth, $iHeight)
Function _GUICtrlTab_SetItemState(Requires: #include <GuiTab.au3>) |Sets the state of a tab , $hWnd, $iIndex, $iState)
Function _GUICtrlTab_SetItemText(Requires: #include <GuiTab.au3>) |Sets the text of a tab , $hWnd, $iIndex, $sText)
Function _GUICtrlTab_SetMinTabWidth(Requires: #include <GuiTab.au3>) |Sets the minimum width of items in a tab control , $hWnd, $iMinWidth)
Function _GUICtrlTab_SetPadding(Requires: #include <GuiTab.au3>) |Sets the amount of space around each tab's icon and label , $hWnd, $iHorz, $iVert)
Function _GUICtrlTab_SetToolTips(Requires: #include <GuiTab.au3>) |Sets the handle to the ToolTip control associated with the control , $hWnd, $hToolTip)
Function _GUICtrlTab_SetUnicodeFormat(Requires: #include <GuiTab.au3>) |Sets the Unicode character format flag for the control , $hWnd, $bUnicode)
Function _GUICtrlToolbar_AddBitmap(Requires: #include <GuiToolbar.au3>) |Adds images to the image list , $hWnd, $iButtons, $hInst, $iID)
Function _GUICtrlToolbar_AddButton(Requires: #include <GuiToolbar.au3>) |Adds a button , $hWnd, $iID, $iImage [, $iString = 0 [, $iStyle = 0 [, $iState = 4 [, $iParam = 0]]]])
Function _GUICtrlToolbar_AddButtonSep(Requires: #include <GuiToolbar.au3>) |Adds a separator , $hWnd [, $iWidth = 6])
Function _GUICtrlToolbar_AddString(Requires: #include <GuiToolbar.au3>) |Adds a new string to the toolbar's string pool , $hWnd, $sString)
Function _GUICtrlToolbar_ButtonCount(Requires: #include <GuiToolbar.au3>) |Retrieves a count of the buttons , $hWnd)
Function _GUICtrlToolbar_CheckButton(Requires: #include <GuiToolbar.au3>) |Checks or unchecks a given button , $hWnd, $iCommandID [, $bCheck = True])
Function _GUICtrlToolbar_ClickAccel(Requires: #include <GuiToolbar.au3>) |Clicks a specific button using it's accelerator , $hWnd, $sAccelKey [, $sButton = "left" [, $bMove = False [, $iClicks = 1 [, $iSpeed = 1]]]])
Function _GUICtrlToolbar_ClickButton(Requires: #include <GuiToolbar.au3>) |Clicks a specific button , $hWnd, $iCommandID [, $sButton = "left" [, $bMove = False [, $iClicks = 1 [, $iSpeed = 1]]]])
Function _GUICtrlToolbar_ClickIndex(Requires: #include <GuiToolbar.au3>) |Clicks a specific button using it's index , $hWnd, $iIndex [, $sButton = "left" [, $bMove = False [, $iClicks = 1 [, $iSpeed = 1]]]])
Function _GUICtrlToolbar_CommandToIndex(Requires: #include <GuiToolbar.au3>) |Retrieves the index for the button associated with the specified command identifier , $hWnd, $iCommandID)
Function _GUICtrlToolbar_Create(Requires: #include <GuiToolbar.au3>) |Create a Toolbar control , $hWnd [, $iStyle = 0x00000800 [, $iExStyle = 0x00000000]])
Function _GUICtrlToolbar_Customize(Requires: #include <GuiToolbar.au3>) |Displays the Customize Toolbar dialog box , $hWnd)
Function _GUICtrlToolbar_DeleteButton(Requires: #include <GuiToolbar.au3>) |Deletes a button from the toolbar , $hWnd, $iCommandID)
Function _GUICtrlToolbar_Destroy(Requires: #include <GuiToolbar.au3>) |Delete the control , ByRef $hWnd)
Function _GUICtrlToolbar_EnableButton(Requires: #include <GuiToolbar.au3>) |Enables or disables the specified button , $hWnd, $iCommandID [, $bEnable = True])
Function _GUICtrlToolbar_FindToolbar(Requires: #include <GuiToolbar.au3>) |Finds a specific toolbar , $hWnd, $sText)
Function _GUICtrlToolbar_GetAnchorHighlight(Requires: #include <GuiToolbar.au3>) |Retrieves the anchor highlight setting , $hWnd)
Function _GUICtrlToolbar_GetBitmapFlags(Requires: #include <GuiToolbar.au3>) |Retrieves the flags that describe the type of bitmap to be used , $hWnd)
Function _GUICtrlToolbar_GetButtonBitmap(Requires: #include <GuiToolbar.au3>) |Retrieves the index of the bitmap associated with a button , $hWnd, $iCommandID)
Function _GUICtrlToolbar_GetButtonInfo(Requires: #include <GuiToolbar.au3>) |Retrieves information for a button , $hWnd, $iCommandID)
Function _GUICtrlToolbar_GetButtonInfoEx(Requires: #include <GuiToolbar.au3>) |Retrieves extended information for a button , $hWnd, $iCommandID)
Function _GUICtrlToolbar_GetButtonParam(Requires: #include <GuiToolbar.au3>) |Retrieves the button param value , $hWnd, $iCommandID)
Function _GUICtrlToolbar_GetButtonRect(Requires: #include <GuiToolbar.au3>) |Retrieves the bounding rectangle for a button , $hWnd, $iCommandID)
Function _GUICtrlToolbar_GetButtonRectEx(Requires: #include <GuiToolbar.au3>) |Retrieves the bounding rectangle for a specified toolbar button , $hWnd, $iCommandID)
Function _GUICtrlToolbar_GetButtonSize(Requires: #include <GuiToolbar.au3>) |Retrieves the current button width and height, in pixels , $hWnd)
Function _GUICtrlToolbar_GetButtonState(Requires: #include <GuiToolbar.au3>) |Retrieves information about the state of the specified button , $hWnd, $iCommandID)
Function _GUICtrlToolbar_GetButtonStyle(Requires: #include <GuiToolbar.au3>) |Retrieves the style flags of a button , $hWnd, $iCommandID)
Function _GUICtrlToolbar_GetButtonText(Requires: #include <GuiToolbar.au3>) |Retrieves the display text of a button , $hWnd, $iCommandID)
Function _GUICtrlToolbar_GetColorScheme(Requires: #include <GuiToolbar.au3>) |Retrieves the color scheme information , $hWnd)
Function _GUICtrlToolbar_GetDisabledImageList(Requires: #include <GuiToolbar.au3>) |Retrieves the disabled button image list , $hWnd)
Function _GUICtrlToolbar_GetExtendedStyle(Requires: #include <GuiToolbar.au3>) |Retrieves the extended styles , $hWnd)
Function _GUICtrlToolbar_GetHotImageList(Requires: #include <GuiToolbar.au3>) |Retrieves the hot button image list , $hWnd)
Function _GUICtrlToolbar_GetHotItem(Requires: #include <GuiToolbar.au3>) |Retrieves the index of the hot item , $hWnd)
Function _GUICtrlToolbar_GetImageList(Requires: #include <GuiToolbar.au3>) |Retrieves the default state image list , $hWnd)
Function _GUICtrlToolbar_GetInsertMark(Requires: #include <GuiToolbar.au3>) |Retrieves the current insertion mark , $hWnd)
Function _GUICtrlToolbar_GetInsertMarkColor(Requires: #include <GuiToolbar.au3>) |Retrieves the color used to draw the insertion mark , $hWnd)
Function _GUICtrlToolbar_GetMaxSize(Requires: #include <GuiToolbar.au3>) |Retrieves the total size of all of the visible buttons and separators , $hWnd)
Function _GUICtrlToolbar_GetMetrics(Requires: #include <GuiToolbar.au3>) |Retrieves the metrics of a toolbar control , $hWnd)
Function _GUICtrlToolbar_GetPadding(Requires: #include <GuiToolbar.au3>) |Retrieves the horizontal and vertical padding , $hWnd)
Function _GUICtrlToolbar_GetRows(Requires: #include <GuiToolbar.au3>) |Retrieves the number of rows of buttons , $hWnd)
Function _GUICtrlToolbar_GetString(Requires: #include <GuiToolbar.au3>) |Retrieves a string from the string pool , $hWnd, $iIndex)
Function _GUICtrlToolbar_GetStyle(Requires: #include <GuiToolbar.au3>) |Retrieves the styles currently in use for a toolbar control , $hWnd)
Function _GUICtrlToolbar_GetStyleAltDrag(Requires: #include <GuiToolbar.au3>) |Indicates that the control allows buttons to be dragged , $hWnd)
Function _GUICtrlToolbar_GetStyleCustomErase(Requires: #include <GuiToolbar.au3>) |Indicates that the control generates NM_CUSTOMDRAW notification messages , $hWnd)
Function _GUICtrlToolbar_GetStyleFlat(Requires: #include <GuiToolbar.au3>) |Indicates that the control is flat , $hWnd)
Function _GUICtrlToolbar_GetStyleList(Requires: #include <GuiToolbar.au3>) |Indicates that the control has button text to the right of the bitmap , $hWnd)
Function _GUICtrlToolbar_GetStyleRegisterDrop(Requires: #include <GuiToolbar.au3>) |Indicates that the control generates TBN_GETOBJECT notification messages , $hWnd)
Function _GUICtrlToolbar_GetStyleToolTips(Requires: #include <GuiToolbar.au3>) |Indicates that the control has tooltips , $hWnd)
Function _GUICtrlToolbar_GetStyleTransparent(Requires: #include <GuiToolbar.au3>) |Indicates that the control is transparent , $hWnd)
Function _GUICtrlToolbar_GetStyleWrapable(Requires: #include <GuiToolbar.au3>) |Indicates that the control is wrapable , $hWnd)
Function _GUICtrlToolbar_GetTextRows(Requires: #include <GuiToolbar.au3>) |Retrieves the maximum number of text rows that can be displayed on a button , $hWnd)
Function _GUICtrlToolbar_GetToolTips(Requires: #include <GuiToolbar.au3>) |Retrieves the handle to the ToolTip control , $hWnd)
Function _GUICtrlToolbar_GetUnicodeFormat(Requires: #include <GuiToolbar.au3>) |Retrieves the Unicode character format flag , $hWnd)
Function _GUICtrlToolbar_HideButton(Requires: #include <GuiToolbar.au3>) |Hides or shows the specified button , $hWnd, $iCommandID [, $bHide = True])
Function _GUICtrlToolbar_HighlightButton(Requires: #include <GuiToolbar.au3>) |Sets the highlight state of a given button control , $hWnd, $iCommandID [, $bHighlight = True])
Function _GUICtrlToolbar_HitTest(Requires: #include <GuiToolbar.au3>) |Determines where a point lies within the control , $hWnd, $iX, $iY)
Function _GUICtrlToolbar_IndexToCommand(Requires: #include <GuiToolbar.au3>) |Retrieves the command identifier associated with the button , $hWnd, $iIndex)
Function _GUICtrlToolbar_InsertButton(Requires: #include <GuiToolbar.au3>) |Inserts a button , $hWnd, $iIndex, $iID, $iImage [, $sText = "" [, $iStyle = 0 [, $iState = 4 [, $iParam = 0]]]])
Function _GUICtrlToolbar_InsertMarkHitTest(Requires: #include <GuiToolbar.au3>) |Retrieves the insertion mark information for a point , $hWnd, $iX, $iY)
Function _GUICtrlToolbar_IsButtonChecked(Requires: #include <GuiToolbar.au3>) |Indicates whether the specified button is checked , $hWnd, $iCommandID)
Function _GUICtrlToolbar_IsButtonEnabled(Requires: #include <GuiToolbar.au3>) |Indicates whether the specified button is enabled , $hWnd, $iCommandID)
Function _GUICtrlToolbar_IsButtonHidden(Requires: #include <GuiToolbar.au3>) |Indicates whether the specified button is hidden , $hWnd, $iCommandID)
Function _GUICtrlToolbar_IsButtonHighlighted(Requires: #include <GuiToolbar.au3>) |Indicates whether the specified button is hilighted , $hWnd, $iCommandID)
Function _GUICtrlToolbar_IsButtonIndeterminate(Requires: #include <GuiToolbar.au3>) |Indicates whether the specified button is indeterminate , $hWnd, $iCommandID)
Function _GUICtrlToolbar_IsButtonPressed(Requires: #include <GuiToolbar.au3>) |Indicates that the button is being clicked , $hWnd, $iCommandID)
Function _GUICtrlToolbar_LoadBitmap(Requires: #include <GuiToolbar.au3>) |Adds a bitmap to the image list from a file , $hWnd, $sFileName)
Function _GUICtrlToolbar_LoadImages(Requires: #include <GuiToolbar.au3>) |Loads system defined button images into a toolbar control's image list , $hWnd, $iBitMapID)
Function _GUICtrlToolbar_MapAccelerator(Requires: #include <GuiToolbar.au3>) |Determines the ID of the button that corresponds to the specified accelerator , $hWnd, $sAccelKey)
Function _GUICtrlToolbar_MoveButton(Requires: #include <GuiToolbar.au3>) |Moves a button from one index to another , $hWnd, $iOldPos, $iNewPos)
Function _GUICtrlToolbar_PressButton(Requires: #include <GuiToolbar.au3>) |Presses or releases the specified button , $hWnd, $iCommandID [, $bPress = True])
Function _GUICtrlToolbar_SetAnchorHighlight(Requires: #include <GuiToolbar.au3>) |Sets the anchor highlight setting , $hWnd, $bAnchor)
Function _GUICtrlToolbar_SetBitmapSize(Requires: #include <GuiToolbar.au3>) |Sets the size of the bitmapped images to be added to a toolbar , $hWnd, $iWidth, $iHeight)
Function _GUICtrlToolbar_SetButtonBitMap(Requires: #include <GuiToolbar.au3>) |Sets the index of the bitmap associated with a button , $hWnd, $iCommandID, $iIndex)
Function _GUICtrlToolbar_SetButtonInfo(Requires: #include <GuiToolbar.au3>) |Sets information for a button , $hWnd, $iCommandID [, $iImage = -3 [, $iState = -1 [, $iStyle = -1 [, $iWidth = -1 [, $iParam = -1]]]]])
Function _GUICtrlToolbar_SetButtonInfoEx(Requires: #include <GuiToolbar.au3>) |Sets extended information for a button , $hWnd, $iCommandID, $tButton)
Function _GUICtrlToolbar_SetButtonParam(Requires: #include <GuiToolbar.au3>) |Sets the button param value , $hWnd, $iCommandID, $iParam)
Function _GUICtrlToolbar_SetButtonSize(Requires: #include <GuiToolbar.au3>) |Sets the size of the buttons to be added to a toolbar , $hWnd, $iHeight, $iWidth)
Function _GUICtrlToolbar_SetButtonState(Requires: #include <GuiToolbar.au3>) |Sets information about the state of the specified button , $hWnd, $iCommandID, $iState)
Function _GUICtrlToolbar_SetButtonStyle(Requires: #include <GuiToolbar.au3>) |Sets the style flags of a button , $hWnd, $iCommandID, $iStyle)
Function _GUICtrlToolbar_SetButtonText(Requires: #include <GuiToolbar.au3>) |Sets the display text of a button , $hWnd, $iCommandID, $sText)
Function _GUICtrlToolbar_SetButtonWidth(Requires: #include <GuiToolbar.au3>) |Sets the minimum and maximum button widths in the toolbar control , $hWnd, $iMin, $iMax)
Function _GUICtrlToolbar_SetCmdID(Requires: #include <GuiToolbar.au3>) |Sets the command identifier of a toolbar button , $hWnd, $iIndex, $iCommandID)
Function _GUICtrlToolbar_SetColorScheme(Requires: #include <GuiToolbar.au3>) |Sets the color scheme information , $hWnd, $iHighlight, $iShadow)
Function _GUICtrlToolbar_SetDisabledImageList(Requires: #include <GuiToolbar.au3>) |Sets the disabled image list , $hWnd, $hImageList)
Function _GUICtrlToolbar_SetDrawTextFlags(Requires: #include <GuiToolbar.au3>) |Sets the text drawing flags for the toolbar , $hWnd, $iMask, $iDTFlags)
Function _GUICtrlToolbar_SetExtendedStyle(Requires: #include <GuiToolbar.au3>) |Sets the extended styles control , $hWnd, $iStyle)
Function _GUICtrlToolbar_SetHotImageList(Requires: #include <GuiToolbar.au3>) |Sets the hot button image list , $hWnd, $hImageList)
Function _GUICtrlToolbar_SetHotItem(Requires: #include <GuiToolbar.au3>) |Sets the hot item , $hWnd, $iIndex)
Function _GUICtrlToolbar_SetImageList(Requires: #include <GuiToolbar.au3>) |Sets the default button image list , $hWnd, $hImageList)
Function _GUICtrlToolbar_SetIndent(Requires: #include <GuiToolbar.au3>) |Sets the indentation for the first button control , $hWnd, $iIndent)
Function _GUICtrlToolbar_SetIndeterminate(Requires: #include <GuiToolbar.au3>) |Sets or clears the indeterminate state of the specified button , $hWnd, $iCommandID [, $bState = True])
Function _GUICtrlToolbar_SetInsertMark(Requires: #include <GuiToolbar.au3>) |Sets the current insertion mark for the toolbar , $hWnd, $iButton [, $iFlags = 0])
Function _GUICtrlToolbar_SetInsertMarkColor(Requires: #include <GuiToolbar.au3>) |Sets the color used to draw the insertion mark , $hWnd, $iColor)
Function _GUICtrlToolbar_SetMaxTextRows(Requires: #include <GuiToolbar.au3>) |Sets the maximum number of text rows displayed button , $hWnd, $iMaxRows)
Function _GUICtrlToolbar_SetMetrics(Requires: #include <GuiToolbar.au3>) |Sets the metrics of a toolbar control , $hWnd, $iXPad, $iYPad, $iXSpacing, $iYSpacing)
Function _GUICtrlToolbar_SetPadding(Requires: #include <GuiToolbar.au3>) |Sets the padding control , $hWnd, $iCX, $iCY)
Function _GUICtrlToolbar_SetParent(Requires: #include <GuiToolbar.au3>) |Sets the window to which the control sends notification messages , $hWnd, $hParent)
Function _GUICtrlToolbar_SetRows(Requires: #include <GuiToolbar.au3>) |Sets the number of rows of buttons , $hWnd, $iRows [, $bLarger = True])
Function _GUICtrlToolbar_SetStyle(Requires: #include <GuiToolbar.au3>) |Sets the style control , $hWnd, $iStyle)
Function _GUICtrlToolbar_SetStyleAltDrag(Requires: #include <GuiToolbar.au3>) |Sets whether that the control allows buttons to be dragged , $hWnd [, $bState = True])
Function _GUICtrlToolbar_SetStyleCustomErase(Requires: #include <GuiToolbar.au3>) |Sets whether the control generates NM_CUSTOMDRAW notification messages , $hWnd [, $bState = True])
Function _GUICtrlToolbar_SetStyleFlat(Requires: #include <GuiToolbar.au3>) |Sets whether the control is flat , $hWnd, $bState)
Function _GUICtrlToolbar_SetStyleList(Requires: #include <GuiToolbar.au3>) |Sets whether the control has button text to the right of the bitmap , $hWnd, $bState)
Function _GUICtrlToolbar_SetStyleRegisterDrop(Requires: #include <GuiToolbar.au3>) |Sets whether the control generates TBN_GETOBJECT notification messages , $hWnd, $bState)
Function _GUICtrlToolbar_SetStyleToolTips(Requires: #include <GuiToolbar.au3>) |Sets whether the control has tooltips , $hWnd, $bState)
Function _GUICtrlToolbar_SetStyleTransparent(Requires: #include <GuiToolbar.au3>) |Sets whether the control is transparent , $hWnd, $bState)
Function _GUICtrlToolbar_SetStyleWrapable(Requires: #include <GuiToolbar.au3>) |Sets whether the control is wrapable , $hWnd, $bState)
Function _GUICtrlToolbar_SetToolTips(Requires: #include <GuiToolbar.au3>) |Associates a ToolTip control with a toolbar , $hWnd, $hToolTip)
Function _GUICtrlToolbar_SetUnicodeFormat(Requires: #include <GuiToolbar.au3>) |Sets the Unicode character format flag , $hWnd [, $bUnicode = False])
Function _GUICtrlToolbar_SetWindowTheme(Requires: #include <GuiToolbar.au3>) |Sets the visual style , $hWnd, $sTheme)
Function _GUICtrlTreeView_Add(Requires: #include <GuiTreeView.au3>) |Adds a new item , $hWnd, $hSibling, $sText [, $iImage = -1 [, $iSelImage = -1]])
Function _GUICtrlTreeView_AddChild(Requires: #include <GuiTreeView.au3>) |Adds a new item , $hWnd, $hParent, $sText [, $iImage = -1 [, $iSelImage = -1]])
Function _GUICtrlTreeView_AddChildFirst(Requires: #include <GuiTreeView.au3>) |Adds a new item , $hWnd, $hParent, $sText [, $iImage = -1 [, $iSelImage = -1]])
Function _GUICtrlTreeView_AddFirst(Requires: #include <GuiTreeView.au3>) |Adds a new item , $hWnd, $hSibling, $sText [, $iImage = -1 [, $iSelImage = -1]])
Function _GUICtrlTreeView_BeginUpdate(Requires: #include <GuiTreeView.au3>) |Prevents updating of the control until the EndUpdate function is called , $hWnd)
Function _GUICtrlTreeView_ClickItem(Requires: #include <GuiTreeView.au3>) |Click on a item , $hWnd, $hItem [, $sButton = "left" [, $bMove = False [, $iClicks = 1 [, $iSpeed = 0]]]])
Function _GUICtrlTreeView_Create(Requires: #include <GuiTreeView.au3>) |Create a TreeView control , $hWnd, $iX, $iY [, $iWidth = 150 [, $iHeight = 150 [, $iStyle = 0x00000037 [, $iExStyle = 0x00000000]]]])
Function _GUICtrlTreeView_CreateDragImage(Requires: #include <GuiTreeView.au3>) |Creates a dragging bitmap for the specified item , $hWnd, $hItem)
Function _GUICtrlTreeView_CreateSolidBitMap(Requires: #include <GuiTreeView.au3>) |Creates a solid color bitmap , $hWnd, $iColor, $iWidth, $iHeight)
Function _GUICtrlTreeView_Delete(Requires: #include <GuiTreeView.au3>) |Removes an item and all its children , $hWnd [, $hItem = 0])
Function _GUICtrlTreeView_DeleteAll(Requires: #include <GuiTreeView.au3>) |Removes all items from a tree-view control , $hWnd)
Function _GUICtrlTreeView_DeleteChildren(Requires: #include <GuiTreeView.au3>) |Deletes all children of a item , $hWnd, $hItem)
Function _GUICtrlTreeView_Destroy(Requires: #include <GuiTreeView.au3>) |Delete the control , ByRef $hWnd)
Function _GUICtrlTreeView_DisplayRect(Requires: #include <GuiTreeView.au3>) |Returns the bounding rectangle for a tree item , $hWnd, $hItem [, $bTextOnly = False])
Function _GUICtrlTreeView_DisplayRectEx(Requires: #include <GuiTreeView.au3>) |Returns the bounding rectangle for a tree item , $hWnd, $hItem [, $bTextOnly = False])
Function _GUICtrlTreeView_EditText(Requires: #include <GuiTreeView.au3>) |Begins in-place editing of the specified item's text , $hWnd, $hItem)
Function _GUICtrlTreeView_EndEdit(Requires: #include <GuiTreeView.au3>) |Ends the editing of the item's text , $hWnd [, $bCancel = False])
Function _GUICtrlTreeView_EndUpdate(Requires: #include <GuiTreeView.au3>) |Enables screen repainting that was turned off with the BeginUpdate function , $hWnd)
Function _GUICtrlTreeView_EnsureVisible(Requires: #include <GuiTreeView.au3>) |Ensures that a item is visible, expanding the parent item or scrolling the control if necessary , $hWnd, $hItem)
Function _GUICtrlTreeView_Expand(Requires: #include <GuiTreeView.au3>) |Expands or collapses the list of child items associated with the specified parent item, if any , $hWnd [, $hItem = 0 [, $bExpand = True]])
Function _GUICtrlTreeView_ExpandedOnce(Requires: #include <GuiTreeView.au3>) |Indicates if the item's list of child items has been expanded at least once , $hWnd, $hItem)
Function _GUICtrlTreeView_FindItem(Requires: #include <GuiTreeView.au3>) |Retrieves a item based on it's text , $hWnd, $sText [, $bInStr = False [, $hStart = 0]])
Function _GUICtrlTreeView_FindItemEx(Requires: #include <GuiTreeView.au3>) |Retrieves a item based on a tree path , $hWnd, $sTreePath [, $hStart = 0])
Function _GUICtrlTreeView_GetBkColor(Requires: #include <GuiTreeView.au3>) |Retrieve the text back color , $hWnd)
Function _GUICtrlTreeView_GetBold(Requires: #include <GuiTreeView.au3>) |Indicates if the item is drawn in a bold style , $hWnd, $hItem)
Function _GUICtrlTreeView_GetChecked(Requires: #include <GuiTreeView.au3>) |Indicates if a item has its checkbox checked , $hWnd, $hItem)
Function _GUICtrlTreeView_GetChildCount(Requires: #include <GuiTreeView.au3>) |Retrieves the number of children of an parent item , $hWnd, $hItem)
Function _GUICtrlTreeView_GetChildren(Requires: #include <GuiTreeView.au3>) |Indicates whether the item children flag is set , $hWnd, $hItem)
Function _GUICtrlTreeView_GetCount(Requires: #include <GuiTreeView.au3>) |Retrieves a count of the items , $hWnd)
Function _GUICtrlTreeView_GetCut(Requires: #include <GuiTreeView.au3>) |Indicates if the item is drawn as if selected as part of a cut and paste operation , $hWnd, $hItem)
Function _GUICtrlTreeView_GetDropTarget(Requires: #include <GuiTreeView.au3>) |Indicates whether the item is drawn as a drag and drop target , $hWnd, $hItem)
Function _GUICtrlTreeView_GetEditControl(Requires: #include <GuiTreeView.au3>) |Retrieves the handle to the edit control being used to edit a item's text , $hWnd)
Function _GUICtrlTreeView_GetExpanded(Requires: #include <GuiTreeView.au3>) |Indicates whether the item is expanded , $hWnd, $hItem)
Function _GUICtrlTreeView_GetFirstChild(Requires: #include <GuiTreeView.au3>) |Retrieves the first child item of the specified item , $hWnd, $hItem)
Function _GUICtrlTreeView_GetFirstItem(Requires: #include <GuiTreeView.au3>) |Retrieves the topmost or very first item , $hWnd)
Function _GUICtrlTreeView_GetFirstVisible(Requires: #include <GuiTreeView.au3>) |Retrieves the first visible item in the control , $hWnd)
Function _GUICtrlTreeView_GetFocused(Requires: #include <GuiTreeView.au3>) |Indicates whether the item has focus , $hWnd, $hItem)
Function _GUICtrlTreeView_GetHeight(Requires: #include <GuiTreeView.au3>) |Retrieves the current height of the each item , $hWnd)
Function _GUICtrlTreeView_GetImageIndex(Requires: #include <GuiTreeView.au3>) |Retrieves the normal state image index , $hWnd, $hItem)
Function _GUICtrlTreeView_GetImageListIconHandle(Requires: #include <GuiTreeView.au3>) |Retrieve ImageList handle , $hWnd, $iIndex)
Function _GUICtrlTreeView_GetIndent(Requires: #include <GuiTreeView.au3>) |Retrieves the amount, in pixels, that child items are indented relative to their parent items , $hWnd)
Function _GUICtrlTreeView_GetInsertMarkColor(Requires: #include <GuiTreeView.au3>) |Retrieves the color used to draw the insertion mark , $hWnd)
Function _GUICtrlTreeView_GetISearchString(Requires: #include <GuiTreeView.au3>) |Retrieves the incremental search string , $hWnd)
Function _GUICtrlTreeView_GetItemByIndex(Requires: #include <GuiTreeView.au3>) |Retrieve a item by its position in the list of child items , $hWnd, $hItem, $iIndex)
Function _GUICtrlTreeView_GetItemHandle(Requires: #include <GuiTreeView.au3>) |Retrieve the item handle , $hWnd [, $hItem = 0])
Function _GUICtrlTreeView_GetItemParam(Requires: #include <GuiTreeView.au3>) |Retrieves the application specific value of the item , $hWnd [, $hItem = 0])
Function _GUICtrlTreeView_GetLastChild(Requires: #include <GuiTreeView.au3>) |Retrieves the last child item of the specified item , $hWnd, $hItem)
Function _GUICtrlTreeView_GetLineColor(Requires: #include <GuiTreeView.au3>) |Retrieve the line color , $hWnd)
Function _GUICtrlTreeView_GetNext(Requires: #include <GuiTreeView.au3>) |Retrieves the next item after the calling item , $hWnd, $hItem)
Function _GUICtrlTreeView_GetNextChild(Requires: #include <GuiTreeView.au3>) |Returns the next item at the same level as the specified item , $hWnd, $hItem)
Function _GUICtrlTreeView_GetNextSibling(Requires: #include <GuiTreeView.au3>) |Returns the next item at the same level as the specified item , $hWnd, $hItem)
Function _GUICtrlTreeView_GetNextVisible(Requires: #include <GuiTreeView.au3>) |Retrieves the next visible item that follows the specified item , $hWnd, $hItem)
Function _GUICtrlTreeView_GetNormalImageList(Requires: #include <GuiTreeView.au3>) |Retrieves the normal image list , $hWnd)
Function _GUICtrlTreeView_GetParentHandle(Requires: #include <GuiTreeView.au3>) |Retrieve the parent handle of item , $hWnd [, $hItem = 0])
Function _GUICtrlTreeView_GetParentParam(Requires: #include <GuiTreeView.au3>) |Retrieve the parent control ID/Param of item , $hWnd [, $hItem = 0])
Function _GUICtrlTreeView_GetPrev(Requires: #include <GuiTreeView.au3>) |Retrieves the previous item before the calling item , $hWnd, $hItem)
Function _GUICtrlTreeView_GetPrevChild(Requires: #include <GuiTreeView.au3>) |Retrieves the previous child item of a specified item , $hWnd, $hItem)
Function _GUICtrlTreeView_GetPrevSibling(Requires: #include <GuiTreeView.au3>) |Returns the previous item before the calling item at the same level , $hWnd, $hItem)
Function _GUICtrlTreeView_GetPrevVisible(Requires: #include <GuiTreeView.au3>) |Retrieves the first visible item that precedes the specified item , $hWnd, $hItem)
Function _GUICtrlTreeView_GetScrollTime(Requires: #include <GuiTreeView.au3>) |Retrieves the maximum scroll time , $hWnd)
Function _GUICtrlTreeView_GetSelected(Requires: #include <GuiTreeView.au3>) |Indicates whether the item appears in the selected state , $hWnd, $hItem)
Function _GUICtrlTreeView_GetSelectedImageIndex(Requires: #include <GuiTreeView.au3>) |Retrieves the index in the image list of the image displayed for the item when it is selected , $hWnd, $hItem)
Function _GUICtrlTreeView_GetSelection(Requires: #include <GuiTreeView.au3>) |Retrieves the currently selected item , $hWnd)
Function _GUICtrlTreeView_GetSiblingCount(Requires: #include <GuiTreeView.au3>) |Retrieves the number of siblings at the level of an item , $hWnd, $hItem)
Function _GUICtrlTreeView_GetState(Requires: #include <GuiTreeView.au3>) |Retrieve the state of the item , $hWnd [, $hItem = 0])
Function _GUICtrlTreeView_GetStateImageIndex(Requires: #include <GuiTreeView.au3>) |Retrieves the index of the state image to display for the item , $hWnd, $hItem)
Function _GUICtrlTreeView_GetStateImageList(Requires: #include <GuiTreeView.au3>) |Retrieves the handle to the state image list , $hWnd)
Function _GUICtrlTreeView_GetText(Requires: #include <GuiTreeView.au3>) |Retrieve the item text , $hWnd [, $hItem = 0])
Function _GUICtrlTreeView_GetTextColor(Requires: #include <GuiTreeView.au3>) |Retrieve the text color , $hWnd)
Function _GUICtrlTreeView_GetToolTips(Requires: #include <GuiTreeView.au3>) |Retrieves the handle to the child ToolTip control , $hWnd)
Function _GUICtrlTreeView_GetTree(Requires: #include <GuiTreeView.au3>) |Retrieve all items text , $hWnd [, $hItem = 0])
Function _GUICtrlTreeView_GetUnicodeFormat(Requires: #include <GuiTreeView.au3>) |Retrieves the Unicode character format flag , $hWnd)
Function _GUICtrlTreeView_GetVisible(Requires: #include <GuiTreeView.au3>) |Indicates whether the item is currently visible in the control image , $hWnd, $hItem)
Function _GUICtrlTreeView_GetVisibleCount(Requires: #include <GuiTreeView.au3>) |Returns the number of items that can be fully visible in the control , $hWnd)
Function _GUICtrlTreeView_HitTest(Requires: #include <GuiTreeView.au3>) |Returns information about the location of a point relative to the control , $hWnd, $iX, $iY)
Function _GUICtrlTreeView_HitTestEx(Requires: #include <GuiTreeView.au3>) |Returns information about the location of a point relative to the control , $hWnd, $iX, $iY)
Function _GUICtrlTreeView_HitTestItem(Requires: #include <GuiTreeView.au3>) |Returns the item at the specified coordinates , $hWnd, $iX, $iY)
Function _GUICtrlTreeView_Index(Requires: #include <GuiTreeView.au3>) |Retrieves the position of the item in the list , $hWnd, $hItem)
Function _GUICtrlTreeView_InsertItem(Requires: #include <GuiTreeView.au3>) |Insert an item , $hWnd, $sItem_Text [, $hItem_Parent = 0 [, $hItem_After = 0 [, $iImage = -1 [, $iSelImage = -1]]]])
Function _GUICtrlTreeView_IsFirstItem(Requires: #include <GuiTreeView.au3>) |Indicates whether the tree item is very first , $hWnd, $hItem)
Function _GUICtrlTreeView_IsParent(Requires: #include <GuiTreeView.au3>) |Indicates whether one item is the parent of another item , $hWnd, $hParent, $hItem)
Function _GUICtrlTreeView_Level(Requires: #include <GuiTreeView.au3>) |Indicates the level of indentation of a item , $hWnd, $hItem)
Function _GUICtrlTreeView_SelectItem(Requires: #include <GuiTreeView.au3>) |Selects the specified item, scrolls the item into view, or redraws the item , $hWnd, $hItem [, $iFlag = 0])
Function _GUICtrlTreeView_SelectItemByIndex(Requires: #include <GuiTreeView.au3>) |Selects the item based on it's index in the parent list , $hWnd, $hItem, $iIndex)
Function _GUICtrlTreeView_SetBkColor(Requires: #include <GuiTreeView.au3>) |Sets the back color , $hWnd, $vRGBColor)
Function _GUICtrlTreeView_SetBold(Requires: #include <GuiTreeView.au3>) |Sets whether the item is drawn using a bold sytle , $hWnd, $hItem [, $bFlag = True])
Function _GUICtrlTreeView_SetChecked(Requires: #include <GuiTreeView.au3>) |Sets whether a item has it's checkbox checked or not , $hWnd, $hItem [, $bCheck = True])
Function _GUICtrlTreeView_SetCheckedByIndex(Requires: #include <GuiTreeView.au3>) |Sets whether an item has it's checkbox checked or not by it's index , $hWnd, $hItem, $iIndex [, $bCheck = True])
Function _GUICtrlTreeView_SetChildren(Requires: #include <GuiTreeView.au3>) |Sets whether the item children flag , $hWnd, $hItem [, $bFlag = True])
Function _GUICtrlTreeView_SetCut(Requires: #include <GuiTreeView.au3>) |Sets whether the item is drawn as if selected as part of a cut and paste operation , $hWnd, $hItem [, $bFlag = True])
Function _GUICtrlTreeView_SetDropTarget(Requires: #include <GuiTreeView.au3>) |Sets whether the item is drawn as a drag and drop target , $hWnd, $hItem [, $bFlag = True])
Function _GUICtrlTreeView_SetFocused(Requires: #include <GuiTreeView.au3>) |Sets whether the item appears to have focus , $hWnd, $hItem [, $bFlag = True])
Function _GUICtrlTreeView_SetHeight(Requires: #include <GuiTreeView.au3>) |Sets the height of the each item , $hWnd, $iHeight)
Function _GUICtrlTreeView_SetIcon(Requires: #include <GuiTreeView.au3>) |Set an item icon , $hWnd [, $hItem = 0 [, $sIconFile = "" [, $iIconID = 0 [, $iImageMode = 6]]]])
Function _GUICtrlTreeView_SetImageIndex(Requires: #include <GuiTreeView.au3>) |Sets the index into image list for which image is displayed when a item is in its normal state , $hWnd, $hItem, $iIndex)
Function _GUICtrlTreeView_SetIndent(Requires: #include <GuiTreeView.au3>) |Sets the width of indentation for a tree-view control and redraws the control to reflect the new width , $hWnd, $iIndent)
Function _GUICtrlTreeView_SetInsertMark(Requires: #include <GuiTreeView.au3>) |Sets the insertion mark , $hWnd, $hItem [, $bAfter = True])
Function _GUICtrlTreeView_SetInsertMarkColor(Requires: #include <GuiTreeView.au3>) |Sets the color used to draw the insertion mark , $hWnd, $iColor)
Function _GUICtrlTreeView_SetItemHeight(Requires: #include <GuiTreeView.au3>) |Sets the height of an individual item , $hWnd, $hItem, $iIntegral)
Function _GUICtrlTreeView_SetItemParam(Requires: #include <GuiTreeView.au3>) |Sets the value specific to the item , $hWnd, $hItem, $iParam)
Function _GUICtrlTreeView_SetLineColor(Requires: #include <GuiTreeView.au3>) |Sets the line color , $hWnd, $vRGBColor)
Function _GUICtrlTreeView_SetNormalImageList(Requires: #include <GuiTreeView.au3>) |Sets the normal image list for the control , $hWnd, $hImageList)
Function _GUICtrlTreeView_SetScrollTime(Requires: #include <GuiTreeView.au3>) |Sets the maximum scroll time , $hWnd, $iTime)
Function _GUICtrlTreeView_SetSelected(Requires: #include <GuiTreeView.au3>) |Sets whether the item appears in the selected state , $hWnd, $hItem [, $bFlag = True])
Function _GUICtrlTreeView_SetSelectedImageIndex(Requires: #include <GuiTreeView.au3>) |Sets the selected image index , $hWnd, $hItem, $iIndex)
Function _GUICtrlTreeView_SetState(Requires: #include <GuiTreeView.au3>) |Set the state of the specified item , $hWnd, $hItem [, $iState = 0 [, $bSetState = True]])
Function _GUICtrlTreeView_SetStateImageIndex(Requires: #include <GuiTreeView.au3>) |Sets the index into image list for the state image , $hWnd, $hItem, $iIndex)
Function _GUICtrlTreeView_SetStateImageList(Requires: #include <GuiTreeView.au3>) |Sets the state image list for the control , $hWnd, $hImageList)
Function _GUICtrlTreeView_SetText(Requires: #include <GuiTreeView.au3>) |Set the text of an item , $hWnd [, $hItem = 0 [, $sText = ""]])
Function _GUICtrlTreeView_SetTextColor(Requires: #include <GuiTreeView.au3>) |Sets the text color , $hWnd, $vRGBColor)
Function _GUICtrlTreeView_SetToolTips(Requires: #include <GuiTreeView.au3>) |Sets the handle to the child ToolTip control , $hWnd, $hToolTip)
Function _GUICtrlTreeView_SetUnicodeFormat(Requires: #include <GuiTreeView.au3>) |Sets the Unicode character format flag , $hWnd [, $bFormat = True])
Function _GUICtrlTreeView_Sort(Requires: #include <GuiTreeView.au3>) |Sorts the items , $hWnd)
Function _GUIImageList_Add(Requires: #include <GuiImageList.au3>) |Adds an image or images to an image list , $hWnd, $hImage [, $hMask = 0])
Function _GUIImageList_AddBitmap(Requires: #include <GuiImageList.au3>) |Adds a bitmap to an image list , $hWnd, $sImage [, $sMask = ""])
Function _GUIImageList_AddIcon(Requires: #include <GuiImageList.au3>) |Adds an icon to an image list , $hWnd, $sFilePath [, $iIndex = 0 [, $bLarge = False]])
Function _GUIImageList_AddMasked(Requires: #include <GuiImageList.au3>) |Adds an image or images to an image list, generating a mask from the specified bitmap , $hWnd, $hImage [, $iMask = 0])
Function _GUIImageList_BeginDrag(Requires: #include <GuiImageList.au3>) |Begins dragging an image , $hWnd, $iTrack, $iXHotSpot, $iYHotSpot)
Function _GUIImageList_Copy(Requires: #include <GuiImageList.au3>) |Source image is copied to the destination image's index , $hWnd, $iSource, $iDestination)
Function _GUIImageList_Create(Requires: #include <GuiImageList.au3>) |Create an ImageList control , [$iCX = 16 [, $iCY = 16 [, $iColor = 4 [, $iOptions = 0 [, $iInitial = 4 [, $iGrow = 4]]]]]])
Function _GUIImageList_Destroy(Requires: #include <GuiImageList.au3>) |Destroys an image list , $hWnd)
Function _GUIImageList_DestroyIcon(Requires: #include <GuiImageList.au3>) |Destroys an icon and frees any memory the icon occupied , $hIcon)
Function _GUIImageList_DragEnter(Requires: #include <GuiImageList.au3>) |Displays the drag image at the specified position within the window , $hWnd, $iX, $iY)
Function _GUIImageList_DragLeave(Requires: #include <GuiImageList.au3>) |Unlocks the specified window and hides the drag image, allowing the window to be updated , $hWnd)
Function _GUIImageList_DragMove(Requires: #include <GuiImageList.au3>) |Moves the image that is being dragged during a drag-and-drop operation , $iX, $iY)
Function _GUIImageList_Draw(Requires: #include <GuiImageList.au3>) |Draws an image list item in the specified device context , $hWnd, $iIndex, $hDC, $iX, $iY [, $iStyle = 0])
Function _GUIImageList_DrawEx(Requires: #include <GuiImageList.au3>) |Draws an image list item in the specified device context , $hWnd, $iIndex, $hDC, $iX, $iY [, $iDX = 0 [, $iDY = 0 [, $iRGBBk = 0xFFFFFFFF [, $iRGBFg = 0xFFFFFFFF [, $iStyle = 0]]]]])
Function _GUIImageList_Duplicate(Requires: #include <GuiImageList.au3>) |Creates a duplicate of an existing image list , $hWnd)
Function _GUIImageList_EndDrag(Requires: #include <GuiImageList.au3>) |Ends a drag operation 
Function _GUIImageList_GetBkColor(Requires: #include <GuiImageList.au3>) |Retrieves the current background color for an image list , $hWnd)
Function _GUIImageList_GetIcon(Requires: #include <GuiImageList.au3>) |Creates an icon from an image and mask in an image list , $hWnd, $iIndex [, $iStyle = 0])
Function _GUIImageList_GetIconHeight(Requires: #include <GuiImageList.au3>) |Retrieves the height of the images in an image list , $hWnd)
Function _GUIImageList_GetIconSize(Requires: #include <GuiImageList.au3>) |Retrieves the dimensions of images in an image list , $hWnd)
Function _GUIImageList_GetIconSizeEx(Requires: #include <GuiImageList.au3>) |Retrieves the dimensions of images in an image list , $hWnd)
Function _GUIImageList_GetIconWidth(Requires: #include <GuiImageList.au3>) |Retrieves the width of the images in an image list , $hWnd)
Function _GUIImageList_GetImageCount(Requires: #include <GuiImageList.au3>) |Retrieves the number of images in an image list , $hWnd)
Function _GUIImageList_GetImageInfoEx(Requires: #include <GuiImageList.au3>) |Retrieves information about an image , $hWnd, $iIndex)
Function _GUIImageList_Remove(s) |Remove Image from the ImageList (Requires: #include <GuiImageList.au3>), $hWnd [, $iIndex = -1])
Function _GUIImageList_ReplaceIcon(Requires: #include <GuiImageList.au3>) |Replaces an image with an icon or cursor , $hWnd, $iIndex, $hIcon)
Function _GUIImageList_SetBkColor(Requires: #include <GuiImageList.au3>) |Sets the background color for an image list , $hWnd, $iClrBk)
Function _GUIImageList_SetIconSize(Requires: #include <GuiImageList.au3>) |Sets the dimensions of images in an image list and removes all images from the list , $hWnd, $iCX, $iCY)
Function _GUIImageList_SetImageCount(Requires: #include <GuiImageList.au3>) |Resizes an existing image list , $hWnd, $iNewCount)
Function _GUIImageList_Swap(Requires: #include <GuiImageList.au3>) |Swap image between Source and Destination image's index , $hWnd, $iSource, $iDestination)
Function _GUIScrollBars_EnableScrollBar(Requires: #include <GuiScrollBars.au3>) |Enable/Disable scrollbar , $hWnd [, $iSBflags = $SB_BOTH [, $iArrows = $ESB_ENABLE_BOTH]])
Function _GUIScrollBars_GetScrollBarInfoEx(Requires: #include <GuiScrollBars.au3>) |Retrieves information about the specified scroll bar , $hWnd, $iObject)
Function _GUIScrollBars_GetScrollBarRect(Requires: #include <GuiScrollBars.au3>) |Retrieves coordinates of the scroll bar , $hWnd, $iObject)
Function _GUIScrollBars_GetScrollBarRGState(Requires: #include <GuiScrollBars.au3>) |Retrieves the state of a scroll bar component , $hWnd, $iObject)
Function _GUIScrollBars_GetScrollBarXYLineButton(Requires: #include <GuiScrollBars.au3>) |Retrieves the Height or width of the thumb , $hWnd, $iObject)
Function _GUIScrollBars_GetScrollBarXYThumbBottom(Requires: #include <GuiScrollBars.au3>) |Retrieves the Position of the bottom or right of the thumb , $hWnd, $iObject)
Function _GUIScrollBars_GetScrollBarXYThumbTop(Requires: #include <GuiScrollBars.au3>) |Retrieves the Position of the top or left of the thumb , $hWnd, $iObject)
Function _GUIScrollBars_GetScrollInfo(Requires: #include <GuiScrollBars.au3>) |Retrieves the parameters of a scroll bar , $hWnd, $iBar, ByRef $tSCROLLINFO)
Function _GUIScrollBars_GetScrollInfoEx(Requires: #include <GuiScrollBars.au3>) |Retrieves the parameters of a scroll bar , $hWnd, $iBar)
Function _GUIScrollBars_GetScrollInfoMax(Requires: #include <GuiScrollBars.au3>) |Retrieves the maximum scrolling position , $hWnd, $iBar)
Function _GUIScrollBars_GetScrollInfoMin(Requires: #include <GuiScrollBars.au3>) |Retrieves the minimum scrolling position , $hWnd, $iBar)
Function _GUIScrollBars_GetScrollInfoPage(Requires: #include <GuiScrollBars.au3>) |Retrieves the page size , $hWnd, $iBar)
Function _GUIScrollBars_GetScrollInfoPos(Requires: #include <GuiScrollBars.au3>) |Retrieves the position of the scroll box , $hWnd, $iBar)
Function _GUIScrollBars_GetScrollInfoTrackPos(Requires: #include <GuiScrollBars.au3>) |Retrieves the immediate position of a scroll box that the user is dragging , $hWnd, $iBar)
Function _GUIScrollBars_GetScrollPos(thumb) |Retrieves the current position of the scroll box in the specified scroll bar (Requires: #include <GuiScrollBars.au3>), $hWnd, $iBar)
Function _GUIScrollBars_GetScrollRange(thumb) |Retrieves the current minimum and maximum scroll box positions for the specified scroll bar (Requires: #include <GuiScrollBars.au3>), $hWnd, $iBar)
Function _GUIScrollBars_Init(Requires: #include <GuiScrollBars.au3>) |Initialize the scrollbars for the window , $hWnd [, $iMaxH = -1 [, $iMaxV = -1]])
Function _GUIScrollBars_ScrollWindow(Requires: #include <GuiScrollBars.au3>) |Scrolls the contents of the specified window's client area , $hWnd, $iXAmount, $iYAmount)
Function _GUIScrollBars_SetScrollInfo(Requires: #include <GuiScrollBars.au3>) |Sets the parameters of a scroll bar , $hWnd, $iBar, $tSCROLLINFO [, $bRedraw = True])
Function _GUIScrollBars_SetScrollInfoMax(Requires: #include <GuiScrollBars.au3>) |Sets the maximum scrolling position , $hWnd, $iBar, $iMax)
Function _GUIScrollBars_SetScrollInfoMin(Requires: #include <GuiScrollBars.au3>) |Sets the minimum scrolling position , $hWnd, $iBar, $iMin)
Function _GUIScrollBars_SetScrollInfoPage(Requires: #include <GuiScrollBars.au3>) |Sets the page size , $hWnd, $iBar, $iPage)
Function _GUIScrollBars_SetScrollInfoPos(thumb) |Sets the position of the scroll box in the specified scroll bar (Requires: #include <GuiScrollBars.au3>), $hWnd, $iBar, $iPos)
Function _GUIScrollBars_SetScrollRange(Requires: #include <GuiScrollBars.au3>) |Sets the minimum and maximum scroll box positions for the specified scroll bar , $hWnd, $iBar, $iMinPos, $iMaxPos)
Function _GUIScrollBars_ShowScrollBar(Requires: #include <GuiScrollBars.au3>) |Shows or hides the specified scroll bar , $hWnd, $iBar [, $bShow = True])
Function _GUIToolTip_Activate(Requires: #include <GuiToolTip.au3>) |Activates a ToolTip control , $hWnd)
Function _GUIToolTip_AddTool(Requires: #include <GuiToolTip.au3>) |Registers a tool with the ToolTip control , $hTool, $hWnd, $sText [, $iID = 0 [, $iLeft = 0 [, $iTop = 0 [, $iRight = 0 [, $iBottom = 0 [, $iFlags = Default [, $iParam = 0]]]]]]])
Function _GUIToolTip_AdjustRect(Requires: #include <GuiToolTip.au3>) |Calculates the text display rectangle from the window rectangle , $hWnd, ByRef $tRECT [, $bLarger = True])
Function _GUIToolTip_BitsToTTF(Requires: #include <GuiToolTip.au3>) |Decode bit flags to TTF_* strings , $iFlags)
Function _GUIToolTip_Create(Requires: #include <GuiToolTip.au3>) |Creates a ToolTip control , $hWnd [, $iStyle = $_TT_ghTTDefaultStyle])
Function _GUIToolTip_Deactivate(Requires: #include <GuiToolTip.au3>) |Deactivates a ToolTip control , $hWnd)
Function _GUIToolTip_DelTool(Requires: #include <GuiToolTip.au3>) |Deletes a tool from a tooltip control , $hWnd, $hTool [, $iID = 0])
Function _GUIToolTip_Destroy(Requires: #include <GuiToolTip.au3>) |Delete a ToolTip control , ByRef $hWnd)
Function _GUIToolTip_EnumTools(Requires: #include <GuiToolTip.au3>) |Retrieves information about the current tool , $hWnd, $iIndex)
Function _GUIToolTip_GetBubbleHeight(Requires: #include <GuiToolTip.au3>) |Returns the height of the control , $hWnd, $hTool, $iID [, $iFlags = 0x00000001 + 0x00000010])
Function _GUIToolTip_GetBubbleSize(Requires: #include <GuiToolTip.au3>) |Returns the width and height of a ToolTip control , $hWnd, $hTool, $iID [, $iFlags = 0x00000001 + 0x00000010])
Function _GUIToolTip_GetBubbleWidth(Requires: #include <GuiToolTip.au3>) |Returns the width of a ToolTip control , $hWnd, $hTool, $iID [, $iFlags = 0x00000001 + 0x00000010])
Function _GUIToolTip_GetCurrentTool(Requires: #include <GuiToolTip.au3>) |Retrieves information for the current tool , $hWnd)
Function _GUIToolTip_GetDelayTime(Requires: #include <GuiToolTip.au3>) |Retrieves the initial, pop-up or reshow durations of a ToolTip control , $hWnd, $iDuration)
Function _GUIToolTip_GetMargin(Requires: #include <GuiToolTip.au3>) |Retrieves the top, left, bottom, and right margins of a ToolTip control , $hWnd)
Function _GUIToolTip_GetMarginEx(Requires: #include <GuiToolTip.au3>) |Retrieves the top, left, bottom, and right margins of a ToolTip control , $hWnd)
Function _GUIToolTip_GetMaxTipWidth(Requires: #include <GuiToolTip.au3>) |Retrieves the maximum width of a ToolTip window , $hWnd)
Function _GUIToolTip_GetText(Requires: #include <GuiToolTip.au3>) |Retrieves the text of a tool , $hWnd, $hTool, $iID)
Function _GUIToolTip_GetTipBkColor(Requires: #include <GuiToolTip.au3>) |Retrieves the background color , $hWnd)
Function _GUIToolTip_GetTipTextColor(Requires: #include <GuiToolTip.au3>) |Retrieves the text color of a ToolTip control , $hWnd)
Function _GUIToolTip_GetTitleBitMap(Requires: #include <GuiToolTip.au3>) |Retrieves the title bitmap icon , $hWnd)
Function _GUIToolTip_GetTitleText(Requires: #include <GuiToolTip.au3>) |Retrieve the title , $hWnd)
Function _GUIToolTip_GetToolCount(Requires: #include <GuiToolTip.au3>) |Returns the count of tools maintained by the ToolTip control , $hWnd)
Function _GUIToolTip_GetToolInfo(Requires: #include <GuiToolTip.au3>) |Retrieves the information about a specific tool , $hWnd, $hTool, $iID)
Function _GUIToolTip_HitTest(Requires: #include <GuiToolTip.au3>) |Retrieves the information that a ToolTip control maintains about a tool , $hWnd, $hTool, $iX, $iY)
Function _GUIToolTip_NewToolRect(Requires: #include <GuiToolTip.au3>) |Sets a new bounding rectangle for a tool , $hWnd, $hTool, $iID, $iLeft, $iTop, $iRight, $iBottom)
Function _GUIToolTip_Pop(Requires: #include <GuiToolTip.au3>) |Removes a displayed ToolTip from view , $hWnd)
Function _GUIToolTip_PopUp(Requires: #include <GuiToolTip.au3>) |Causes the ToolTip to display at the coordinates of the last mouse message , $hWnd)
Function _GUIToolTip_SetDelayTime(Requires: #include <GuiToolTip.au3>) |Sets the initial, pop-up, and reshow durations of a ToolTip , $hWnd, $iDuration, $iTime)
Function _GUIToolTip_SetMargin(Requires: #include <GuiToolTip.au3>) |Sets the top, left, bottom, and right margins of a ToolTip , $hWnd, $iLeft, $iTop, $iRight, $iBottom)
Function _GUIToolTip_SetMaxTipWidth(Requires: #include <GuiToolTip.au3>) |Sets the maximum width for a ToolTip window , $hWnd, $iWidth)
Function _GUIToolTip_SetTipBkColor(Requires: #include <GuiToolTip.au3>) |Sets the background color of a ToolTip , $hWnd, $iColor)
Function _GUIToolTip_SetTipTextColor(Requires: #include <GuiToolTip.au3>) |Sets the text color , $hWnd, $iColor)
Function _GUIToolTip_SetTitle(Requires: #include <GuiToolTip.au3>) |Adds a standard icon and title string , $hWnd, $sTitle [, $iIcon = 0])
Function _GUIToolTip_SetToolInfo(Requires: #include <GuiToolTip.au3>) |Sets the information for a tool , $hWnd, $sText [, $iID = 0 [, $iLeft = 0 [, $iTop = 0 [, $iRight = 0 [, $iBottom = 0 [, $iFlags = Default [, $iParam = 0]]]]]]])
Function _GUIToolTip_SetWindowTheme(Requires: #include <GuiToolTip.au3>) |Sets the visual style , $hWnd, $sStyle)
Function _GUIToolTip_ToolExists(is displayed) |Determines whether a tool currently exists (Requires: #include <GuiToolTip.au3>), $hWnd)
Function _GUIToolTip_ToolToArray(Requires: #include <GuiToolTip.au3>) |Transfers a ToolInfo structure to an array , $hWnd, ByRef $tToolInfo, $iError)
Function _GUIToolTip_TrackActivate(Requires: #include <GuiToolTip.au3>) |Activates or deactivates a tracking ToolTip , $hWnd [, $bActivate = True [, $hTool = 0 [, $iID = 0]]])
Function _GUIToolTip_TrackPosition(Requires: #include <GuiToolTip.au3>) |Sets the position of a tracking ToolTip , $hWnd, $iX, $iY)
Function _GUIToolTip_Update(Requires: #include <GuiToolTip.au3>) |Forces the current tool to be redrawn , $hWnd)
Function _GUIToolTip_UpdateTipText(Requires: #include <GuiToolTip.au3>) |Sets the ToolTip text for a tool , $hWnd, $hTool, $iID, $sText)
Function _HexToString(Requires: #include <String.au3>) |Convert a hex string to a string , $sHex)
Function _IEAction(Requires: #include <IE.au3>) |Perform any of a set of simple actions on the Browser , ByRef $oObject, $sAction)
Function _IEAttach(based on the selected mode) |Attach to the specified instance of Internet Explorer where the search string sub-string matches (Requires: #include <IE.au3>), $sString [, $sMode = "title" [, $iInstance = 1]])
Function _IEBodyReadHTML(Requires: #include <IE.au3>) |Returns the HTML inside the <body> tag of the document , ByRef $oObject)
Function _IEBodyReadText(Requires: #include <IE.au3>) |Returns the Text inside the <body> tag of the document , ByRef $oObject)
Function _IEBodyWriteHTML(Requires: #include <IE.au3>) |Replaces the HTML inside the <body> tag of the document , ByRef $oObject, $sHTML)
Function _IECreate(Requires: #include <IE.au3>) |Create an Internet Explorer Browser Window , [$sUrl = "about:blank" [, $iTryAttach = 0 [, $iVisible = 1 [, $iWait = 1 [, $iTakeFocus = 1]]]]])
Function _IECreateEmbedded() |Create a Webbrowser object suitable for embedding in an AutoIt GUI with GUICtrlCreateObj (Requires: #include <IE.au3>)
Function _IEDocGetObj(Requires: #include <IE.au3>) |Given any DOM object, returns a reference to the associated document object , ByRef $oObject)
Function _IEDocInsertHTML(Requires: #include <IE.au3>) |Inserts HTML Text in or around an element , ByRef $oObject, $sString [, $sWhere = "beforeend"])
Function _IEDocInsertText(Requires: #include <IE.au3>) |Inserts Text in or around an element , ByRef $oObject, $sString [, $sWhere = "beforeend"])
Function _IEDocReadHTML(Requires: #include <IE.au3>) |Returns the full HTML source of a document , ByRef $oObject)
Function _IEDocWriteHTML(Requires: #include <IE.au3>) |Replaces the HTML for the entire document , ByRef $oObject, $sHTML)
Function _IEErrorNotify(to the console) |Specifies whether IE.au3 automatically notifies of Warnings and Errors (Requires: #include <IE.au3>), [$vNotify = Default])
Function _IEFormElementCheckBoxSelect(Requires: #include <IE.au3>) |Set the value of a specified form element , ByRef $oObject, $sString [, $sName = "" [, $iSelect = 1 [, $sMode = "byValue" [, $iFireEvent = 1]]]])
Function _IEFormElementGetCollection(Requires: #include <IE.au3>) |Returns a collection object variable representing all Form Elements within a given Form , ByRef $oObject [, $iIndex = -1])
Function _IEFormElementGetObjByName(Requires: #include <IE.au3>) |Returns an object reference to a Form Element by name , ByRef $oObject, $sName [, $iIndex = 0])
Function _IEFormElementGetValue(Requires: #include <IE.au3>) |Returns the value of a given Form Element , ByRef $oObject)
Function _IEFormElementOptionSelect(Requires: #include <IE.au3>) |Set the value of a specified form element , ByRef $oObject, $sString [, $iSelect = 1 [, $sMode = "byValue" [, $iFireEvent = 1]]])
Function _IEFormElementRadioSelect(Requires: #include <IE.au3>) |Set the value of a specified form element , ByRef $oObject, $sString, $sName [, $iSelect = 1 [, $sMode = "byValue" [, $iFireEvent = 1]]])
Function _IEFormElementSetValue(Requires: #include <IE.au3>) |Set the value of a specified Form Element , ByRef $oObject, $sNewValue [, $iFireEvent = 1])
Function _IEFormGetCollection(Requires: #include <IE.au3>) |Returns a collection object variable representing the Forms in the document or a single form by index , ByRef $oObject [, $iIndex = -1])
Function _IEFormGetObjByName(Requires: #include <IE.au3>) |Returns an object reference to a Form by name , ByRef $oObject, $sName [, $iIndex = 0])
Function _IEFormImageClick(Requires: #include <IE.au3>) |Simulate a mouse click on an <input type=image>. Match by sub-string match of alt text, name or src , ByRef $oObject, $sLinkText [, $sMode = "src" [, $iIndex = 0 [, $iWait = 1]]])
Function _IEFormReset(Requires: #include <IE.au3>) |Reset a specified Form setting the values back to their loaded defaults , ByRef $oObject)
Function _IEFormSubmit(Requires: #include <IE.au3>) |Submit a specified Form , ByRef $oObject [, $iWait = 1])
Function _IEFrameGetCollection(Requires: #include <IE.au3>) |Returns a collection object containing the frames in a FrameSet or the iFrames on a normal page or a single Frame or iFrame by index , ByRef $oObject [, $iIndex = -1])
Function _IEFrameGetObjByName(Requires: #include <IE.au3>) |Returns an object reference to a Frame or iFrame by name , ByRef $oObject, $sName)
Function _IEGetObjById(Requires: #include <IE.au3>) |Returns an object variable by id , ByRef $oObject, $sID)
Function _IEGetObjByName(Requires: #include <IE.au3>) |Returns an object variable by name , ByRef $oObject, $sName [, $iIndex = 0])
Function _IEHeadInsertEventScript(Requires: #include <IE.au3>) |Inserts a Javascript into the Head of the document , ByRef $oObject, $sHTMLFor, $sEvent, $sScript)
Function _IEImgClick(Requires: #include <IE.au3>) |Simulate a mouse click on an image. Match by sub-string match of alt text, name, or src , ByRef $oObject, $sLinkText [, $sMode = "src" [, $iIndex = 0 [, $iWait = 1]]])
Function _IEImgGetCollection(Requires: #include <IE.au3>) |Returns a collection object variable representing the IMG tags in the document or a single image by index , ByRef $oObject [, $iIndex = -1])
Function _IEIsFrameSet(Requires: #include <IE.au3>) |Checks to see if the specified Window contains a FrameSet , ByRef $oObject)
Function _IELinkClickByIndex(in source order) |Simulate a mouse click on a link by 0-based index (Requires: #include <IE.au3>), ByRef $oObject, $iIndex [, $iWait = 1])
Function _IELinkClickByText(Requires: #include <IE.au3>) |Simulate a mouse click on a link with text sub-string matching the string provided , ByRef $oObject, $sLinkText [, $iIndex = 0 [, $iWait = 1]])
Function _IELinkGetCollection(Requires: #include <IE.au3>) |Returns a collection object containing all links in the document or a single link by index , ByRef $oObject [, $iIndex = -1])
Function _IELoadWait(Requires: #include <IE.au3>) |Wait for a browser page load to complete before returning , ByRef $oObject [, $iDelay = 0 [, $iTimeout = -1]])
Function _IELoadWaitTimeout() |Retrieve or set the current value in milliseconds _IELoadWait will try before timing out (Requires: #include <IE.au3>), [$iTimeout = -1])
Function _IENavigate(Requires: #include <IE.au3>) |Directs an existing browser window to navigate to the specified URL , ByRef $oObject, $sUrl [, $iWait = 1])
Function _IEPropertyGet(Requires: #include <IE.au3>) |Returns a select property of the Browser or DOM element , ByRef $oObject, $sProperty)
Function _IEPropertySet(Requires: #include <IE.au3>) |Set a select property of the Browser or DOM element , ByRef $oObject, $sProperty, $vValue)
Function _IEQuit(Requires: #include <IE.au3>) |Close the browser and remove the object reference to it , ByRef $oObject)
Function _IETableGetCollection(Requires: #include <IE.au3>) |Returns a collection object variable representing all the tables in a document or a single table by index , ByRef $oObject [, $iIndex = -1])
Function _IETableWriteToArray(Requires: #include <IE.au3>) |Reads the contents of a Table into an array , ByRef $oObject [, $bTranspose = False])
Function _IETagNameAllGetCollection(Requires: #include <IE.au3>) |Returns a collection object all elements in the document or document hierarchy in source order or a single element by index , ByRef $oObject [, $iIndex = -1])
Function _IETagNameGetCollection(Requires: #include <IE.au3>) |Returns a collection object of all elements in the object with the specified TagName or a single element by index , ByRef $oObject, $sTagName [, $iIndex = -1])
Function _IE_Example(Requires: #include <IE.au3>) |Display a new browser window pre-loaded with documents to be used in IE.au3 examples or your own testing , [$sModule = "basic"])
Function _IE_Introduction(Requires: #include <IE.au3>) |Display introductory information about IE.au3 in a new browser window , [$sModule = "basic"])
Function _IE_VersionInfo(Requires: #include <IE.au3>) |Returns an array of information about the IE.au3 version 
Function _INetExplorerCapable(Internet Explorer) |Converts a string to IE capable line (Requires: #include <Inet.au3>), $sIEString)
Function _INetGetSource(Requires: #include <Inet.au3>) |Gets the source from an URL without writing a temp file , $sURL [, $bString = True])
Function _INetMail(Requires: #include <Inet.au3>) |Opens default user's mail client with given address, subject, and body , $sMailTo, $sMailSubject, $sMailBody)
Function _INetSmtpMail(Requires: #include <Inet.au3>) |Sends an email without using an external email program , $sSMTPServer, $sFromName, $sFromAddress, $sToAddress [, $sSubject = "" [, $aBody = "" [, $sEHLO = "" [, $sFirst = "" [, $bTrace = 0]]]]])
Function _IsPressed(Requires: #include <Misc.au3>) |Check if key has been pressed , $sHexKey [, $vDLL = 'user32.dll'])
Function _MathCheckDiv(Requires: #include <Math.au3>) |Checks if first number is divisible by the second number , $iNum1 [, $iNum2 = 2])
Function _Max(Requires: #include <Math.au3>) |Evaluates which of the two numbers is higher , $iNum1, $iNum2)
Function _MemGlobalAlloc(Requires: #include <Memory.au3>) |Allocates the specified number of bytes from the heap , $iBytes [, $iFlags = 0])
Function _MemGlobalFree(Requires: #include <Memory.au3>) |Frees the specified global memory object and invalidates its handle , $hMemory)
Function _MemGlobalLock(Requires: #include <Memory.au3>) |Locks a global memory object and returns a pointer to the first byte of the object's memory block , $hMemory)
Function _MemGlobalSize(Requires: #include <Memory.au3>) |Retrieves the current size of the specified global memory object , $hMemory)
Function _MemGlobalUnlock(Requires: #include <Memory.au3>) |Decrements the lock count associated with a memory object that was allocated with GMEM_MOVEABLE , $hMemory)
Function _MemMoveMemory(Requires: #include <Memory.au3>) |Moves memory either forward or backward, aligned or unaligned , $pSource, $pDest, $iLength)
Function _MemVirtualAlloc(Requires: #include <Memory.au3>) |Reserves or commits a region of pages in the virtual address space of the calling process , $pAddress, $iSize, $iAllocation, $iProtect)
Function _MemVirtualAllocEx(Requires: #include <Memory.au3>) |Reserves a region of memory within the virtual address space of a specified process , $hProcess, $pAddress, $iSize, $iAllocation, $iProtect)
Function _MemVirtualFree(Requires: #include <Memory.au3>) |Releases a region of pages within the virtual address space of a process , $pAddress, $iSize, $iFreeType)
Function _MemVirtualFreeEx(Requires: #include <Memory.au3>) |Releases a region of pages within the virtual address space of a process , $hProcess, $pAddress, $iSize, $iFreeType)
Function _Min(Requires: #include <Math.au3>) |Evaluates which of the two numbers is lower , $iNum1, $iNum2)
Function _MouseTrap(Requires: #include <Misc.au3>) |Confine the Mouse Cursor to specified coords , [$iLeft = 0 [, $iTop = 0 [, $iRight = 0 [, $iBottom = 0]]]])
Function _NamedPipes_CallNamedPipe(Requires: #include <NamedPipes.au3>) |Performs a read/write operation on a named pipe , $sPipeName, $pInpBuf, $iInpSize, $pOutBuf, $iOutSize, ByRef $iRead [, $iTimeOut = 0])
Function _NamedPipes_ConnectNamedPipe(Requires: #include <NamedPipes.au3>) |Enables a named pipe server process to wait for a client process to connect , $hNamedPipe [, $tOverlapped = 0])
Function _NamedPipes_CreateNamedPipe(Requires: #include <NamedPipes.au3>) |Creates an instance of a named pipe , $sName [, $iAccess = 2 [, $iFlags = 2 [, $iACL = 0 [, $iType = 1 [, $iRead = 1 [, $iWait = 0 [, $iMaxInst = 25 [, $iOutBufSize = 4096 [, $iInpBufSize = 4096 [, $iDefaultTimeout = 5000 [, $tSecurity = 0]]]]]]]]]]])
Function _NamedPipes_CreatePipe(Requires: #include <NamedPipes.au3>) |Creates an anonymous pipe , ByRef $hReadPipe, ByRef $hWritePipe [, $tSecurity = 0 [, $iSize = 0]])
Function _NamedPipes_DisconnectNamedPipe(Requires: #include <NamedPipes.au3>) |Disconnects the server end of a named pipe instance from a client process , $hNamedPipe)
Function _NamedPipes_GetNamedPipeHandleState(Requires: #include <NamedPipes.au3>) |Retrieves information about a specified named pipe , $hNamedPipe)
Function _NamedPipes_GetNamedPipeInfo(Requires: #include <NamedPipes.au3>) |Retrieves information about the specified named pipe , $hNamedPipe)
Function _NamedPipes_PeekNamedPipe(Requires: #include <NamedPipes.au3>) |Copies data from a pipe into a buffer without removing it from the pipe , $hNamedPipe)
Function _NamedPipes_SetNamedPipeHandleState(Requires: #include <NamedPipes.au3>) |Sets the read mode and the blocking mode of the specified named pipe , $hNamedPipe, $iRead, $iWait [, $iBytes = 0 [, $iTimeOut = 0]])
Function _NamedPipes_TransactNamedPipe(Requires: #include <NamedPipes.au3>) |Reads and writes to a named pipe in one network operation , $hNamedPipe, $pInpBuf, $iInpSize, $pOutBuf, $iOutSize [, $tOverlapped = 0])
Function _NamedPipes_WaitNamedPipe(Requires: #include <NamedPipes.au3>) |Waits for an instance of a named pipe to become available , $sPipeName [, $iTimeOut = 0])
Function _Net_Share_ConnectionEnum(Requires: #include <NetShare.au3>) |Lists all connections made to a shared resource , $sServer, $sQualifier)
Function _Net_Share_FileClose(Requires: #include <NetShare.au3>) |Forces a resource to close , $sServer, $iFileID)
Function _Net_Share_FileEnum(Requires: #include <NetShare.au3>) |Returns information about open files on a server , [$sServer = "" [, $sBaseName = "" [, $sUserName = ""]]])
Function _Net_Share_FileGetInfo(Requires: #include <NetShare.au3>) |Retrieves information about a particular opening of a server resource , $sServer, $iFileID)
Function _Net_Share_PermStr(Requires: #include <NetShare.au3>) |Returns the string representation of a resource's permissions , $iPerm)
Function _Net_Share_ResourceStr(Requires: #include <NetShare.au3>) |Returns the string representation of a resource , $iResource)
Function _Net_Share_SessionDel(Requires: #include <NetShare.au3>) |Ends a network session between a server and a workstation , [$sServer = "" [, $sClientName = "" [, $sUserName = ""]]])
Function _Net_Share_SessionEnum(Requires: #include <NetShare.au3>) |Provides information about sessions established on a server , [$sServer = "" [, $sClientName = "" [, $sUserName = ""]]])
Function _Net_Share_SessionGetInfo(Requires: #include <NetShare.au3>) |Retrieves information about a session established between a server and workstation , $sServer, $sClientName, $sUserName)
Function _Net_Share_ShareAdd(Requires: #include <NetShare.au3>) |Shares a server resource , $sServer, $sShare, $iType, $sResourcePath [, $sComment = "" [, $iMaxUses = -1]])
Function _Net_Share_ShareCheck(Requires: #include <NetShare.au3>) |Checks whether or not a server is sharing a device , $sServer, $sShare)
Function _Net_Share_ShareDel(Requires: #include <NetShare.au3>) |Deletes a share name from a server's list of shared resources , $sServer, $sShare)
Function _Net_Share_ShareEnum(Requires: #include <NetShare.au3>) |Retrieves information about each shared resource on a server , [$sServer = ""])
Function _Net_Share_ShareGetInfo(Requires: #include <NetShare.au3>) |Retrieves information about a particular shared resource on a server , $sServer, $sShare)
Function _Net_Share_ShareSetInfo(Requires: #include <NetShare.au3>) |Shares a server resource , $sServer, $sShare, $sComment, $iMaxUses)
Function _Net_Share_StatisticsGetSvr(Requires: #include <NetShare.au3>) |Retrieves operating statistics for a server , [$sServer = ""])
Function _Net_Share_StatisticsGetWrk(Requires: #include <NetShare.au3>) |Retrieves operating statistics for a workstation , [$sWorkStation = ""])
Function _Now(Requires: #include <Date.au3>) |Returns the current Date and Time in PC's format 
Function _NowCalc(Requires: #include <Date.au3>) |Returns the current Date and Time in format YYYY/MM/DD HH:MM:SS for use in date calculations 
Function _NowCalcDate(Requires: #include <Date.au3>) |Returns the current Date in format YYYY/MM/DD 
Function _NowDate(Requires: #include <Date.au3>) |Returns the current Date in the Pc's format 
Function _NowTime(Requires: #include <Date.au3>) |Returns the current Time in the requested format , [$sType = 3])
Function _PathFull(Requires: #include <File.au3>) |Creates a path based on the relative path you provide. The newly created absolute path is returned , $sRelativePath [, $sBasePath = @WorkingDir])
Function _PathGetRelative(Requires: #include <File.au3>) |Returns the relative path to a directory , $sFrom, $sTo)
Function _PathMake(Requires: #include <File.au3>) |Creates a path from drive, directory, file name and file extension parts , $sDrive, $sDir, $sFileName, $sExtension)
Function _PathSplit(Requires: #include <File.au3>) |Splits a path into the drive, directory, file name and file extension parts. An empty string is set if a part is missing , $sFilePath, ByRef $sDrive, ByRef $sDir, ByRef $sFileName, ByRef $sExtension)
Function _ProcessGetName(Requires: #include <Process.au3>) |Returns a string containing the process name that belongs to a given PID , $iPID)
Function _ProcessGetPriority(Requires: #include <Process.au3>) |Get the priority of an open process , $vProcess)
Function _Radian(Requires: #include <Math.au3>) |Converts degrees to radians , $iDegrees)
Function _ReplaceStringInFile(Requires: #include <File.au3>) |Replaces substrings in a file , $sFilePath, $sSearchString, $sReplaceString [, $iCaseSensitive = 0 [, $iOccurance = 1]])
Function _RunDos(Requires: #include <Process.au3>) |Executes a DOS command in a hidden command window , $sCommand)
Function _ScreenCapture_Capture(Requires: #include <ScreenCapture.au3>) |Captures a region of the screen , [$sFileName = "" [, $iLeft = 0 [, $iTop = 0 [, $iRight = -1 [, $iBottom = -1 [, $bCursor = True]]]]]])
Function _ScreenCapture_CaptureWnd(Requires: #include <ScreenCapture.au3>) |Captures a screen shot of a specified window or controlID , $sFileName, $hWnd [, $iLeft = 0 [, $iTop = 0 [, $iRight = -1 [, $iBottom = -1 [, $bCursor = True]]]]])
Function _ScreenCapture_SaveImage(Requires: #include <ScreenCapture.au3>) |Saves an image to file , $sFileName, $hBitmap [, $bFreeBmp = True])
Function _ScreenCapture_SetBMPFormat(Requires: #include <ScreenCapture.au3>) |Sets the bit format that will be used for BMP screen captures , $iFormat)
Function _ScreenCapture_SetJPGQuality(Requires: #include <ScreenCapture.au3>) |Sets the quality level that will be used for JPEG screen captures , $iQuality)
Function _ScreenCapture_SetTIFColorDepth(Requires: #include <ScreenCapture.au3>) |Sets the color depth used for TIFF screen captures , $iDepth)
Function _ScreenCapture_SetTIFCompression(Requires: #include <ScreenCapture.au3>) |Sets the compression used for TIFF screen captures , $iCompress)
Function _Security__AdjustTokenPrivileges(Requires: #include <Security.au3>) |Enables or disables privileges in the specified access token , $hToken, $bDisableAll, $tNewState, $iBufferLen [, $tPrevState = 0 [, $pRequired = 0]])
Function _Security__CreateProcessWithToken(Requires: #include <Security.au3>) |Creates a new process and its primary thread running in the security context of the specified token , $hToken, $iLogonFlags, $sCommandLine, $iCreationFlags, $sCurDir, $tSTARTUPINFO, $tPROCESS_INFORMATION)
Function _Security__DuplicateTokenEx(Requires: #include <Security.au3>) |Creates a new access token that duplicates an existing token , $hExistingToken, $iDesiredAccess, $iImpersonationLevel, $iTokenType)
Function _Security__GetAccountSid(SID) |Retrieves the security identifier for an account (Requires: #include <Security.au3>), $sAccount [, $sSystem = ""])
Function _Security__GetLengthSid(Requires: #include <Security.au3>) |Returns the length, in bytes, of a valid SID , $pSID)
Function _Security__GetTokenInformation(Requires: #include <Security.au3>) |Retrieves a specified type of information about an access token , $hToken, $iClass)
Function _Security__ImpersonateSelf(Requires: #include <Security.au3>) |Obtains an access token that impersonates the calling process security context , [$iLevel = $SECURITYIMPERSONATION])
Function _Security__IsValidSid(Requires: #include <Security.au3>) |Validates a SID , $pSID)
Function _Security__LookupAccountName(SID) |Retrieves a security identifier for the account and the name of the domain (Requires: #include <Security.au3>), $sAccount [, $sSystem = ""])
Function _Security__LookupAccountSid(Requires: #include <Security.au3>) |Retrieves the name of the account for a SID , $vSID [, $sSystem = ""])
Function _Security__LookupPrivilegeValue(LUID) |Retrieves the locally unique identifier for a privilege value in form of 64bit integer (Requires: #include <Security.au3>), $sSystem, $sName)
Function _Security__OpenProcessToken(Requires: #include <Security.au3>) |Returns the access token associated with a process , $hProcess, $iAccess)
Function _Security__OpenThreadToken(Requires: #include <Security.au3>) |Opens the access token associated with a thread , $iAccess [, $hThread = 0 [, $bOpenAsSelf = False]])
Function _Security__OpenThreadTokenEx(Requires: #include <Security.au3>) |Opens the access token associated with a thread, impersonating the client's security context if required , $iAccess [, $hThread = 0 [, $bOpenAsSelf = False]])
Function _Security__SetPrivilege(Requires: #include <Security.au3>) |Enables or disables a local token privilege , $hToken, $sPrivilege, $bEnable)
Function _Security__SetTokenInformation(Requires: #include <Security.au3>) |Sets various types of information for a specified access token , $hToken, $iTokenInformation, $vTokenInformation, $iTokenInformationLength)
Function _Security__SidToStringSid(Requires: #include <Security.au3>) |Converts a binary SID to a string , $pSID)
Function _Security__SidTypeStr(Requires: #include <Security.au3>) |Converts a SID type to string form , $iType)
Function _Security__StringSidToSid(Requires: #include <Security.au3>) |Converts a String SID to a binary SID , $sSID)
Function _SendMessage(Requires: #include <SendMessage.au3>) |Wrapper for commonly used DLL Call , $hWnd, $iMsg [, $wParam = 0 [, $lParam = 0 [, $iReturn = 0 [, $wParamType = "wparam" [, $lParamType = "lparam" [, $sReturnType = "lresult"]]]]]])
Function _SendMessageA(Force Ansi Call) |Send a Message to a Window/Control (Requires: #include <SendMessage.au3>), $hWnd, $iMsg [, $wParam = 0 [, $lParam = 0 [, $iReturn = 0 [, $wParamType = "wparam" [, $lParamType = "lparam" [, $sReturnType = "lresult"]]]]]])
Function _SetDate(Requires: #include <Date.au3>) |Sets the current date of the system , $iDay [, $iMonth = 0 [, $iYear = 0]])
Function _SetTime(Requires: #include <Date.au3>) |Sets the current time of the system , $iHour, $iMinute [, $iSecond = 0 [, $iMSeconds = 0]])
Function _Singleton(Requires: #include <Misc.au3>) |Enforce a design paradigm where only one instance of the script may be running , $sOccurrenceName [, $iFlag = 0])
Function _SoundClose(Requires: #include <Sound.au3>) |Closes a sound previously opened with _SoundOpen , $aSndID)
Function _SoundLength(Requires: #include <Sound.au3>) |Returns the length of the soundfile , $aSndID [, $iMode = 1])
Function _SoundOpen(Requires: #include <Sound.au3>) |Opens a sound file for use with other _Sound functions , $sFilePath)
Function _SoundPause(Requires: #include <Sound.au3>) |Pause a playing sound , $aSndID)
Function _SoundPlay(Requires: #include <Sound.au3>) |Play a sound file , $aSndID [, $iWait = 0])
Function _SoundPos(Requires: #include <Sound.au3>) |Returns the current position of the sound , $aSndID [, $iMode = 1])
Function _SoundResume(Requires: #include <Sound.au3>) |Resume a paused sound , $aSndID)
Function _SoundSeek(Requires: #include <Sound.au3>) |Seeks the sound to the specified position , ByRef $aSndID, $iHour, $iMin, $iSec)
Function _SoundStatus(Requires: #include <Sound.au3>) |Returns the status of the sound , $aSndID)
Function _SoundStop(Requires: #include <Sound.au3>) |Stop a playing sound , ByRef $aSndID)
Function _SQLite_Changes(Requires: #include <SQLite.au3>) |Returns the number of database rows that were changed by the most recently completed statement with this connection , [$hDB = -1])
Function _SQLite_Close(Requires: #include <SQLite.au3>) |Close an open database , [$hDB = -1])
Function _SQLite_Display2DResult(Requires: #include <SQLite.au3>) |Returns or prints to Console a formated display of a 2Dimensional array , $aResult [, $iCellWidth = 0 [, $bReturn = False]])
Function _SQLite_Encode(Requires: #include <SQLite.au3>) |Binary encodes a string, number or binary data for use as BLOB in SQLite statements , $vData)
Function _SQLite_ErrCode(numeric) |Returns last error code (Requires: #include <SQLite.au3>), [$hDB = -1])
Function _SQLite_ErrMsg(Requires: #include <SQLite.au3>) |Returns a string describing in english the error condition for the most recent sqlite3_* API call , [$hDB = -1])
Function _SQLite_Escape(Requires: #include <SQLite.au3>) |Escapes a string or number for use as TEXT in SQLite statements , $sString [, $iBuffSize = Default])
Function _SQLite_Exec(Requires: #include <SQLite.au3>) |Executes a SQLite query, does not handle results , $hDB, $sSQL [, $sCallBack = ""])
Function _SQLite_FastEncode(exclusively) |Fast encodes binary data for use in SQLite statements (Requires: #include <SQLite.au3>), $vData)
Function _SQLite_FastEscape(Requires: #include <SQLite.au3>) |Fast escapes a string or number for use as TEXT in SQLite statements , $sString)
Function _SQLite_FetchData() |Fetches 1 row of data from a _SQLite_Query based query (Requires: #include <SQLite.au3>), $hQuery, ByRef $aRow [, $bBinary = False [, $bDoNotFinalize = False [, $iColumns = 0]]])
Function _SQLite_FetchNames() |Read out the Column names of a _SQLite_Query based query (Requires: #include <SQLite.au3>), $hQuery, ByRef $aNames)
Function _SQLite_GetTable(Requires: #include <SQLite.au3>) |Passes Out a 1Dimensional Array Containing Tablenames and Data of Executed Query , $hDB, $sSQL, ByRef $aResult, ByRef $iRows, ByRef $iColumns [, $iCharSize = -1])
Function _SQLite_GetTable2d(Requires: #include <SQLite.au3>) |Passes out a 2Dimensional array containing column names and data of executed query , $hDB, $sSQL, ByRef $aResult, ByRef $iRows, ByRef $iColumns [, $iCharSize = -1 [, $bSwichDimensions = False]])
Function _SQLite_LastInsertRowID(Requires: #include <SQLite.au3>) |Returns the ROWID of the most recent insert in the database by this connection , [$hDB = -1])
Function _SQLite_LibVersion(Requires: #include <SQLite.au3>) |Returns the version number of the library 
Function _SQLite_Open(Requires: #include <SQLite.au3>) |Opens/creates a SQLite database , [$sDatabase_Filename = ":memory:" [, $iAccessMode = Default [, $iEncoding = $SQLITE_ENCODING_UTF8]]])
Function _SQLite_Query(Requires: #include <SQLite.au3>) |Prepares a SQLite Query , $hDB, $sSQL, ByRef $hQuery)
Function _SQLite_QueryFinalize() |Finalizes an _SQLite_Query based query. The query is interrupted (Requires: #include <SQLite.au3>), $hQuery)
Function _SQLite_QueryReset() |Reset a _SQLite_Query based query (Requires: #include <SQLite.au3>), $hQuery)
Function _SQLite_QuerySingleRow(Requires: #include <SQLite.au3>) |Read out the first row of the result from the specified query , $hDB, $sSQL, ByRef $aRow)
Function _SQLite_SafeMode(Requires: #include <SQLite.au3>) |Disable or Enable Safe mode , $bSafeModeState)
Function _SQLite_SetTimeout(Requires: #include <SQLite.au3>) |Sets timeout for busy handler , [$hDB = -1 [, $iTimeout = 1000]])
Function _SQLite_Shutdown(Requires: #include <SQLite.au3>) |Unloads SQLite.dll 
Function _SQLite_SQLiteExe(Requires: #include <SQLite.au3>) |Executes commands in sqlite3.exe , $sDatabaseFile, $sInput, ByRef $sOutput [, $sSQLiteExeFilename = "sqlite3.exe" [, $bDebug = False]])
Function _SQLite_Startup(Requires: #include <SQLite.au3>) |Loads SQLite3.dll , [$sDll_Filename = "" [, $bUTF8ErrorMsg = False [, $iForceLocal = 0 [, $hPrintCallback = $__g_hPrintCallback_SQLite]]]])
Function _SQLite_TotalChanges(including via triggers and foreign keys) |Returns number of all changes from start of connection (Requires: #include <SQLite.au3>), [$hDB = -1])
Function _StringBetween(Requires: #include <String.au3>) |Find strings between two string delimiters , $sString, $sStart, $sEnd [, $iMode = $STR_ENDISSTART [, $bCase = False]])
Function _StringExplode(Requires: #include <String.au3>) |Splits up a string into substrings depending on the given delimiters as PHP Explode v5 , $sString, $sDelimiter [, $iLimit = 0])
Function _StringInsert(Requires: #include <String.au3>) |Inserts a string within another string , $sString, $sInsertString, $iPosition)
Function _StringProper(Requires: #include <String.au3>) |Changes a string to proper case, same as the =Proper function in Excel , $sString)
Function _StringRepeat(Requires: #include <String.au3>) |Repeats a string a specified number of times , $sString, $iRepeatCount)
Function _StringTitleCase(Requires: #include <String.au3>) |Changes a string to a title case string , $sString)
Function _StringToHex(Requires: #include <String.au3>) |Convert a string to a hex string , $sString)
Function _TCPIpToName(s) |Resolves IP address to Hostname (Requires: #include <Inet.au3>), $sIp [, $iOption = 0 [, $hDll = "Ws2_32.dll"]])
Function _TempFile(Requires: #include <File.au3>) |Generate a name for a temporary file. The file is guaranteed not to exist yet , [$sDirectoryName = @TempDir [, $sFilePrefix = "~" [, $sFileExtension = ".tmp" [, $iRandomLength = 7]]]])
Function _TicksToTime(Requires: #include <Date.au3>) |Converts the specified tick amount to hours, minutes and seconds , $iTicks, ByRef $iHours, ByRef $iMins, ByRef $iSecs)
Function _Timer_Diff(Requires: #include <Timers.au3>) |Returns the difference in time from a previous call to _Timer_Init , $iTimeStamp)
Function _Timer_GetIdleTime(i.e. KYBD/Mouse) |Returns the number of ticks since last user activity (Requires: #include <Timers.au3>)
Function _Timer_GetTimerID(Requires: #include <Timers.au3>) |Returns the Timer ID from $wParam , $wParam)
Function _Timer_Init(in milliseconds) |Returns a timestamp (Requires: #include <Timers.au3>)
Function _Timer_KillAllTimers(Requires: #include <Timers.au3>) |Destroys all the timers , $hWnd)
Function _Timer_KillTimer(Requires: #include <Timers.au3>) |Destroys the specified timer , $hWnd, $iTimerID)
Function _Timer_SetTimer(Requires: #include <Timers.au3>) |Creates a timer with the specified time-out value , $hWnd [, $iElapse = 250 [, $sTimerFunc = "" [, $iTimerID = -1]]])
Function _TimeToTicks(Requires: #include <Date.au3>) |Converts the specified hours, minutes, and seconds to ticks , [$iHours = @HOUR [, $iMins = @MIN [, $iSecs = @SEC]]])
Function _VersionCompare(Requires: #include <Misc.au3>) |Compares two file versions for equality , $sVersion1, $sVersion2)
Function _viClose(Requires: #include <Visa.au3>) |Closes a VISA connection to an Instrument/Device , $hSession)
Function _viExecCommand(GPIB / TCP) |Send a Command/Query to an Instrument/Device through the VISA interface (Requires: #include <Visa.au3>), $hSession, $sCommand [, $iTimeoutMS = -1 [, $sMode = @LF]])
Function _viFindGpib(GPIB / TCP) |Send a Command/Query to an Instrument/Device through the VISA interface (Requires: #include <Visa.au3>), ByRef $aDescriptorList, ByRef $aIDNList [, $iShow_Search_Results = 0])
Function _viGpibBusReset(Requires: #include <Visa.au3>) |GPIB BUS "reset": Use this function when the GPIB BUS gets stuck for some reason. You might be lucky and resolve the problem by calling this function 
Function _viGTL(Requires: #include <Visa.au3>) |Go To Local mode: Instruments that accept this command will exit the "Remote Control mode" and go to "Local mode". If the instrument is already in "Local mode" this is simply ignored. Normally, if an instrument does not support this command it will simply stay in the "Remote Control mode" , $hSession)
Function _viInteractiveControl(Requires: #include <Visa.au3>) |Interactive VISA control to test your SCPI commands , [$sCommand_Save_FilePath = ""])
Function _viOpen(Requires: #include <Visa.au3>) |Opens a VISA connection to an Instrument/Device , $sVisa_Address [, $sVisa_Secondary_Address = 0])
Function _viSetAttribute(Requires: #include <Visa.au3>) |Set any VISA attribute This function, which is called by _viSetTimeout, can ALSO be used to set the other VISA specific attributes. Read the VISA documentation for more information and a list of VISA attributes and their corresponding values , $hSession, $iAttribute, $iValue)
Function _viSetTimeout(Requires: #include <Visa.au3>) |Sets the VISA timeout in MILISECONDS , $hSession, $iTimeoutMS)
Function _WeekNumberISO(Requires: #include <Date.au3>) |Calculate the weeknumber of a given date , [$iYear = @YEAR [, $iMonth = @MON [, $iDay = @MDAY]]])
Function _WinAPI_AbortPath(Requires: #include <WinAPIGdi.au3>) |Closes and discards any paths in the specified device context , $hDC)
Function _WinAPI_ActivateKeyboardLayout(Requires: #include <WinAPISys.au3>) |Sets the input locale identifier for the calling thread or the current process , $hLocale [, $iFlag = 0])
Function _WinAPI_AddClipboardFormatListener(Requires: #include <WinAPISys.au3>) |Places the given window in the system-maintained clipboard format listener list , $hWnd)
Function _WinAPI_AddFontMemResourceEx(Requires: #include <WinAPIGdi.au3>) |Adds the font resource from a memory image to the system , $pData, $iSize)
Function _WinAPI_AddFontResourceEx(Requires: #include <WinAPIGdi.au3>) |Adds the font resource from the specified file to the system font table , $sFont [, $iFlag = 0 [, $bNotify = False]])
Function _WinAPI_AddIconOverlay(Requires: #include <WinAPIGdi.au3>) |Creates an icon by merging the source icon and overlay mask , $hIcon, $hOverlay)
Function _WinAPI_AddIconTransparency(Requires: #include <WinAPIRes.au3>) |Adds a transparency to the specified 32 bits-per-pixel icon , $hIcon [, $iPercent = 50 [, $bDelete = False]])
Function _WinAPI_AddMRUString(MRU) |Adds a string to the top of the most recently used list (Requires: #include <WinAPIReg.au3>), $hMRU, $sStr)
Function _WinAPI_AdjustBitmap(DDB) |Creates a new device-depended bitmap from the source bitmap with new dimensions and color adjustment (Requires: #include <WinAPIGdi.au3>), $hBitmap, $iWidth, $iHeight [, $iMode = 3 [, $tAdjustment = 0]])
Function _WinAPI_AdjustTokenPrivileges(Requires: #include <WinAPIProc.au3>) |Enables or disables privileges in the specified access token , $hToken, $aPrivileges, $iAttributes, ByRef $aAdjust)
Function _WinAPI_AdjustWindowRectEx(Requires: #include <WinAPISys.au3>) |Calculates the required size of the window rectangle, based on the desired size of the client rectangle , ByRef $tRECT, $iStyle [, $iExStyle = 0 [, $bMenu = False]])
Function _WinAPI_AlphaBlend(Requires: #include <WinAPIGdi.au3>) |Displays bitmaps that have transparent or semitransparent pixels , $hDestDC, $iXDest, $iYDest, $iWidthDest, $iHeightDest, $hSrcDC, $iXSrc, $iYSrc, $iWidthSrc, $iHeightSrc, $iAlpha [, $bAlpha = False])
Function _WinAPI_AngleArc(Requires: #include <WinAPIGdi.au3>) |Draws a line segment and an arc , $hDC, $iX, $iY, $iRadius, $nStartAngle, $nSweepAngle)
Function _WinAPI_AnimateWindow(Requires: #include <WinAPISys.au3>) |Enables you to produce special effects when showing or hiding windows , $hWnd, $iFlags [, $iDuration = 1000])
Function _WinAPI_Arc(Requires: #include <WinAPIGdi.au3>) |Draws an elliptical arc , $hDC, $tRECT, $iXStartArc, $iYStartArc, $iXEndArc, $iYEndArc)
Function _WinAPI_ArcTo(Requires: #include <WinAPIGdi.au3>) |Draws an elliptical arc , $hDC, $tRECT, $iXRadial1, $iYRadial1, $iXRadial2, $iYRadial2)
Function _WinAPI_ArrayToStruct(Requires: #include <WinAPIMisc.au3>) |Converts an array of strings to the structure , Const ByRef $aData [, $iStart = 0 [, $iEnd = -1]])
Function _WinAPI_AssignProcessToJobObject(Requires: #include <WinAPIProc.au3>) |Assigns a process to an existing job object , $hJob, $hProcess)
Function _WinAPI_AssocGetPerceivedType(Requires: #include <WinAPIReg.au3>) |Retrieves a file's perceived type based on its extension , $sExt)
Function _WinAPI_AssocQueryString(Requires: #include <WinAPIReg.au3>) |Searches for and retrieves a file or protocol association-related string from the registry , $sAssoc, $iType [, $iFlags = 0 [, $sExtra = '']])
Function _WinAPI_AttachConsole(Requires: #include <WinAPI.au3>) |Attaches the calling process to the console of the specified process , [$iPID = -1])
Function _WinAPI_AttachThreadInput(Requires: #include <WinAPI.au3>) |Attaches the input processing mechanism of one thread to that of another thread , $iAttach, $iAttachTo, $bAttach)
Function _WinAPI_BackupRead(Requires: #include <WinAPIFiles.au3>) |Backs up a file or directory, including the security information , $hFile, $pBuffer, $iLength, ByRef $iBytes, ByRef $pContext [, $bSecurity = False])
Function _WinAPI_BackupReadAbort() |Finishes the use of _WinAPI_BackupRead on the handle (Requires: #include <WinAPIFiles.au3>), ByRef $pContext)
Function _WinAPI_BackupSeek() |Seeks forward in a data stream initially accessed by using the _WinAPI_BackupRead or _WinAPI_BackupWrite() function (Requires: #include <WinAPIFiles.au3>), $hFile, $iSeek, ByRef $iBytes, ByRef $pContext)
Function _WinAPI_BackupWrite() |Restore a file or directory that was backed up using _WinAPI_BackupRead (Requires: #include <WinAPIFiles.au3>), $hFile, $pBuffer, $iLength, ByRef $iBytes, ByRef $pContext [, $bSecurity = False])
Function _WinAPI_BackupWriteAbort() |Finishes the use of _WinAPI_BackupWrite on the handle (Requires: #include <WinAPIFiles.au3>), ByRef $pContext)
Function _WinAPI_Beep(Requires: #include <WinAPI.au3>) |Generates simple tones on the speaker , [$iFreq = 500 [, $iDuration = 1000]])
Function _WinAPI_BeginBufferedPaint(Requires: #include <WinAPITheme.au3>) |Begins a buffered paint operation , $hDC, $tTarget, ByRef $hNewDC [, $iFormat = 0 [, $iFlags = 0 [, $tExclude = 0 [, $iAlpha = -1]]]])
Function _WinAPI_BeginDeferWindowPos(Requires: #include <WinAPISys.au3>) |Allocates memory for a multiple-window-position structure , [$iAmount = 1])
Function _WinAPI_BeginPaint(Requires: #include <WinAPIGdi.au3>) |Prepares the specified window for painting , $hWnd, ByRef $tPAINTSTRUCT)
Function _WinAPI_BeginPath(Requires: #include <WinAPIGdi.au3>) |Opens a path bracket in the specified device context , $hDC)
Function _WinAPI_BeginUpdateResource(Requires: #include <WinAPIRes.au3>) |Retrieves a handle that can be used to add, delete, or replace resources in a binary module , $sFilePath [, $bDelete = False])
Function _WinAPI_BitBlt(Requires: #include <WinAPI.au3>) |Performs a bit-block transfer of color data , $hDestDC, $iXDest, $iYDest, $iWidth, $iHeight, $hSrcDC, $iXSrc, $iYSrc, $iROP)
Function _WinAPI_BringWindowToTop(Requires: #include <WinAPISys.au3>) |Brings the specified window to the top of the Z order , $hWnd)
Function _WinAPI_BroadcastSystemMessage(Requires: #include <WinAPISys.au3>) |Sends a message to the specified recipients , $iMsg [, $wParam = 0 [, $lParam = 0 [, $iFlags = 0 [, $iRecipients = 0]]]])
Function _WinAPI_BrowseForFolderDlg(Requires: #include <WinAPIDlg.au3>) |Displays a dialog box that enables the user to select a Shell folder , [$sRoot = '' [, $sText = '' [, $iFlags = 0 [, $pBrowseProc = 0 [, $lParam = 0 [, $hParent = 0]]]]]])
Function _WinAPI_BufferedPaintClear(Requires: #include <WinAPITheme.au3>) |Clears a specified rectangle in the buffer to ARGB = {0,0,0,0} , $hBP [, $tRECT = 0])
Function _WinAPI_BufferedPaintInit(Requires: #include <WinAPITheme.au3>) |Initialize buffered painting for the current thread 
Function _WinAPI_BufferedPaintSetAlpha(Requires: #include <WinAPITheme.au3>) |Sets the alpha to a specified value in a given rectangle , $hBP [, $iAlpha = 255 [, $tRECT = 0]])
Function _WinAPI_BufferedPaintUnInit(Requires: #include <WinAPITheme.au3>) |Closes down buffered painting for the current thread 
Function _WinAPI_CallNextHookEx(Requires: #include <WinAPI.au3>) |Passes the hook information to the next hook procedure in the current hook chain , $hHook, $iCode, $wParam, $lParam)
Function _WinAPI_CallWindowProc(Requires: #include <WinAPI.au3>) |Passes the hook information to the next hook procedure in the current hook chain , $pPrevWndFunc, $hWnd, $iMsg, $wParam, $lParam)
Function _WinAPI_CallWindowProcW(Requires: #include <WinAPISys.au3>) |Passes message information to the specified window procedure , $pPrevWndProc, $hWnd, $iMsg, $wParam, $lParam)
Function _WinAPI_CascadeWindows(Requires: #include <WinAPISys.au3>) |Cascades the specified child windows of the specified parent window , $aWnds [, $tRECT = 0 [, $hParent = 0 [, $iFlags = 0 [, $iStart = 0 [, $iEnd = -1]]]]])
Function _WinAPI_ChangeWindowMessageFilterEx(UIPI) |Modifies the User Interface Privilege Isolation message filter for a specified window (Requires: #include <WinAPISys.au3>), $hWnd, $iMsg, $iAction)
Function _WinAPI_CharToOem(Requires: #include <WinAPIMisc.au3>) |Converts a string into the OEM-defined character set , $sStr)
Function _WinAPI_ChildWindowFromPointEx(Requires: #include <WinAPISys.au3>) |Determines which, if any, of the child windows belonging to the specified parent window contains the specified point , $hWnd, $tPOINT [, $iFlags = 0])
Function _WinAPI_ClientToScreen(Requires: #include <WinAPI.au3>) |Converts the client coordinates of a specified point to screen coordinates , $hWnd, ByRef $tPoint)
Function _WinAPI_ClipCursor(Requires: #include <WinAPIRes.au3>) |Confines the cursor to a rectangular area on the screen , $tRECT)
Function _WinAPI_CloseDesktop(Requires: #include <WinAPISys.au3>) |Closes an open handle to a desktop object , $hDesktop)
Function _WinAPI_CloseEnhMetaFile(Requires: #include <WinAPIGdi.au3>) |Closes an enhanced-metafile device context and returns a handle that identifies an enhanced-format metafile , $hDC)
Function _WinAPI_CloseFigure(Requires: #include <WinAPIGdi.au3>) |Closes an open figure in a path , $hDC)
Function _WinAPI_CloseHandle(Requires: #include <WinAPI.au3>) |Closes an open object handle , $hObject)
Function _WinAPI_CloseThemeData(Requires: #include <WinAPITheme.au3>) |Closes the theme data handle , $hTheme)
Function _WinAPI_CloseWindow(but does not destroy) |Minimizes the specified window (Requires: #include <WinAPISys.au3>), $hWnd)
Function _WinAPI_CloseWindowStation(Requires: #include <WinAPISys.au3>) |Closes an open window station handle , $hStation)
Function _WinAPI_CLSIDFromProgID(Requires: #include <WinAPICom.au3>) |Looks up a CLSID in the registry, given a ProgID , $sProgID)
Function _WinAPI_CoInitialize(Requires: #include <WinAPICom.au3>) |Initializes the COM library for use by the calling process , [$iFlags = 0])
Function _WinAPI_ColorAdjustLuma(Requires: #include <WinAPIGdi.au3>) |Changes the luminance of a RGB value , $iRGB, $iPercent [, $bScale = True])
Function _WinAPI_ColorHLSToRGB(HLS) |Converts colors from hue-luminance-saturation to RGB format (Requires: #include <WinAPIGdi.au3>), $iHue, $iLuminance, $iSaturation)
Function _WinAPI_ColorRGBToHLS(HLS) |Converts colors from RGB to hue-luminance-saturation format (Requires: #include <WinAPIGdi.au3>), $iRGB, ByRef $iHue, ByRef $iLuminance, ByRef $iSaturation)
Function _WinAPI_CombineRgn(Requires: #include <WinAPI.au3>) |Combines two regions and stores the result in a third region , $hRgnDest, $hRgnSrc1, $hRgnSrc2, $iCombineMode)
Function _WinAPI_CombineTransform(Requires: #include <WinAPIGdi.au3>) |Concatenates two world-space to page-space transformations , $tXFORM1, $tXFORM2)
Function _WinAPI_CommandLineToArgv(Requires: #include <WinAPIShPath.au3>) |Parses a command-line string and returns an array of the command-line arguments , $sCmd)
Function _WinAPI_CommDlgExtendedError(Requires: #include <WinAPI.au3>) |Returns a common dialog box error string. This string indicates the most recent error to occur during the execution of one of the common dialog box functions 
Function _WinAPI_CommDlgExtendedErrorEx(Requires: #include <WinAPIDlg.au3>) |Returns a common dialog box error code 
Function _WinAPI_CompareString(Requires: #include <WinAPILocale.au3>) |Compares two character strings for a specified locale , $iLCID, $sString1, $sString2 [, $iFlags = 0])
Function _WinAPI_CompressBitmapBits(Requires: #include <WinAPIGdi.au3>) |Creates a compressed data block from the specified bitmap , $hBitmap, ByRef $pBuffer [, $iCompression = 0 [, $iQuality = 100]])
Function _WinAPI_CompressBuffer(Requires: #include <WinAPISys.au3>) |Compresses a buffer with specified compression format and engine type , $pUncompressedBuffer, $iUncompressedSize, $pCompressedBuffer, $iCompressedSize [, $iFormatAndEngine = 0x0002])
Function _WinAPI_ComputeCrc32(Requires: #include <WinAPISys.au3>) |Calculates the CRC32 checksum of a block of memory , $pMemory, $iLength)
Function _WinAPI_ConfirmCredentials(Requires: #include <WinAPIDlg.au3>) |Confirms the validity of the credential harvested , $sTarget, $bConfirm)
Function _WinAPI_CopyBitmap(DIB) |Creates a duplicate of a specified bitmap with a device-independent bitmap section (Requires: #include <WinAPIGdi.au3>), $hBitmap)
Function _WinAPI_CopyCursor(Requires: #include <WinAPIRes.au3>) |Creates a duplicate of a specified cursor , $hCursor)
Function _WinAPI_CopyEnhMetaFile(Requires: #include <WinAPIGdi.au3>) |Copies the contents of an enhanced-format metafile to a specified file , $hEmf [, $sFilePath = ''])
Function _WinAPI_CopyFileEx(Requires: #include <WinAPIFiles.au3>) |Copies an existing file to a new file, notifying the application of its progress through a callback function , $sExistingFile, $sNewFile [, $iFlags = 0 [, $pProgressProc = 0 [, $pData = 0]]])
Function _WinAPI_CopyIcon(Requires: #include <WinAPI.au3>) |Copies the specified icon from another module , $hIcon)
Function _WinAPI_CopyImage(icon, cursor, or bitmap) |Creates a new image and copies the attributes of the specified image to the new one (Requires: #include <WinAPIGdi.au3>), $hImage [, $iType = 0 [, $iXDesiredPixels = 0 [, $iYDesiredPixels = 0 [, $iFlags = 0]]]])
Function _WinAPI_CopyRect(Requires: #include <WinAPIGdi.au3>) |Copies the coordinates of one rectangle to another , $tRECT)
Function _WinAPI_CopyStruct(Requires: #include <WinAPIMisc.au3>) |Creates a duplicate of a specified structure , $tStruct [, $sStruct = ''])
Function _WinAPI_CoTaskMemAlloc(Requires: #include <WinAPICom.au3>) |Allocates a block of task memory , $iSize)
Function _WinAPI_CoTaskMemFree(Requires: #include <WinAPICom.au3>) |Frees a block of task memory , $pMemory)
Function _WinAPI_CoTaskMemRealloc(Requires: #include <WinAPICom.au3>) |Changes the size of a previously allocated block of task memory , $pMemory, $iSize)
Function _WinAPI_CoUninitialize(Requires: #include <WinAPICom.au3>) |Closes the COM library on the current process 
Function _WinAPI_Create32BitHBITMAP(Requires: #include <WinAPIGdi.au3>) |Creates a 32 bits-per-pixel bitmap from the specified icon , $hIcon [, $bDib = False [, $bDelete = False]])
Function _WinAPI_Create32BitHICON(Requires: #include <WinAPIGdi.au3>) |Converts an icon to a 32 bits-per-pixel format and copies to the new icon , $hIcon [, $bDelete = False])
Function _WinAPI_CreateANDBitmap(DIB) |Creates AND bitmask device-independent bitmap from the specified bitmap (Requires: #include <WinAPIGdi.au3>), $hBitmap)
Function _WinAPI_CreateBitmap(Requires: #include <WinAPI.au3>) |Creates a bitmap with the specified width, height, and color format , $iWidth, $iHeight [, $iPlanes = 1 [, $iBitsPerPel = 1 [, $pBits = 0]]])
Function _WinAPI_CreateBitmapIndirect(color planes and bits-per-pixel) |Creates a bitmap with the specified width, height, and color format (Requires: #include <WinAPIGdi.au3>), $tBITMAP)
Function _WinAPI_CreateBrushIndirect(Requires: #include <WinAPIGdi.au3>) |Creates a logical brush that has the specified style, color, and pattern , $iStyle, $iRGB [, $iHatch = 0])
Function _WinAPI_CreateBuffer(Requires: #include <WinAPISys.au3>) |Allocates a block of memory from the internal library heap , $iLength [, $pBuffer = 0 [, $bAbort = True]])
Function _WinAPI_CreateBufferFromStruct(Requires: #include <WinAPISys.au3>) |Allocates a block of memory from the internal library heap and initializes it with the structure's data , $tStruct [, $pBuffer = 0 [, $bAbort = True]])
Function _WinAPI_CreateCaret(Requires: #include <WinAPIRes.au3>) |Creates a new shape for the system caret and assigns ownership of the caret to the specified window , $hWnd, $hBitmap [, $iWidth = 0 [, $iHeight = 0]])
Function _WinAPI_CreateColorAdjustment(Requires: #include <WinAPIGdi.au3>) |Creates $tagCOLORADJUSTMENT structure specifies the color adjustment , [$iFlags = 0 [, $iIlluminant = 0 [, $iGammaR = 10000 [, $iGammaG = 10000 [, $iGammaB = 10000 [, $iBlack = 0 [, $iWhite = 10000 [, $iContrast = 0 [, $iBrightness = 0 [, $iColorfulness = 0 [, $iTint = 0]]]]]]]]]]])
Function _WinAPI_CreateCompatibleBitmap(Requires: #include <WinAPI.au3>) |Creates a bitmap compatible with the specified device context , $hDC, $iWidth, $iHeight)
Function _WinAPI_CreateCompatibleBitmapEx(Requires: #include <WinAPIGdi.au3>) |Creates a bitmap compatible with the device and fills it the specified color , $hDC, $iWidth, $iHeight, $iRGB)
Function _WinAPI_CreateCompatibleDC(Requires: #include <WinAPI.au3>) |Creates a memory device context compatible with the specified device , $hDC)
Function _WinAPI_CreateDesktop(Requires: #include <WinAPISys.au3>) |Creates a new desktop, associates it with the current window station of the calling process , $sName [, $iAccess = 0x0002 [, $iFlags = 0 [, $iHeap = 0 [, $tSecurity = 0]]]])
Function _WinAPI_CreateDIB(DIB) |Creates an uncompressed device-independent bitmap with the specified width, height, and color depth (Requires: #include <WinAPIGdi.au3>), $iWidth, $iHeight [, $iBitsPerPel = 32 [, $tColorTable = 0 [, $iColorCount = 0]]])
Function _WinAPI_CreateDIBColorTable(Requires: #include <WinAPIGdi.au3>) |Creates RGB color table from the specified array of colors , Const ByRef $aColorTable [, $iStart = 0 [, $iEnd = -1]])
Function _WinAPI_CreateDIBitmap(DDB) |Creates a compatible bitmap from a DIB and, optionally, sets the bitmap bits (Requires: #include <WinAPIGdi.au3>), $hDC, $tBITMAPINFO, $iUsage [, $pBits = 0])
Function _WinAPI_CreateDIBSection(Requires: #include <WinAPIGdi.au3>) |Creates a DIB that applications can write to directly , $hDC, $tBITMAPINFO, $iUsage, ByRef $pBits [, $hSection = 0 [, $iOffset = 0]])
Function _WinAPI_CreateDirectory(Requires: #include <WinAPIFiles.au3>) |Creates a new directory , $sDir [, $tSecurity = 0])
Function _WinAPI_CreateDirectoryEx(Requires: #include <WinAPIFiles.au3>) |Creates a new directory with the attributes of a specified template directory , $sNewDir, $sTemplateDir [, $tSecurity = 0])
Function _WinAPI_CreateEllipticRgn(Requires: #include <WinAPIGdi.au3>) |Creates an elliptical region , $tRECT)
Function _WinAPI_CreateEmptyIcon(Requires: #include <WinAPIGdi.au3>) |Creates a fully transparent icon with the specified width, height, and color depth , $iWidth, $iHeight [, $iBitsPerPel = 32])
Function _WinAPI_CreateEnhMetaFile(Requires: #include <WinAPIGdi.au3>) |Creates a device context for an enhanced-format metafile , [$hDC = 0 [, $tRECT = 0 [, $bPixels = False [, $sFilePath = '' [, $sDescription = '']]]]])
Function _WinAPI_CreateEvent(Requires: #include <WinAPI.au3>) |Creates or opens a named or unnamed event object , [$tAttributes = 0 [, $bManualReset = True [, $bInitialState = True [, $sName = ""]]]])
Function _WinAPI_CreateFile(Requires: #include <WinAPI.au3>) |Creates or opens a file or other device , $sFileName, $iCreation [, $iAccess = 4 [, $iShare = 0 [, $iAttributes = 0 [, $tSecurity = 0]]]])
Function _WinAPI_CreateFileEx(Requires: #include <WinAPIFiles.au3>) |Creates or opens a file or I/O device , $sFilePath, $iCreation [, $iAccess = 0 [, $iShare = 0 [, $iFlagsAndAttributes = 0 [, $tSecurity = 0 [, $hTemplate = 0]]]]])
Function _WinAPI_CreateFileMapping(Requires: #include <WinAPIFiles.au3>) |Creates or opens a named or unnamed file mapping object for a specified file , $hFile [, $iSize = 0 [, $sName = '' [, $iProtect = 0x0004 [, $tSecurity = 0]]]])
Function _WinAPI_CreateFont(Requires: #include <WinAPI.au3>) |Creates a logical font with the specified characteristics , $iHeight, $iWidth [, $iEscape = 0 [, $iOrientn = 0 [, $iWeight = $FW_NORMAL [, $bItalic = False [, $bUnderline = False [, $bStrikeout = False [, $iCharset = $DEFAULT_CHARSET [, $iOutputPrec = $OUT_DEFAULT_PRECIS [, $iClipPrec = $CLIP_DEFAULT_PRECIS [, $iQuality = $DEFAULT_QUALITY [, $iPitch = 0 [, $sFace = 'Arial']]]]]]]]]]]])
Function _WinAPI_CreateFontEx(Requires: #include <WinAPIGdi.au3>) |Creates a logical font with the specified characteristics , $iHeight [, $iWidth = 0 [, $iEscapement = 0 [, $iOrientation = 0 [, $iWeight = 400 [, $bItalic = False [, $bUnderline = False [, $bStrikeOut = False [, $iCharSet = 1 [, $iOutPrecision = 0 [, $iClipPrecision = 0 [, $iQuality = 0 [, $iPitchAndFamily = 0 [, $sFaceName = '' [, $iStyle = 0]]]]]]]]]]]]]])
Function _WinAPI_CreateFontIndirect(Requires: #include <WinAPI.au3>) |Creates a logical font that has specific characteristics , $tLogFont)
Function _WinAPI_CreateGUID(GUID) |Creates a globally unique identifier (Requires: #include <WinAPICom.au3>)
Function _WinAPI_CreateHardLink(Requires: #include <WinAPIFiles.au3>) |Establishes a hard link between an existing file and a new file , $sNewFile, $sExistingFile)
Function _WinAPI_CreateIcon(Requires: #include <WinAPIRes.au3>) |Creates an icon that has the specified size, colors, and bit patterns , $hInstance, $iWidth, $iHeight, $iPlanes, $iBitsPixel, $pANDBits, $pXORBits)
Function _WinAPI_CreateIconFromResourceEx(Requires: #include <WinAPIRes.au3>) |Creates an icon or cursor from resource bits describing the icon , $pData, $iSize [, $bIcon = True [, $iXDesiredPixels = 0 [, $iYDesiredPixels = 0 [, $iFlags = 0]]]])
Function _WinAPI_CreateIconIndirect(Requires: #include <WinAPIGdi.au3>) |Creates an icon or cursor that has the specified size, colors, and bit patterns , $hBitmap, $hMask [, $iXHotspot = 0 [, $iYHotspot = 0 [, $bIcon = True]]])
Function _WinAPI_CreateJobObject(Requires: #include <WinAPIProc.au3>) |Creates or opens a job object , [$sName = '' [, $tSecurity = 0]])
Function _WinAPI_CreateMargins(Requires: #include <WinAPIMisc.au3>) |Creates $tagMARGINS structure with specified left, right, top, and bottom retaining borders , $iLeftWidth, $iRightWidth, $iTopHeight, $iBottomHeight)
Function _WinAPI_CreateMRUList(MRU) |Creates a new most recently used list (Requires: #include <WinAPIReg.au3>), $hKey, $sSubKey [, $iMax = 26])
Function _WinAPI_CreateMutex(Requires: #include <WinAPIProc.au3>) |Creates or opens a named or unnamed mutex object , $sMutex [, $bInitial = True [, $tSecurity = 0]])
Function _WinAPI_CreateNullRgn(Requires: #include <WinAPIGdi.au3>) |Creates an empty region 
Function _WinAPI_CreateNumberFormatInfo(Requires: #include <WinAPILocale.au3>) |Creates a $tagNUMBERFMT structure with the specified number formatting information , $iNumDigits, $iLeadingZero, $iGrouping, $sDecimalSep, $sThousandSep, $iNegativeOrder)
Function _WinAPI_CreateObjectID(Requires: #include <WinAPIFiles.au3>) |Creates or retrieves the object identifier for the specified file or directory , $sFilePath)
Function _WinAPI_CreatePen(Requires: #include <WinAPI.au3>) |Creates a logical pen that has the specified style, width, and color , $iPenStyle, $iWidth, $iColor)
Function _WinAPI_CreatePoint(Requires: #include <WinAPIMisc.au3>) |Creates $tagPOINT structure with the x- and y-coordinates of the specified point , $iX, $iY)
Function _WinAPI_CreatePolygonRgn(Requires: #include <WinAPIGdi.au3>) |Creates a polygonal region , Const ByRef $aPoint [, $iStart = 0 [, $iEnd = -1 [, $iMode = 1]]])
Function _WinAPI_CreateProcess(Requires: #include <WinAPI.au3>) |Creates a new process and its primary thread , $sAppName, $sCommand, $tSecurity, $tThread, $bInherit, $iFlags, $pEnviron, $sDir, $tStartupInfo, $tProcess)
Function _WinAPI_CreateProcessWithToken(Requires: #include <WinAPIProc.au3>) |Creates a new process and its primary thread in the security context of the specified token , $sApp, $sCmd, $iFlags, $tStartupInfo, $tProcessInfo, $hToken [, $iLogon = 0 [, $pEnvironment = 0 [, $sDir = '']]])
Function _WinAPI_CreateRect(Requires: #include <WinAPIMisc.au3>) |Creates $tagRECT structure with the coordinates of the specified rectangle , $iLeft, $iTop, $iRight, $iBottom)
Function _WinAPI_CreateRectEx(Requires: #include <WinAPIMisc.au3>) |Creates $tagRECT structure with the coordinates of the specified rectangle , $iX, $iY, $iWidth, $iHeight)
Function _WinAPI_CreateRectRgn(Requires: #include <WinAPI.au3>) |Creates a rectangular region , $iLeftRect, $iTopRect, $iRightRect, $iBottomRect)
Function _WinAPI_CreateRectRgnIndirect(Requires: #include <WinAPIGdi.au3>) |Creates a rectangular region , $tRECT)
Function _WinAPI_CreateRoundRectRgn(Requires: #include <WinAPI.au3>) |Creates a rectangular region with rounded corners , $iLeftRect, $iTopRect, $iRightRect, $iBottomRect, $iWidthEllipse, $iHeightEllipse)
Function _WinAPI_CreateSemaphore(Requires: #include <WinAPIProc.au3>) |Creates or opens a named or unnamed semaphore object , $sSemaphore, $iInitial, $iMaximum [, $tSecurity = 0])
Function _WinAPI_CreateSize(Requires: #include <WinAPIMisc.au3>) |Creates $tagSIZE structure with the width and height of the specified rectangle , $iWidth, $iHeight)
Function _WinAPI_CreateSolidBitmap(Requires: #include <WinAPI.au3>) |Creates a solid color bitmap , $hWnd, $iColor, $iWidth, $iHeight [, $bRGB = 1])
Function _WinAPI_CreateSolidBrush(Requires: #include <WinAPI.au3>) |Creates a logical brush that has the specified solid color , $iColor)
Function _WinAPI_CreateStreamOnHGlobal(Requires: #include <WinAPICom.au3>) |Creates a stream object that uses a memory handle to store the stream contents , [$hGlobal = 0 [, $bDeleteOnRelease = True]])
Function _WinAPI_CreateString(Requires: #include <WinAPISys.au3>) |Copies a specified string to the newly allocated memory block and returns its pointer , $sString [, $pString = 0 [, $iLength = -1 [, $bUnicode = True [, $bAbort = True]]]])
Function _WinAPI_CreateSymbolicLink(Requires: #include <WinAPIFiles.au3>) |Creates a symbolic link , $sSymlink, $sTarget [, $bDirectory = False])
Function _WinAPI_CreateTransform(Requires: #include <WinAPIGdi.au3>) |Creates $tagXFORM structure specifies a world-space to page-space transformation , [$nM11 = 1 [, $nM12 = 0 [, $nM21 = 0 [, $nM22 = 1 [, $nDX = 0 [, $nDY = 0]]]]]])
Function _WinAPI_CreateWindowEx(Requires: #include <WinAPI.au3>) |Creates an overlapped, pop-up, or child window , $iExStyle, $sClass, $sName, $iStyle, $iX, $iY, $iWidth, $iHeight, $hParent [, $hMenu = 0 [, $hInstance = 0 [, $pParam = 0]]])
Function _WinAPI_CreateWindowStation(Requires: #include <WinAPISys.au3>) |Creates a window station object, associates it with the calling process, and assigns it to the current session , [$sName = '' [, $iAccess = 0 [, $iFlags = 0 [, $tSecurity = 0]]]])
Function _WinAPI_DecompressBuffer(Requires: #include <WinAPISys.au3>) |Decompresses an entire compressed buffer , $pUncompressedBuffer, $iUncompressedSize, $pCompressedBuffer, $iCompressedSize [, $iFormat = 0x0002])
Function _WinAPI_DecryptFile(Requires: #include <WinAPIFiles.au3>) |Decrypts an encrypted file or directory , $sFilePath)
Function _WinAPI_DeferWindowPos(Requires: #include <WinAPISys.au3>) |Updates the specified multiple-window-position structure for the specified window , $hInfo, $hWnd, $hAfter, $iX, $iY, $iWidth, $iHeight, $iFlags)
Function _WinAPI_DefineDosDevice(Requires: #include <WinAPIFiles.au3>) |Defines, redefines, or deletes MS-DOS device names , $sDevice, $iFlags [, $sFilePath = ''])
Function _WinAPI_DefRawInputProc(Requires: #include <WinAPISys.au3>) |Calls the default raw input procedure to process the raw input messages that an application does not process , $paRawInput, $iInput)
Function _WinAPI_DefSubclassProc(Requires: #include <WinAPIShellEx.au3>) |Calls the next handler in a window's subclass chain , $hWnd, $iMsg, $wParam, $lParam)
Function _WinAPI_DefWindowProc(Requires: #include <WinAPI.au3>) |Call the default window procedure to provide default processing , $hWnd, $iMsg, $wParam, $lParam)
Function _WinAPI_DefWindowProcW(Requires: #include <WinAPISys.au3>) |Calls the default window procedure to provide default processing for any window messages , $hWnd, $iMsg, $wParam, $lParam)
Function _WinAPI_DeleteDC(Requires: #include <WinAPI.au3>) |Deletes the specified device context , $hDC)
Function _WinAPI_DeleteEnhMetaFile(Requires: #include <WinAPIGdi.au3>) |Deletes an enhanced-format metafile or an enhanced-format metafile handle , $hEmf)
Function _WinAPI_DeleteFile(Requires: #include <WinAPIFiles.au3>) |Deletes an existing file , $sFilePath)
Function _WinAPI_DeleteObject(Requires: #include <WinAPI.au3>) |Deletes a logical pen, brush, font, bitmap, region, or palette , $hObject)
Function _WinAPI_DeleteObjectID(Requires: #include <WinAPIFiles.au3>) |Removes the object identifier from a specified file or directory , $sFilePath)
Function _WinAPI_DeleteVolumeMountPoint(Requires: #include <WinAPIFiles.au3>) |Deletes a drive letter or mounted folder , $sMountedPath)
Function _WinAPI_DeregisterShellHookWindow(Requires: #include <WinAPISys.au3>) |Unregisters a specified Shell window that is registered to receive Shell hook messages , $hWnd)
Function _WinAPI_DestroyCaret(Requires: #include <WinAPIRes.au3>) |Destroys the caret's current shape, frees the caret from the window, and removes the caret from the screen 
Function _WinAPI_DestroyCursor(Requires: #include <WinAPIRes.au3>) |Destroys a cursor and frees any memory the cursor occupied , $hCursor)
Function _WinAPI_DestroyIcon(Requires: #include <WinAPI.au3>) |Destroys an icon and frees any memory the icon occupied , $hIcon)
Function _WinAPI_DestroyWindow(Requires: #include <WinAPI.au3>) |Destroys the specified window , $hWnd)
Function _WinAPI_DeviceIoControl(Requires: #include <WinAPIFiles.au3>) |Sends a control code directly to a specified device driver , $hDevice, $iControlCode [, $pInBuffer = 0 [, $iInBufferSize = 0 [, $pOutBuffer = 0 [, $iOutBufferSize = 0]]]])
Function _WinAPI_DisplayStruct(Requires: #include <WinAPIDiag.au3>) |Displays data from the specified structure or memory address as a list , $tStruct [, $sStruct = '' [, $sTitle = '' [, $iItem = 0 [, $iSubItem = 0 [, $iFlags = 0 [, $bTop = True [, $hParent = 0]]]]]]])
Function _WinAPI_DllGetVersion(Requires: #include <WinAPIShellEx.au3>) |Retrieves a DLL-specific version information , $sFilePath)
Function _WinAPI_DllInstall(OCX) |Registers OLE controls such as DLL or ActiveX Controls files (Requires: #include <WinAPIReg.au3>), $sFilePath)
Function _WinAPI_DllUninstall(OCX) |Unregisters OLE controls such as DLL or ActiveX Controls files (Requires: #include <WinAPIReg.au3>), $sFilePath)
Function _WinAPI_DPtoLP(Requires: #include <WinAPIGdi.au3>) |Converts device coordinates into logical coordinates , $hDC, ByRef $tPOINT [, $iCount = 1])
Function _WinAPI_DragAcceptFiles(Requires: #include <WinAPISys.au3>) |Registers whether a window accepts dropped files , $hWnd [, $bAccept = True])
Function _WinAPI_DragFinish(Requires: #include <WinAPISys.au3>) |Releases memory that the system allocated for use in transferring file names to the application , $hDrop)
Function _WinAPI_DragQueryFileEx(Requires: #include <WinAPISys.au3>) |Retrieves the names of dropped files that result from a successful drag-and-drop operation , $hDrop [, $iFlag = 0])
Function _WinAPI_DragQueryPoint(Requires: #include <WinAPISys.au3>) |Retrieves the position of the mouse pointer at the time a file was dropped during a drag-and-drop operation , $hDrop)
Function _WinAPI_DrawAnimatedRects(Requires: #include <WinAPIGdi.au3>) |Animates the caption of a window to indicate the opening of an icon or the minimizing or maximizing of a window , $hWnd, $tRectFrom, $tRectTo)
Function _WinAPI_DrawBitmap(Requires: #include <WinAPIGdi.au3>) |Draws a bitmap into the specified device context , $hDC, $iX, $iY, $hBitmap [, $iRop = 0x00CC0020])
Function _WinAPI_DrawEdge(Requires: #include <WinAPI.au3>) |Draws one or more edges of rectangle , $hDC, $tRECT, $iEdgeType, $iFlags)
Function _WinAPI_DrawFocusRect(Requires: #include <WinAPIGdi.au3>) |Draws a rectangle in the style used to indicate that the rectangle has the focus , $hDC, $tRECT)
Function _WinAPI_DrawFrameControl(Requires: #include <WinAPI.au3>) |Draws a frame control of the specified type and style , $hDC, $tRECT, $iType, $iState)
Function _WinAPI_DrawIcon(Requires: #include <WinAPI.au3>) |Draws an icon or cursor into the specified device context , $hDC, $iX, $iY, $hIcon)
Function _WinAPI_DrawIconEx(Requires: #include <WinAPI.au3>) |Draws an icon or cursor into the specified device context , $hDC, $iX, $iY, $hIcon [, $iWidth = 0 [, $iHeight = 0 [, $iStep = 0 [, $hBrush = 0 [, $iFlags = 3]]]]])
Function _WinAPI_DrawLine(Requires: #include <WinAPI.au3>) |Draws a line , $hDC, $iX1, $iY1, $iX2, $iY2)
Function _WinAPI_DrawShadowText(Requires: #include <WinAPIGdi.au3>) |Draws formatted text in the specified rectangle with a drop shadow , $hDC, $sText, $iRGBText, $iRGBShadow [, $iXOffset = 0 [, $iYOffset = 0 [, $tRECT = 0 [, $iFlags = 0]]]])
Function _WinAPI_DrawText(Requires: #include <WinAPI.au3>) |Draws formatted text in the specified rectangle , $hDC, $sText, ByRef $tRECT, $iFlags)
Function _WinAPI_DrawThemeBackground(Requires: #include <WinAPITheme.au3>) |Draws the border and fill defined by the visual style for the specified control part , $hTheme, $iPartID, $iStateID, $hDC, $tRECT [, $tCLIP = 0])
Function _WinAPI_DrawThemeEdge(Requires: #include <WinAPITheme.au3>) |Draws one or more edges defined by the visual style of a rectangle , $hTheme, $iPartID, $iStateID, $hDC, $tRECT, $iEdge, $iFlags [, $tAREA = 0])
Function _WinAPI_DrawThemeIcon(Requires: #include <WinAPITheme.au3>) |Draws an image from an image list with the icon effect defined by the visual style , $hTheme, $iPartID, $iStateID, $hDC, $tRECT, $hIL, $iIndex)
Function _WinAPI_DrawThemeParentBackground(Requires: #include <WinAPITheme.au3>) |Draws the part of a parent control that is covered by a partially-transparent or alpha-blended child control , $hWnd, $hDC [, $tRECT = 0])
Function _WinAPI_DrawThemeText(Requires: #include <WinAPITheme.au3>) |Draws text using the color and font defined by the visual style , $hTheme, $iPartID, $iStateID, $hDC, $sText, $tRECT, $iFlags)
Function _WinAPI_DrawThemeTextEx(Requires: #include <WinAPITheme.au3>) |Draws text using the color and font defined by the visual style , $hTheme, $iPartID, $iStateID, $hDC, $sText, $tRECT, $iFlags, $tDTTOPTS)
Function _WinAPI_DuplicateEncryptionInfoFile(Requires: #include <WinAPIFiles.au3>) |Copies the EFS metadata from one file or directory to another , $sSrcFilePath, $sDestFilePath [, $iCreation = 2 [, $iAttributes = 0 [, $tSecurity = 0]]])
Function _WinAPI_DuplicateHandle(Requires: #include <WinAPI.au3>) |Duplicates an object handle , $hSourceProcessHandle, $hSourceHandle, $hTargetProcessHandle, $iDesiredAccess, $iInheritHandle, $iOptions)
Function _WinAPI_DuplicateTokenEx(Requires: #include <WinAPIProc.au3>) |Creates a new primary or impersonation access token that duplicates an existing token , $hToken, $iAccess, $iLevel [, $iType = 1 [, $tSecurity = 0]])
Function _WinAPI_DwmDefWindowProc(DWM) |Default window procedure for Desktop Window Manager hit testing within the non-client area (Requires: #include <WinAPIGdi.au3>), $hWnd, $iMsg, $wParam, $lParam)
Function _WinAPI_DwmEnableBlurBehindWindow(Requires: #include <WinAPIGdi.au3>) |Enables the blur effect on a specified window , $hWnd [, $bEnable = True [, $bTransition = False [, $hRgn = 0]]])
Function _WinAPI_DwmEnableComposition(DWM) |Enables or disables Desktop Window Manager composition (Requires: #include <WinAPIGdi.au3>), $bEnable)
Function _WinAPI_DwmExtendFrameIntoClientArea(Requires: #include <WinAPIGdi.au3>) |Extends the window frame behind the client area , $hWnd [, $tMARGINS = 0])
Function _WinAPI_DwmGetColorizationColor(DWM) |Retrieves the current color used for Desktop Window Manager glass composition (Requires: #include <WinAPIGdi.au3>)
Function _WinAPI_DwmGetColorizationParameters(DWM) |Retrieves the colorization parameters used for Desktop Window Manager (Requires: #include <WinAPIGdi.au3>)
Function _WinAPI_DwmGetWindowAttribute(Requires: #include <WinAPIGdi.au3>) |Retrieves the current value of a specified attribute applied to the window , $hWnd, $iAttribute)
Function _WinAPI_DwmInvalidateIconicBitmaps(Requires: #include <WinAPIGdi.au3>) |Indicates that all previously provided iconic bitmaps from a window, both thumbnails and peek representations, should be refreshed , $hWnd)
Function _WinAPI_DwmIsCompositionEnabled(DWM) |Determines whether Desktop Window Manager composition is enabled (Requires: #include <WinAPIGdi.au3>)
Function _WinAPI_DwmQueryThumbnailSourceSize(DWM) |Returns the source size of the Desktop Window Manager thumbnail (Requires: #include <WinAPIGdi.au3>), $hThumbnail)
Function _WinAPI_DwmRegisterThumbnail(DWM) |Creates a Desktop Window Manager thumbnail relationship between the destination and source windows (Requires: #include <WinAPIGdi.au3>), $hDestination, $hSource)
Function _WinAPI_DwmSetColorizationParameters(DWM) |Sets the colorization parameters for Desktop Window Manager (Requires: #include <WinAPIGdi.au3>), $tDWMCP)
Function _WinAPI_DwmSetIconicLivePreviewBitmap(also known as a Peek preview) |Sets a static, iconic bitmap to display a live preview of a window or tab (Requires: #include <WinAPIGdi.au3>), $hWnd, $hBitmap [, $bFrame = False [, $tClient = 0]])
Function _WinAPI_DwmSetIconicThumbnail(Requires: #include <WinAPIGdi.au3>) |Sets a static, iconic bitmap on a window or tab to use as a thumbnail representation , $hWnd, $hBitmap [, $bFrame = False])
Function _WinAPI_DwmSetWindowAttribute(Requires: #include <WinAPIGdi.au3>) |Sets the value of the specified attributes for non-client rendering to apply to the window , $hWnd, $iAttribute, $iData)
Function _WinAPI_DwmUnregisterThumbnail(DWM) |Removes a Desktop Window Manager thumbnail relationship (Requires: #include <WinAPIGdi.au3>), $hThumbnail)
Function _WinAPI_DwmUpdateThumbnailProperties(DWM) |Specifies Desktop Window Manager thumbnail properties (Requires: #include <WinAPIGdi.au3>), $hThumbnail [, $bVisible = True [, $bClientAreaOnly = False [, $iOpacity = 255 [, $tRectDest = 0 [, $tRectSrc = 0]]]]])
Function _WinAPI_DWordToFloat(Requires: #include <WinAPIMisc.au3>) |Converts a value of type DWORD to a value of type FLOAT , $iValue)
Function _WinAPI_DWordToInt(Requires: #include <WinAPIMisc.au3>) |Converts a value of type DWORD to a value of type INT , $iValue)
Function _WinAPI_EjectMedia(Requires: #include <WinAPIFiles.au3>) |Ejects media from a device , $sDrive)
Function _WinAPI_Ellipse(Requires: #include <WinAPIGdi.au3>) |Draws an ellipse , $hDC, $tRECT)
Function _WinAPI_EmptyWorkingSet(Requires: #include <WinAPIProc.au3>) |Removes as many pages as possible from the working set of the specified process , [$iPID = 0])
Function _WinAPI_EnableWindow(Requires: #include <WinAPI.au3>) |Enables or disables mouse and keyboard input to the specified window or control , $hWnd [, $bEnable = True])
Function _WinAPI_EncryptFile(Requires: #include <WinAPIFiles.au3>) |Encrypts a file or directory , $sFilePath)
Function _WinAPI_EncryptionDisable(Requires: #include <WinAPIFiles.au3>) |Disables or enables encryption of the specified directory and the files in it , $sDir, $bDisable)
Function _WinAPI_EndBufferedPaint(Requires: #include <WinAPITheme.au3>) |Completes a buffered paint operation and frees the associated buffered paint handle , $hBP [, $bUpdate = True])
Function _WinAPI_EndDeferWindowPos(Requires: #include <WinAPISys.au3>) |Simultaneously updates the position and size of one or more windows in a single screen-refreshing cycle , $hInfo)
Function _WinAPI_EndPaint(Requires: #include <WinAPIGdi.au3>) |Marks the end of painting in the specified window , $hWnd, ByRef $tPAINTSTRUCT)
Function _WinAPI_EndPath(Requires: #include <WinAPIGdi.au3>) |Closes a path bracket and selects the path defined by the bracket into the specified device context , $hDC)
Function _WinAPI_EndUpdateResource(Requires: #include <WinAPIRes.au3>) |Commits or discards a changes of the resources within module , $hUpdate [, $bDiscard = False])
Function _WinAPI_EnumChildProcess(Requires: #include <WinAPIProc.au3>) |Enumerates a child processes that belong to the specified process , [$iPID = 0])
Function _WinAPI_EnumChildWindows(Requires: #include <WinAPISys.au3>) |Enumerates a child windows that belong to the specified parent window , $hWnd [, $bVisible = True])
Function _WinAPI_EnumDesktops(Requires: #include <WinAPISys.au3>) |Enumerates all desktops associated with the specified window station of the calling process , $hStation)
Function _WinAPI_EnumDesktopWindows(Requires: #include <WinAPISys.au3>) |Enumerates all top-level windows associated with the specified desktop , $hDesktop [, $bVisible = True])
Function _WinAPI_EnumDeviceDrivers(Requires: #include <WinAPIProc.au3>) |Retrieves the load address for each device driver in the system 
Function _WinAPI_EnumDisplayDevices(Requires: #include <WinAPI.au3>) |Obtains information about the display devices in a system , $sDevice, $iDevNum)
Function _WinAPI_EnumDisplayMonitors(including invisible pseudo-monitors associated with the mirroring drivers) |Enumerates display monitors (Requires: #include <WinAPIGdi.au3>), [$hDC = 0 [, $tRECT = 0]])
Function _WinAPI_EnumDisplaySettings(Requires: #include <WinAPIGdi.au3>) |Retrieves information about one of the graphics modes for a display device , $sDevice, $iMode)
Function _WinAPI_EnumDllProc(DLL) |Enumerates an exported functions of the specified dynamic-link library (Requires: #include <WinAPIDiag.au3>), $sFilePath [, $sMask = '' [, $iFlags = 0]])
Function _WinAPI_EnumFiles(Requires: #include <WinAPIFiles.au3>) |Enumerates the files and subdirectories for the specified directory with a name that matches the template , $sDir [, $iFlag = 0 [, $sTemplate = '' [, $bExclude = False]]])
Function _WinAPI_EnumFileStreams(Requires: #include <WinAPIFiles.au3>) |Enumerates all streams with a ::$DATA stream type in the specified file or directory , $sFilePath)
Function _WinAPI_EnumFontFamilies(Requires: #include <WinAPIGdi.au3>) |Enumerates all uniquely-named fonts in the system that match the specified font characteristics , [$hDC = 0 [, $sFaceName = '' [, $iCharSet = 1 [, $iFontType = 0x07 [, $sPattern = '' [, $bExclude = False]]]]]])
Function _WinAPI_EnumHardLinks(Requires: #include <WinAPIFiles.au3>) |Enumerates all the hard links to the specified file , $sFilePath)
Function _WinAPI_EnumMRUList(MRU) |Enumerates the contents of the most recently used list (Requires: #include <WinAPIReg.au3>), $hMRU, $iItem)
Function _WinAPI_EnumPageFiles(Requires: #include <WinAPISys.au3>) |Retrieves information for each installed pagefile in the system 
Function _WinAPI_EnumProcessHandles(Requires: #include <WinAPIProc.au3>) |Enumerates a handles that belong to the specified process , [$iPID = 0 [, $iType = 0]])
Function _WinAPI_EnumProcessModules(Requires: #include <WinAPIProc.au3>) |Retrieves a handle and name for each module in the specified process , [$iPID = 0 [, $iFlag = 0]])
Function _WinAPI_EnumProcessThreads(Requires: #include <WinAPIProc.au3>) |Enumerates a threads that belong to the specified process , [$iPID = 0])
Function _WinAPI_EnumProcessWindows(Requires: #include <WinAPIProc.au3>) |Enumerates a windows that belong to the specified process , [$iPID = 0 [, $bVisible = True]])
Function _WinAPI_EnumRawInputDevices(Requires: #include <WinAPISys.au3>) |Enumerates the raw input devices attached to the system 
Function _WinAPI_EnumResourceLanguages(Requires: #include <WinAPIRes.au3>) |Enumerates a language-specific resources, of the specified type and name, associated with a binary module , $hModule, $sType, $sName)
Function _WinAPI_EnumResourceNames(Requires: #include <WinAPIRes.au3>) |Enumerates the resources of a specified type within a binary module , $hModule, $sType)
Function _WinAPI_EnumResourceTypes(Requires: #include <WinAPIRes.au3>) |Enumerates the resource types within a binary module , $hModule)
Function _WinAPI_EnumSystemGeoID(GEOID) |Enumerates the geographical location identifiers that are available on the operating system (Requires: #include <WinAPILocale.au3>)
Function _WinAPI_EnumSystemLocales(Requires: #include <WinAPILocale.au3>) |Enumerates the locales that are either installed on or supported by an operating system , $iFlag)
Function _WinAPI_EnumUILanguages(Requires: #include <WinAPILocale.au3>) |Enumerates the user interface languages that are available on the operating system , [$iFlag = 0])
Function _WinAPI_EnumWindows(Requires: #include <WinAPI.au3>) |Enumerates all windows , [$bVisible = True [, $hWnd = Default]])
Function _WinAPI_EnumWindowsPopup(Requires: #include <WinAPI.au3>) |Enumerates popup windows 
Function _WinAPI_EnumWindowStations(Requires: #include <WinAPISys.au3>) |Enumerates all window stations in the current session 
Function _WinAPI_EnumWindowsTop(Requires: #include <WinAPI.au3>) |Enumerates all top level windows 
Function _WinAPI_EqualMemory(Requires: #include <WinAPISys.au3>) |Compares two blocks of memory to determine whether the specified number of bytes are identical , $pSource1, $pSource2, $iLength)
Function _WinAPI_EqualRect(Requires: #include <WinAPIGdi.au3>) |Determines whether the two specified rectangles are equal , $tRECT1, $tRECT2)
Function _WinAPI_EqualRgn(Requires: #include <WinAPIGdi.au3>) |Checks the two specified regions to determine whether they are identical , $hRgn1, $hRgn2)
Function _WinAPI_ExcludeClipRect(Requires: #include <WinAPIGdi.au3>) |Creates a new clipping region that consists of the existing clipping region minus the specified rectangle , $hDC, $tRECT)
Function _WinAPI_ExpandEnvironmentStrings(Requires: #include <WinAPI.au3>) |Expands environment variable strings and replaces them with their defined values , $sString)
Function _WinAPI_ExtCreatePen(Requires: #include <WinAPIGdi.au3>) |Creates a logical cosmetic or geometric pen that has the specified style, width, and brush attributes , $iPenStyle, $iWidth, $iBrushStyle, $iRGB [, $iHatch = 0 [, $aUserStyle = 0 [, $iStart = 0 [, $iEnd = -1]]]])
Function _WinAPI_ExtCreateRegion(Requires: #include <WinAPIGdi.au3>) |Creates a region from the specified region and transformation data , $tRGNDATA [, $tXFORM = 0])
Function _WinAPI_ExtFloodFill(Requires: #include <WinAPIGdi.au3>) |Fills an area of the display surface with the current brush , $hDC, $iX, $iY, $iRGB [, $iType = 0])
Function _WinAPI_ExtractIcon(Requires: #include <WinAPIRes.au3>) |Extracts an icon from the specified executable file, DLL, or icon file , $sIcon, $iIndex [, $bSmall = False])
Function _WinAPI_ExtractIconEx(Requires: #include <WinAPI.au3>) |Creates an array of handles to large or small icons extracted from a file , $sFilePath, $iIndex, $paLarge, $paSmall, $iIcons)
Function _WinAPI_ExtSelectClipRgn(Requires: #include <WinAPIGdi.au3>) |Combines the specified region with the current clipping region , $hDC, $hRgn [, $iMode = 5])
Function _WinAPI_FatalAppExit(Requires: #include <WinAPI.au3>) |Displays a message box and terminates the application , $sMessage)
Function _WinAPI_FatalExit(Requires: #include <WinAPIDiag.au3>) |Transfers execution control to the debugger , $iCode)
Function _WinAPI_FileEncryptionStatus(Requires: #include <WinAPIFiles.au3>) |Retrieves the encryption status of the specified file , $sFilePath)
Function _WinAPI_FileExists(Requires: #include <WinAPIFiles.au3>) |Tests whether the specified path is existing file , $sFilePath)
Function _WinAPI_FileIconInit(Requires: #include <WinAPIRes.au3>) |Initializes or reinitializes the system image list , [$bRestore = True])
Function _WinAPI_FileInUse(Requires: #include <WinAPIFiles.au3>) |Tests whether the specified file in use by another application , $sFilePath)
Function _WinAPI_FillMemory(Requires: #include <WinAPISys.au3>) |Fills a block of memory with the given value , $pMemory, $iLength [, $iValue = 0])
Function _WinAPI_FillPath(Requires: #include <WinAPIGdi.au3>) |Closes any open figures in the current path and fills the path's interior by using the current brush , $hDC)
Function _WinAPI_FillRect(Requires: #include <WinAPI.au3>) |Fills a rectangle by using the specified brush , $hDC, $tRECT, $hBrush)
Function _WinAPI_FillRgn(Requires: #include <WinAPIGdi.au3>) |Fills a region by using the specified brush , $hDC, $hRgn, $hBrush)
Function _WinAPI_FindClose(Requires: #include <WinAPIFiles.au3>) |Closes a file search handle , $hSearch)
Function _WinAPI_FindCloseChangeNotification(Requires: #include <WinAPIFiles.au3>) |Stops change notification handle monitoring , $hChange)
Function _WinAPI_FindExecutable(Requires: #include <WinAPI.au3>) |Retrieves the name of the executable file associated with the specified file name , $sFileName [, $sDirectory = ""])
Function _WinAPI_FindFirstChangeNotification(Requires: #include <WinAPIFiles.au3>) |Creates a change notification handle and sets up initial change notification filter conditions , $sDirectory, $iFlags [, $bSubtree = False])
Function _WinAPI_FindFirstFile(Requires: #include <WinAPIFiles.au3>) |Searches a directory for a file or subdirectory with a name that matches a specific name , $sFilePath, $tData)
Function _WinAPI_FindFirstFileName(Requires: #include <WinAPIFiles.au3>) |Creates an enumeration of all the hard links to the specified file , $sFilePath, ByRef $sLink)
Function _WinAPI_FindFirstStream(Requires: #include <WinAPIFiles.au3>) |Enumerates the first stream with a ::$DATA stream type in the specified file or directory , $sFilePath, $tData)
Function _WinAPI_FindNextChangeNotification(Requires: #include <WinAPIFiles.au3>) |Requests that the operating system signal a change notification handle the next time it detects an appropriate change , $hChange)
Function _WinAPI_FindNextFile(Requires: #include <WinAPIFiles.au3>) |Continues a file or directory search , $hSearch, $tData)
Function _WinAPI_FindNextFileName(Requires: #include <WinAPIFiles.au3>) |Continues enumerating the hard links , $hSearch, ByRef $sLink)
Function _WinAPI_FindNextStream(Requires: #include <WinAPIFiles.au3>) |Continues a stream search , $hSearch, $tData)
Function _WinAPI_FindResource(Requires: #include <WinAPIRes.au3>) |Determines the location of a resource with the specified type and name in the specified module , $hInstance, $sType, $sName)
Function _WinAPI_FindResourceEx(Requires: #include <WinAPIRes.au3>) |Determines the location of the resource with the specified type, name, and language in the specified module , $hInstance, $sType, $sName, $iLanguage)
Function _WinAPI_FindTextDlg(Requires: #include <WinAPIDlg.au3>) |Creates a system-defined modeless Find dialog box to search for text in a document , $hOwner [, $sFindWhat = '' [, $iFlags = 0 [, $pFindProc = 0 [, $lParam = 0]]]])
Function _WinAPI_FindWindow(Requires: #include <WinAPI.au3>) |Retrieves the handle to the top-level window whose class name and window name match , $sClassName, $sWindowName)
Function _WinAPI_FlashWindow(Requires: #include <WinAPI.au3>) |Flashes the specified window one time , $hWnd [, $bInvert = True])
Function _WinAPI_FlashWindowEx(Requires: #include <WinAPI.au3>) |Flashes the specified window , $hWnd [, $iFlags = 3 [, $iCount = 3 [, $iTimeout = 0]]])
Function _WinAPI_FlattenPath(Requires: #include <WinAPIGdi.au3>) |Transforms any curves in the path that is selected into the current DC, turning each curve into a sequence of lines , $hDC)
Function _WinAPI_FloatToDWord(Requires: #include <WinAPIMisc.au3>) |Converts a value of type FLOAT to a value of type DWORD , $iValue)
Function _WinAPI_FloatToInt(Requires: #include <WinAPI.au3>) |Returns a 4 byte float as an integer value , $nFloat)
Function _WinAPI_FlushFileBuffers(Requires: #include <WinAPI.au3>) |Flushes the buffers of a specified file and causes all buffered data to be written , $hFile)
Function _WinAPI_FlushFRBuffer() |Destroys the internal buffer that used the _WinAPI_FindTextDlg and _WinAPI_ReplaceTextDlg() functions (Requires: #include <WinAPIDlg.au3>)
Function _WinAPI_FlushViewOfFile(Requires: #include <WinAPIFiles.au3>) |Writes to the disk a byte range within a mapped view of a file , $pAddress [, $iBytes = 0])
Function _WinAPI_FormatDriveDlg(Requires: #include <WinAPIDlg.au3>) |Opens the Shell's Format dialog , $sDrive [, $iOption = 0 [, $hParent = 0]])
Function _WinAPI_FormatMessage(Requires: #include <WinAPI.au3>) |Formats a message string , $iFlags, $pSource, $iMessageID, $iLanguageID, ByRef $pBuffer, $iSize, $vArguments)
Function _WinAPI_FrameRect(Requires: #include <WinAPI.au3>) |Draws a border around the specified rectangle by using the specified brush , $hDC, $tRECT, $hBrush)
Function _WinAPI_FrameRgn(Requires: #include <WinAPIGdi.au3>) |Draws a border around the specified region by using the specified brush , $hDC, $hRgn, $hBrush, $iWidth, $iHeight)
Function _WinAPI_FreeLibrary(DLL) |Decrements the reference count of the loaded dynamic-link library module (Requires: #include <WinAPI.au3>), $hModule)
Function _WinAPI_FreeMemory(Requires: #include <WinAPISys.au3>) |Frees a memory block in the internal library heap , $pMemory)
Function _WinAPI_FreeMRUList(MRU) |Frees the handle associated with the most recently used list and writes cached data to the registry (Requires: #include <WinAPIReg.au3>), $hMRU)
Function _WinAPI_FreeResource(decreases by one) |Decrements the reference count of a loaded resource (Requires: #include <WinAPIRes.au3>), $hData)
Function _WinAPI_GdiComment(Requires: #include <WinAPIGdi.au3>) |Copies a comment from a buffer into a specified enhanced-format metafile , $hDC, $pBuffer, $iSize)
Function _WinAPI_GetActiveWindow(Requires: #include <WinAPISys.au3>) |Retrieves the window handle to the active window attached to the calling process's message queue 
Function _WinAPI_GetAllUsersProfileDirectory(Requires: #include <WinAPIShellEx.au3>) |Retrieves the path to the root of the directory that contains program data shared by all users 
Function _WinAPI_GetAncestor(Requires: #include <WinAPI.au3>) |Retrieves the handle to the ancestor of the specified window , $hWnd [, $iFlags = 1])
Function _WinAPI_GetApplicationRestartSettings(Requires: #include <WinAPIDiag.au3>) |Retrieves the restart information registered for the specified process , [$iPID = 0])
Function _WinAPI_GetArcDirection(Requires: #include <WinAPIGdi.au3>) |Retrieves the current arc direction for the specified device context , $hDC)
Function _WinAPI_GetAsyncKeyState(Requires: #include <WinAPI.au3>) |Determines whether a key is up or down at the time the function is called , $iKey)
Function _WinAPI_GetBinaryType(.exe) |Determines whether a file is an executable file, and if so, which subsystem runs the executable file (Requires: #include <WinAPIFiles.au3>), $sFilePath)
Function _WinAPI_GetBitmapBits(Requires: #include <WinAPIGdi.au3>) |Copies the bitmap bits of a specified device-dependent bitmap into a buffer , $hBitmap, $iSize, $pBits)
Function _WinAPI_GetBitmapDimension(Requires: #include <WinAPIGdi.au3>) |Retrieves a dimension of the specified bitmap , $hBitmap)
Function _WinAPI_GetBitmapDimensionEx(Requires: #include <WinAPIGdi.au3>) |Retrieves the dimensions of a compatible bitmap , $hBitmap)
Function _WinAPI_GetBkColor(Requires: #include <WinAPIGdi.au3>) |Retrieves the current background color for the specified device context , $hDC)
Function _WinAPI_GetBkMode(Requires: #include <WinAPI.au3>) |Returns the current background mix mode for a specified device context , $hDC)
Function _WinAPI_GetBoundsRect(Requires: #include <WinAPIGdi.au3>) |Obtains the current accumulated bounding rectangle for a specified device context , $hDC [, $iFlags = 0])
Function _WinAPI_GetBrushOrg(Requires: #include <WinAPIGdi.au3>) |Retrieves the current brush origin for the specified device context , $hDC)
Function _WinAPI_GetBufferedPaintBits(DIB) |Retrieves a pointer to the buffer bitmap if the buffer is a device-independent bitmap (Requires: #include <WinAPITheme.au3>), $hBP)
Function _WinAPI_GetBufferedPaintDC(DC) |Gets the paint device context (Requires: #include <WinAPITheme.au3>), $hBP)
Function _WinAPI_GetBufferedPaintTargetDC(DC) |Retrieves the target device context (Requires: #include <WinAPITheme.au3>), $hBP)
Function _WinAPI_GetBufferedPaintTargetRect(Requires: #include <WinAPITheme.au3>) |Retrieves the target rectangle , $hBP)
Function _WinAPI_GetBValue(Requires: #include <WinAPIGdi.au3>) |Retrieves an intensity value for the blue component of a 32-bit RGB value , $iRGB)
Function _WinAPI_GetCaretBlinkTime(Requires: #include <WinAPIRes.au3>) |Returns the time required to invert the caret's pixels 
Function _WinAPI_GetCaretPos(Requires: #include <WinAPIRes.au3>) |Retrieves the caret's position 
Function _WinAPI_GetCDType(Requires: #include <WinAPIFiles.au3>) |Retrieves a type of the media which is loaded into a specified CD-ROM device , $sDrive)
Function _WinAPI_GetClassInfoEx(Requires: #include <WinAPISys.au3>) |Retrieves information about a window class , $sClass [, $hInstance = 0])
Function _WinAPI_GetClassLongEx(Requires: #include <WinAPISys.au3>) |Retrieves the specified value associated with the specified window , $hWnd, $iIndex)
Function _WinAPI_GetClassName(Requires: #include <WinAPI.au3>) |Retrieves the name of the class to which the specified window belongs , $hWnd)
Function _WinAPI_GetClientHeight(Requires: #include <WinAPI.au3>) |Retrieves the height of a window's client area , $hWnd)
Function _WinAPI_GetClientRect(Requires: #include <WinAPI.au3>) |Retrieves the coordinates of a window's client area , $hWnd)
Function _WinAPI_GetClientWidth(Requires: #include <WinAPI.au3>) |Retrieves the width of a window's client area , $hWnd)
Function _WinAPI_GetClipboardSequenceNumber(Requires: #include <WinAPISys.au3>) |Retrieves the clipboard sequence number for the current window station 
Function _WinAPI_GetClipBox(Requires: #include <WinAPIGdi.au3>) |Retrieves the dimensions of the bounding rectangle of the visible area , $hDC, ByRef $tRECT)
Function _WinAPI_GetClipCursor(Requires: #include <WinAPIRes.au3>) |Retrieves the screen coordinates of the rectangular area to which the cursor is confined 
Function _WinAPI_GetClipRgn(Requires: #include <WinAPIGdi.au3>) |Retrieves a handle identifying the current application-defined clipping region , $hDC)
Function _WinAPI_GetColorAdjustment(DC) |Retrieves the color adjustment for the specified device context (Requires: #include <WinAPIGdi.au3>), $hDC)
Function _WinAPI_GetCompressedFileSize(Requires: #include <WinAPIFiles.au3>) |Retrieves the actual number of bytes of disk storage used to store a specified file , $sFilePath)
Function _WinAPI_GetCompression(Requires: #include <WinAPIFiles.au3>) |Retrieves the current compression state of a file or directory , $sFilePath)
Function _WinAPI_GetConnectedDlg(Requires: #include <WinAPIDlg.au3>) |Launches the Get Connected wizard within the calling application to enable network connectivity , $iDlg [, $iFlags = 0 [, $hParent = 0]])
Function _WinAPI_GetCurrentDirectory(Requires: #include <WinAPIFiles.au3>) |Retrieves the current directory for the current process 
Function _WinAPI_GetCurrentHwProfile(Requires: #include <WinAPISys.au3>) |Retrieves information about the current hardware profile for the local computer 
Function _WinAPI_GetCurrentObject(Requires: #include <WinAPIGdi.au3>) |Retrieves a handle to an object of the specified type that has been selected into the specified device context , $hDC, $iType)
Function _WinAPI_GetCurrentPosition(Requires: #include <WinAPIGdi.au3>) |Retrieves the current position for the specified device context , $hDC)
Function _WinAPI_GetCurrentProcess(Requires: #include <WinAPI.au3>) |Returns the process handle of the calling process 
Function _WinAPI_GetCurrentProcessExplicitAppUserModelID(Requires: #include <WinAPIProc.au3>) |Retrieves the application-defined, explicit Application User Model ID for the current process 
Function _WinAPI_GetCurrentProcessID(Requires: #include <WinAPI.au3>) |Returns the process identifier of the calling process 
Function _WinAPI_GetCurrentThemeName(Requires: #include <WinAPITheme.au3>) |Retrieves the name of the current visual styles, color scheme name, and size name 
Function _WinAPI_GetCurrentThread(Requires: #include <WinAPI.au3>) |Retrieves a pseudo handle for the calling thread 
Function _WinAPI_GetCurrentThreadId(Requires: #include <WinAPI.au3>) |Returns the thread identifier of the calling thread 
Function _WinAPI_GetCursor(Requires: #include <WinAPIRes.au3>) |Retrieves a handle to the current cursor 
Function _WinAPI_GetCursorInfo(Requires: #include <WinAPI.au3>) |Retrieves information about the global cursor 
Function _WinAPI_GetDateFormat(Requires: #include <WinAPILocale.au3>) |Formats a date as a date string for a locale specified by the locale identifier , [$iLCID = 0 [, $tSYSTEMTIME = 0 [, $iFlags = 0 [, $sFormat = '']]]])
Function _WinAPI_GetDC(Requires: #include <WinAPI.au3>) |Retrieves a handle of a display device context for the client area a window , $hWnd)
Function _WinAPI_GetDCEx(DC) |Retrieves a handle to a device context for the client area of a specified window (Requires: #include <WinAPIGdi.au3>), $hWnd, $hRgn, $iFlags)
Function _WinAPI_GetDefaultPrinter(Requires: #include <WinAPISys.au3>) |Retrieves the printer name of the default printer for the current user on the local computer 
Function _WinAPI_GetDefaultUserProfileDirectory(Requires: #include <WinAPIShellEx.au3>) |Retrieves the path to the root of the default user's profile 
Function _WinAPI_GetDesktopWindow(Requires: #include <WinAPI.au3>) |Returns the handle of the Windows desktop window 
Function _WinAPI_GetDeviceCaps(Requires: #include <WinAPI.au3>) |Retrieves device specific information about a specified device , $hDC, $iIndex)
Function _WinAPI_GetDeviceDriverBaseName(Requires: #include <WinAPIProc.au3>) |Retrieves the base name of the specified device driver , $pDriver)
Function _WinAPI_GetDeviceDriverFileName(Requires: #include <WinAPIProc.au3>) |Retrieves the path available for the specified device driver , $pDriver)
Function _WinAPI_GetDeviceGammaRamp(Requires: #include <WinAPIGdi.au3>) |Gets the gamma ramp on direct color display boards that support downloadable gamma ramps in hardware , $hDC, ByRef $aRamp)
Function _WinAPI_GetDIBColorTable(Requires: #include <WinAPIGdi.au3>) |Retrieves RGB color table from the DIB section bitmap , $hBitmap)
Function _WinAPI_GetDIBits(Requires: #include <WinAPI.au3>) |Retrieves the bits of the specified bitmap and copies them into a buffer as a DIB , $hDC, $hBitmap, $iStartScan, $iScanLines, $pBits, $tBI, $iUsage)
Function _WinAPI_GetDiskFreeSpaceEx(Requires: #include <WinAPIFiles.au3>) |Retrieves information about the amount of space that is available on a disk volume , $sDrive)
Function _WinAPI_GetDlgCtrlID(Requires: #include <WinAPI.au3>) |Returns the identifier of the specified control , $hWnd)
Function _WinAPI_GetDlgItem(Requires: #include <WinAPI.au3>) |Retrieves the handle of a control in the specified dialog box , $hWnd, $iItemID)
Function _WinAPI_GetDllDirectory(Requires: #include <WinAPISys.au3>) |Retrieves the application-specific portion of the search path used to locate DLLs for the application 
Function _WinAPI_GetDriveBusType(Requires: #include <WinAPIFiles.au3>) |Retrieves a bus type for the specified drive , $sDrive)
Function _WinAPI_GetDriveGeometryEx(Requires: #include <WinAPIFiles.au3>) |Retrieves extended information about the disk's geometry , $iDrive)
Function _WinAPI_GetDriveNumber(Requires: #include <WinAPIFiles.au3>) |Retrieves a device type, device number, and partition number for the specified drive , $sDrive)
Function _WinAPI_GetDriveType(Requires: #include <WinAPIFiles.au3>) |Determines whether a disk drive is a removable, fixed, CD-ROM, RAM disk, or network drive , [$sDrive = ''])
Function _WinAPI_GetDurationFormat(Requires: #include <WinAPILocale.au3>) |Formats a duration of time as a time string for a locale specified by identifier , $iLCID, $iDuration [, $sFormat = ''])
Function _WinAPI_GetEffectiveClientRect(Requires: #include <WinAPISys.au3>) |Calculates the dimensions of a rectangle in the client area that contains all the specified controls , $hWnd, $aCtrl [, $iStart = 0 [, $iEnd = -1]])
Function _WinAPI_GetEnhMetaFile(Requires: #include <WinAPIGdi.au3>) |Creates a handle that identifies the enhanced-format metafile stored in the specified file , $sFilePath)
Function _WinAPI_GetEnhMetaFileBits(Requires: #include <WinAPIGdi.au3>) |Retrieves the contents of the specified enhanced-format metafile , $hEmf, ByRef $pBuffer)
Function _WinAPI_GetEnhMetaFileDescription(Requires: #include <WinAPIGdi.au3>) |Retrieves an optional text description from an enhanced-format metafile , $hEmf)
Function _WinAPI_GetEnhMetaFileDimension(Requires: #include <WinAPIGdi.au3>) |Retrieves a dimension of the specified enhanced-format metafile , $hEmf)
Function _WinAPI_GetEnhMetaFileHeader(Requires: #include <WinAPIGdi.au3>) |Retrieves the record containing the header for the specified enhanced-format metafile , $hEmf)
Function _WinAPI_GetErrorMessage(Requires: #include <WinAPIDiag.au3>) |Retrieves a text error message for the specified system error code , $iCode [, $iLanguage = 0])
Function _WinAPI_GetErrorMode(Requires: #include <WinAPIDiag.au3>) |Retrieves the error mode for the current process 
Function _WinAPI_GetExitCodeProcess(Requires: #include <WinAPIProc.au3>) |Retrieves the termination status of the specified process , $hProcess)
Function _WinAPI_GetExtended(Requires: #include <WinAPIMisc.au3>) |Retrieves the last extended function return value 
Function _WinAPI_GetFileAttributes(Requires: #include <WinAPIFiles.au3>) |Retrieves file system attributes for a specified file or directory , $sFilePath)
Function _WinAPI_GetFileID(Requires: #include <WinAPIFiles.au3>) |Retrieves the file system's 8-byte file reference number for a file , $hFile)
Function _WinAPI_GetFileInformationByHandle(Requires: #include <WinAPIFiles.au3>) |Retrieves file information for the specified file , $hFile)
Function _WinAPI_GetFileInformationByHandleEx(Requires: #include <WinAPIFiles.au3>) |Retrieves file information for the specified file , $hFile)
Function _WinAPI_GetFilePointerEx(Requires: #include <WinAPIFiles.au3>) |Retrieves the file pointer of the specified file , $hFile)
Function _WinAPI_GetFileSizeEx(Requires: #include <WinAPI.au3>) |Retrieves the size of the specified file , $hFile)
Function _WinAPI_GetFileSizeOnDisk(Requires: #include <WinAPIFiles.au3>) |Retrieves the file allocation size on disk , $sFilePath)
Function _WinAPI_GetFileTitle(Requires: #include <WinAPIFiles.au3>) |Retrieves the name of the specified file , $sFilePath)
Function _WinAPI_GetFileType(Requires: #include <WinAPIFiles.au3>) |Retrieves the file type of the specified file , $hFile)
Function _WinAPI_GetFileVersionInfo(Requires: #include <WinAPIRes.au3>) |Retrieves version information for the specified file , $sFilePath, ByRef $pBuffer [, $iFlags = 0])
Function _WinAPI_GetFinalPathNameByHandle(Requires: #include <WinAPIFiles.au3>) |Retrieves the final path of the specified file , $hFile)
Function _WinAPI_GetFinalPathNameByHandleEx(Requires: #include <WinAPIFiles.au3>) |Retrieves the final path of the specified file , $hFile [, $iFlags = 0])
Function _WinAPI_GetFocus(Requires: #include <WinAPI.au3>) |Retrieves the handle of the window that has the keyboard focus 
Function _WinAPI_GetFontMemoryResourceInfo(Requires: #include <GDIPlus.au3>) |Reads out font information from a TTF loaded into the memory , $pMemory [, $iFlag = 1])
Function _WinAPI_GetFontName(Requires: #include <WinAPIGdi.au3>) |Retrieves the unique name of the font based on its typeface name, character set, and style , $sFaceName [, $iStyle = 0 [, $iCharSet = 1]])
Function _WinAPI_GetFontResourceInfo(Requires: #include <WinAPIGdi.au3>) |Retrieves the fontname from the specified font resource file , $sFont [, $bForce = False [, $iFlag = Default]])
Function _WinAPI_GetForegroundWindow(Requires: #include <WinAPI.au3>) |Returns the handle of the foreground window 
Function _WinAPI_GetFRBuffer() |Retrieves the current size of the internal buffer that used the _WinAPI_FindTextDlg and _WinAPI_ReplaceTextDlg() functions (Requires: #include <WinAPIDlg.au3>)
Function _WinAPI_GetFullPathName(Requires: #include <WinAPIFiles.au3>) |Retrieves the full path and file name of the specified file , $sFilePath)
Function _WinAPI_GetGeoInfo(Requires: #include <WinAPILocale.au3>) |Retrieves information about a specified geographical location , $iGEOID, $iType [, $iLanguage = 0])
Function _WinAPI_GetGlyphOutline(Requires: #include <WinAPIGdi.au3>) |Retrieves the outline or bitmap for a character in the TrueType font , $hDC, $sChar, $iFormat, ByRef $pBuffer [, $tMAT2 = 0])
Function _WinAPI_GetGraphicsMode(Requires: #include <WinAPIGdi.au3>) |Retrieves the current graphics mode for the specified device context , $hDC)
Function _WinAPI_GetGuiResources(GUI) |Retrieves the count of handles to graphical user interface objects in use by the specified process (Requires: #include <WinAPI.au3>), [$iFlag = 0 [, $hProcess = -1]])
Function _WinAPI_GetGUIThreadInfo(Requires: #include <WinAPISys.au3>) |Retrieves information about the active window or a specified GUI thread , $iThreadId)
Function _WinAPI_GetGValue(Requires: #include <WinAPIGdi.au3>) |Retrieves an intensity value for the green component of a 32-bit RGB value , $iRGB)
Function _WinAPI_GetHandleInformation(Requires: #include <WinAPISys.au3>) |Retrieves certain properties of an object handle , $hObject)
Function _WinAPI_GetHGlobalFromStream(Requires: #include <WinAPICom.au3>) |Retrieves the global memory handle to a stream , $pStream)
Function _WinAPI_GetIconDimension(Requires: #include <WinAPIGdi.au3>) |Retrieves a dimension of the specified icon , $hIcon)
Function _WinAPI_GetIconInfo(Requires: #include <WinAPI.au3>) |Retrieves information about the specified icon or cursor , $hIcon)
Function _WinAPI_GetIconInfoEx(Requires: #include <WinAPIRes.au3>) |Retrieves information about the specified icon or cursor , $hIcon)
Function _WinAPI_GetIdleTime(Requires: #include <WinAPISys.au3>) |Retrieves the time that has elapsed since the last input 
Function _WinAPI_GetKeyboardLayout(Requires: #include <WinAPISys.au3>) |Retrieves the active input locale identifier for the specified window , $hWnd)
Function _WinAPI_GetKeyboardLayoutList(Requires: #include <WinAPISys.au3>) |Retrieves the all input locale identifiers corresponding to the current set of input locales in the system 
Function _WinAPI_GetKeyboardState(Requires: #include <WinAPISys.au3>) |Copies the status of the 256 virtual keys to the specified buffer 
Function _WinAPI_GetKeyboardType(Requires: #include <WinAPISys.au3>) |Retrieves information about the current keyboard , $iType)
Function _WinAPI_GetKeyNameText(Requires: #include <WinAPISys.au3>) |Retrieves a string that represents the name of a key , $lParam)
Function _WinAPI_GetKeyState(Requires: #include <WinAPISys.au3>) |Retrieves the status of the specified virtual key , $vKey)
Function _WinAPI_GetLastActivePopup(Requires: #include <WinAPISys.au3>) |Determines which pop-up window owned by the specified window was most recently active , $hWnd)
Function _WinAPI_GetLastError(Requires: #include <WinAPI.au3>) |Returns the calling thread's lasterror code value 
Function _WinAPI_GetLastErrorMessage(Requires: #include <WinAPI.au3>) |Returns the calling threads last error message 
Function _WinAPI_GetLayeredWindowAttributes(Requires: #include <WinAPI.au3>) |Gets Layered Window Attributes , $hWnd, ByRef $iTransColor, ByRef $iTransGUI [, $bColorRef = False])
Function _WinAPI_GetLocaleInfo(Requires: #include <WinAPILocale.au3>) |Retrieves information about a locale specified by identifier , $iLCID, $iType)
Function _WinAPI_GetLogicalDrives(Requires: #include <WinAPIFiles.au3>) |Retrieves a bitmask representing the currently available disk drives 
Function _WinAPI_GetMapMode(Requires: #include <WinAPIGdi.au3>) |Retrieves the current mapping mode , $hDC)
Function _WinAPI_GetMemorySize(Requires: #include <WinAPISys.au3>) |Retrieves the size of a memory block allocated from the internal library heap , $pMemory)
Function _WinAPI_GetMessageExtraInfo(Requires: #include <WinAPISys.au3>) |Retrieves the extra message information for the current thread 
Function _WinAPI_GetModuleFileNameEx(Requires: #include <WinAPIProc.au3>) |Retrieves the fully-qualified path for the file containing the specified module , $hProcess [, $hModule = 0])
Function _WinAPI_GetModuleHandle(Requires: #include <WinAPI.au3>) |Returns a module handle for the specified module , $sModuleName)
Function _WinAPI_GetModuleHandleEx(Requires: #include <WinAPISys.au3>) |Retrieves a module handle for the specified module , $sModule [, $iFlags = 0])
Function _WinAPI_GetModuleInformation(Requires: #include <WinAPIProc.au3>) |Retrieves information about the specified module , $hProcess [, $hModule = 0])
Function _WinAPI_GetMonitorInfo(Requires: #include <WinAPISys.au3>) |Retrieves information about a display monitor , $hMonitor)
Function _WinAPI_GetMousePos(Requires: #include <WinAPI.au3>) |Returns the current mouse position , [$bToClient = False [, $hWnd = 0]])
Function _WinAPI_GetMousePosX(Requires: #include <WinAPI.au3>) |Returns the current mouse X position , [$bToClient = False [, $hWnd = 0]])
Function _WinAPI_GetMousePosY(Requires: #include <WinAPI.au3>) |Returns the current mouse Y position , [$bToClient = False [, $hWnd = 0]])
Function _WinAPI_GetMUILanguage(Requires: #include <WinAPISys.au3>) |Gets the language currently in use by the common controls for a particular process 
Function _WinAPI_GetNumberFormat(Requires: #include <WinAPILocale.au3>) |Formats a number string as a number string customized for a locale specified by identifier , $iLCID, $sNumber [, $tNUMBERFMT = 0])
Function _WinAPI_GetObject(Requires: #include <WinAPI.au3>) |Retrieves information for the specified graphics object , $hObject, $iSize, $pObject)
Function _WinAPI_GetObjectID(Requires: #include <WinAPIFiles.au3>) |Retrieves the object identifier for the specified file or directory , $sFilePath)
Function _WinAPI_GetObjectInfoByHandle(Requires: #include <WinAPISys.au3>) |Retrieves information about a specified object , $hObject)
Function _WinAPI_GetObjectNameByHandle(Requires: #include <WinAPISys.au3>) |Retrieves a name of the specified object , $hObject)
Function _WinAPI_GetObjectType(Requires: #include <WinAPIGdi.au3>) |Retrieves the type of the specified object , $hObject)
Function _WinAPI_GetOpenFileName(Requires: #include <WinAPI.au3>) |Creates an Open dialog box that lets the user specify the drive, directory, and the name of a file or set of files to open , [$sTitle = "" [, $sFilter = "All files (*.*)
Function _WinAPI_GetOutlineTextMetrics(Requires: #include <WinAPIGdi.au3>) |Retrieves text metrics for TrueType fonts , $hDC)
Function _WinAPI_GetOverlappedResult(Requires: #include <WinAPI.au3>) |Retrieves the results of an overlapped operation , $hFile, $tOverlapped, ByRef $iBytes [, $bWait = False])
Function _WinAPI_GetParent(Requires: #include <WinAPI.au3>) |Retrieves the handle of the specified child window's parent window , $hWnd)
Function _WinAPI_GetParentProcess(Requires: #include <WinAPIProc.au3>) |Retrieves the PID of the parent process for the specified process , [$iPID = 0])
Function _WinAPI_GetPerformanceInfo(Requires: #include <WinAPISys.au3>) |Retrieves the performance information 
Function _WinAPI_GetPEType(PE) |Retrieves a type of the machine for the specified portable executable (Requires: #include <WinAPIFiles.au3>), $sFilePath)
Function _WinAPI_GetPhysicallyInstalledSystemMemory(Requires: #include <WinAPISys.au3>) |Retrieves the amount of RAM that is physically installed on the computer 
Function _WinAPI_GetPixel(Requires: #include <WinAPIGdi.au3>) |Retrieves the color value of the pixel at the specified coordinates , $hDC, $iX, $iY)
Function _WinAPI_GetPolyFillMode(Requires: #include <WinAPIGdi.au3>) |Retrieves the current polygon fill mode , $hDC)
Function _WinAPI_GetPosFromRect(Requires: #include <WinAPIGdi.au3>) |Interprets the coordinates of the rectangle as offset and position coordinates , $tRECT)
Function _WinAPI_GetPriorityClass(Requires: #include <WinAPIProc.au3>) |Retrieves the priority class for the specified process , [$iPID = 0])
Function _WinAPI_GetProcAddress(Requires: #include <WinAPI.au3>) |Retrieves the address of an exported function or variable from the specified module , $hModule, $vName)
Function _WinAPI_GetProcessAffinityMask(Requires: #include <WinAPI.au3>) |Obtains the affinity masks for the process and the system , $hProcess)
Function _WinAPI_GetProcessCommandLine(Requires: #include <WinAPIProc.au3>) |Retrieves the command-line string for the specified process , [$iPID = 0])
Function _WinAPI_GetProcessFileName(Requires: #include <WinAPIProc.au3>) |Retrieves the fully-qualified path of the executable file for the specified process , [$iPID = 0])
Function _WinAPI_GetProcessHandleCount(Requires: #include <WinAPIProc.au3>) |Retrieves the number of open handles that belong to the specified process , [$iPID = 0])
Function _WinAPI_GetProcessID(Requires: #include <WinAPIProc.au3>) |Retrieves the process identifier of the specified process , $hProcess)
Function _WinAPI_GetProcessIoCounters(Requires: #include <WinAPIProc.au3>) |Retrieves accounting information for all I/O operations performed by the specified process , [$iPID = 0])
Function _WinAPI_GetProcessMemoryInfo(Requires: #include <WinAPIProc.au3>) |Retrieves information about the memory usage of the specified process , [$iPID = 0])
Function _WinAPI_GetProcessName(Requires: #include <WinAPIProc.au3>) |Retrieves the name for the specified process , [$iPID = 0])
Function _WinAPI_GetProcessShutdownParameters(Requires: #include <WinAPISys.au3>) |Retrieves the shutdown parameters for the currently calling process 
Function _WinAPI_GetProcessTimes(Requires: #include <WinAPIProc.au3>) |Retrieves timing information for the specified process , [$iPID = 0])
Function _WinAPI_GetProcessUser(Requires: #include <WinAPIProc.au3>) |Retrieves the user and domain name for the specified process , [$iPID = 0])
Function _WinAPI_GetProcessWindowStation(Requires: #include <WinAPISys.au3>) |Retrieves a handle to the current window station for the calling process 
Function _WinAPI_GetProcessWorkingDirectory(Requires: #include <WinAPIProc.au3>) |Retrieves the current working directory for the specified process , [$iPID = 0])
Function _WinAPI_GetProfilesDirectory(Requires: #include <WinAPIFiles.au3>) |Retrieves the path to the root directory where user profiles are stored 
Function _WinAPI_GetPwrCapabilities(Requires: #include <WinAPISys.au3>) |Retrieves information about the system power capabilities 
Function _WinAPI_GetRawInputBuffer(Requires: #include <WinAPISys.au3>) |Performs a buffered read of the raw input data , $pBuffer, $iLength)
Function _WinAPI_GetRawInputBufferLength() |Retrieves the required buffer size to call the _WinAPI_GetRawInputBuffer function (Requires: #include <WinAPISys.au3>)
Function _WinAPI_GetRawInputData(Requires: #include <WinAPISys.au3>) |Retrieves the raw input from the specified device , $hRawInput, $pBuffer, $iLength, $iFlag)
Function _WinAPI_GetRawInputDeviceInfo(Requires: #include <WinAPISys.au3>) |Retrieves information about the raw input device , $hDevice, $pBuffer, $iLength, $iFlag)
Function _WinAPI_GetRegionData(Requires: #include <WinAPIGdi.au3>) |Fills the specified buffer with data describing a region , $hRgn, ByRef $tRGNDATA)
Function _WinAPI_GetRegisteredRawInputDevices(Requires: #include <WinAPISys.au3>) |Retrieves the information about the raw input devices for the current application , $pBuffer, $iLength)
Function _WinAPI_GetRegKeyNameByHandle(Requires: #include <WinAPIReg.au3>) |Retrieves a name of the specified registry key , $hKey)
Function _WinAPI_GetRgnBox(Requires: #include <WinAPIGdi.au3>) |Retrieves the bounding rectangle of the specified region , $hRgn, ByRef $tRECT)
Function _WinAPI_GetROP2(Requires: #include <WinAPIGdi.au3>) |Retrieves the foreground mix mode of the specified device context , $hDC)
Function _WinAPI_GetRValue(Requires: #include <WinAPIGdi.au3>) |Retrieves an intensity value for the red component of a 32-bit RGB value , $iRGB)
Function _WinAPI_GetSaveFileName(Requires: #include <WinAPI.au3>) |Creates a Save dialog box that lets the user specify the drive, directory, and name of a file to save , [$sTitle = "" [, $sFilter = "All files (*.*)
Function _WinAPI_GetShellWindow(Requires: #include <WinAPISys.au3>) |Retrieves a handle to the Shell's desktop window 
Function _WinAPI_GetStartupInfo(Requires: #include <WinAPISys.au3>) |Retrieves the contents of the STARTUPINFO structure that was specified when the calling process was created 
Function _WinAPI_GetStdHandle(Requires: #include <WinAPI.au3>) |Retrieves a handle for the standard input, standard output, or standard error device , $iStdHandle)
Function _WinAPI_GetStockObject(Requires: #include <WinAPI.au3>) |Retrieves a handle to one of the predefined stock pens, brushes, fonts, or palettes , $iObject)
Function _WinAPI_GetStretchBltMode(Requires: #include <WinAPIGdi.au3>) |Retrieves the current stretching mode , $hDC)
Function _WinAPI_GetString(Requires: #include <WinAPIMisc.au3>) |Returns a string located at the specified memory address , $pString [, $bUnicode = True])
Function _WinAPI_GetSysColor(Requires: #include <WinAPI.au3>) |Retrieves the current color of the specified display element , $iIndex)
Function _WinAPI_GetSysColorBrush(Requires: #include <WinAPI.au3>) |Retrieves a handle identifying a logical brush that corresponds to the specified color index , $iIndex)
Function _WinAPI_GetSystemDefaultLangID(Requires: #include <WinAPILocale.au3>) |Returns the language identifier for the system locale 
Function _WinAPI_GetSystemDefaultLCID(LCID) |Returns the locale identifier for the system locale (Requires: #include <WinAPILocale.au3>)
Function _WinAPI_GetSystemDefaultUILanguage(Requires: #include <WinAPILocale.au3>) |Retrieves the language identifier for the system default UI language of the operating system 
Function _WinAPI_GetSystemDEPPolicy(DEP) |Gets the data execution prevention policy setting for the system (Requires: #include <WinAPISys.au3>)
Function _WinAPI_GetSystemInfo(Requires: #include <WinAPISys.au3>) |Retrieves information about the current system 
Function _WinAPI_GetSystemMetrics(Requires: #include <WinAPI.au3>) |Retrieves the specified system metric or system configuration setting , $iIndex)
Function _WinAPI_GetSystemPowerStatus(Requires: #include <WinAPISys.au3>) |Retrieves the power status of the system 
Function _WinAPI_GetSystemTimes(Requires: #include <WinAPISys.au3>) |Retrieves system timing information 
Function _WinAPI_GetSystemWow64Directory(Requires: #include <WinAPISys.au3>) |Retrieves the path of the system directory used by WOW64 
Function _WinAPI_GetTabbedTextExtent(Requires: #include <WinAPIGdi.au3>) |Computes the width and height of a character string which may contain one or more tab characters , $hDC, $sText [, $aTab = 0 [, $iStart = 0 [, $iEnd = -1]]])
Function _WinAPI_GetTempFileName(Requires: #include <WinAPIFiles.au3>) |Creates a name for a temporary file , $sFilePath [, $sPrefix = ''])
Function _WinAPI_GetTextAlign(Requires: #include <WinAPIGdi.au3>) |Retrieves the text-alignment setting for the specified device context , $hDC)
Function _WinAPI_GetTextCharacterExtra(Requires: #include <WinAPIGdi.au3>) |Retrieves the current intercharacter spacing for the specified device context , $hDC)
Function _WinAPI_GetTextColor(Requires: #include <WinAPIGdi.au3>) |Retrieves the current text color for the specified device context , $hDC)
Function _WinAPI_GetTextExtentPoint32(Requires: #include <WinAPI.au3>) |Computes the width and height of the specified string of text , $hDC, $sText)
Function _WinAPI_GetTextFace(Requires: #include <WinAPIGdi.au3>) |Retrieves the typeface name of the font that is selected into the specified device context , $hDC)
Function _WinAPI_GetTextMetrics(Requires: #include <WinAPI.au3>) |Retrieves basic information for the currently selected font , $hDC)
Function _WinAPI_GetThemeAppProperties(Requires: #include <WinAPITheme.au3>) |Retrieves the property flags that control how visual styles are applied in the current application 
Function _WinAPI_GetThemeBackgroundContentRect(Requires: #include <WinAPITheme.au3>) |Retrieves the size of the content area for the background defined by the visual style , $hTheme, $iPartID, $iStateID, $hDC, $tRECT)
Function _WinAPI_GetThemeBackgroundExtent(Requires: #include <WinAPITheme.au3>) |Calculates the size and location of the background, defined by the visual style, given the content area , $hTheme, $iPartID, $iStateID, $hDC, $tRECT)
Function _WinAPI_GetThemeBackgroundRegion(Requires: #include <WinAPITheme.au3>) |Computes the region for a regular or partially transparent background that is bounded by a specified rectangle , $hTheme, $iPartID, $iStateID, $hDC, $tRECT)
Function _WinAPI_GetThemeBitmap(Requires: #include <WinAPITheme.au3>) |Retrieves the bitmap associated with a particular theme, part, state, and property , $hTheme, $iPartID, $iStateID, $iPropID [, $iFlag = 0x01])
Function _WinAPI_GetThemeBool(Requires: #include <WinAPITheme.au3>) |Retrieves the value of a BOOL property from the SysMetrics section of theme data , $hTheme, $iPartID, $iStateID, $iPropID)
Function _WinAPI_GetThemeColor(Requires: #include <WinAPITheme.au3>) |Retrieves the value of a color property , $hTheme, $iPartID, $iStateID, $iPropID)
Function _WinAPI_GetThemeDocumentationProperty(Requires: #include <WinAPITheme.au3>) |Retrieves the value for a theme property from the documentation section of the specified theme file , $sFilePath, $sProperty)
Function _WinAPI_GetThemeEnumValue(Requires: #include <WinAPITheme.au3>) |Retrieves the value of an enumerated type property , $hTheme, $iPartID, $iStateID, $iPropID)
Function _WinAPI_GetThemeFilename(Requires: #include <WinAPITheme.au3>) |Retrieves the value of a filename property , $hTheme, $iPartID, $iStateID, $iPropID)
Function _WinAPI_GetThemeFont(Requires: #include <WinAPITheme.au3>) |Retrieves the value of a font property , $hTheme, $iPartID, $iStateID, $iPropID [, $hDC = 0])
Function _WinAPI_GetThemeInt(Requires: #include <WinAPITheme.au3>) |Retrieves the value of an INT property , $hTheme, $iPartID, $iStateID, $iPropID)
Function _WinAPI_GetThemeMargins(Requires: #include <WinAPITheme.au3>) |Retrieves the value of a margins property , $hTheme, $iPartID, $iStateID, $iPropID, $hDC, $tRECT)
Function _WinAPI_GetThemeMetric(Requires: #include <WinAPITheme.au3>) |Retrieves the value of a metric property , $hTheme, $iPartID, $iStateID, $iPropID [, $hDC = 0])
Function _WinAPI_GetThemePartSize(Requires: #include <WinAPITheme.au3>) |Calculates the original size of the part defined by a visual style , $hTheme, $iPartID, $iStateID, $hDC, $tRECT, $iType)
Function _WinAPI_GetThemePosition(Requires: #include <WinAPITheme.au3>) |Retrieves the value of a position property , $hTheme, $iPartID, $iStateID, $iPropID)
Function _WinAPI_GetThemePropertyOrigin(Requires: #include <WinAPITheme.au3>) |Retrieves the location of the theme property definition for a property , $hTheme, $iPartID, $iStateID, $iPropID)
Function _WinAPI_GetThemeRect(Requires: #include <WinAPITheme.au3>) |Retrieves the value of a RECT property , $hTheme, $iPartID, $iStateID, $iPropID)
Function _WinAPI_GetThemeString(Requires: #include <WinAPITheme.au3>) |Retrieves the value of a string property , $hTheme, $iPartID, $iStateID, $iPropID)
Function _WinAPI_GetThemeSysBool(Requires: #include <WinAPITheme.au3>) |Retrieves the Boolean value of a system metric , $hTheme, $iBoolID)
Function _WinAPI_GetThemeSysColor(Requires: #include <WinAPITheme.au3>) |Retrieves the value of a system color , $hTheme, $iColorID)
Function _WinAPI_GetThemeSysColorBrush(Requires: #include <WinAPITheme.au3>) |Retrieves a system color brush , $hTheme, $iColorID)
Function _WinAPI_GetThemeSysFont(Requires: #include <WinAPITheme.au3>) |Retrieves the font information of a system font , $hTheme, $iFontID)
Function _WinAPI_GetThemeSysInt(Requires: #include <WinAPITheme.au3>) |Retrieves the value of a system INT , $hTheme, $iIntID)
Function _WinAPI_GetThemeSysSize(Requires: #include <WinAPITheme.au3>) |Retrieves the value of a system size metric from theme data , $hTheme, $iSizeID)
Function _WinAPI_GetThemeSysString(Requires: #include <WinAPITheme.au3>) |Retrieves the value of a system string , $hTheme, $iStringID)
Function _WinAPI_GetThemeTextExtent(Requires: #include <WinAPITheme.au3>) |Calculates the size and location of the specified text when rendered in the visual style font , $hTheme, $iPartID, $iStateID, $hDC, $sText, $tRECT, $iFlags)
Function _WinAPI_GetThemeTextMetrics(Requires: #include <WinAPITheme.au3>) |Retrieves information about the font specified by a visual style for a particular part , $hTheme, $iPartID, $iStateID [, $hDC = 0])
Function _WinAPI_GetThemeTransitionDuration(Requires: #include <WinAPITheme.au3>) |Gets the duration for the specified transition , $hTheme, $iPartID, $iStateIDFrom, $iStateIDTo, $iPropID)
Function _WinAPI_GetThreadDesktop(Requires: #include <WinAPIProc.au3>) |Retrieves a handle to the desktop assigned to the specified thread , $iThreadId)
Function _WinAPI_GetThreadErrorMode(Requires: #include <WinAPIProc.au3>) |Retrieves the error mode for the calling thread 
Function _WinAPI_GetThreadLocale(Requires: #include <WinAPILocale.au3>) |Retrieves the locale identifier of the current locale for the calling thread 
Function _WinAPI_GetThreadUILanguage(Requires: #include <WinAPILocale.au3>) |Retrieves the language identifier of the first user interface language for the current thread 
Function _WinAPI_GetTickCount(Requires: #include <WinAPISys.au3>) |Retrieves the number of milliseconds that have elapsed since the system was started 
Function _WinAPI_GetTickCount64(Requires: #include <WinAPISys.au3>) |Retrieves the number of milliseconds that have elapsed since the system was started 
Function _WinAPI_GetTimeFormat(Requires: #include <WinAPILocale.au3>) |Formats time as a time string for a locale specified by identifier , [$iLCID = 0 [, $tSYSTEMTIME = 0 [, $iFlags = 0 [, $sFormat = '']]]])
Function _WinAPI_GetTopWindow(Requires: #include <WinAPISys.au3>) |Retrieves a handle to the child window at the top of the Z order , $hWnd)
Function _WinAPI_GetUDFColorMode(Requires: #include <WinAPIGdi.au3>) |Retrieves the current color mode for WinAPIEx UDF library 
Function _WinAPI_GetUpdateRect(Requires: #include <WinAPIGdi.au3>) |Retrieves the coordinates of the rectangle that completely encloses the update region of the specified window , $hWnd [, $bErase = True])
Function _WinAPI_GetUpdateRgn(Requires: #include <WinAPIGdi.au3>) |Retrieves the update region of a window by copying it into the specified region , $hWnd, $hRgn [, $bErase = True])
Function _WinAPI_GetUserDefaultLangID(Requires: #include <WinAPILocale.au3>) |Returns the language identifier for the current user locale 
Function _WinAPI_GetUserDefaultLCID(LCID) |Returns the locale identifier for the user default locale (Requires: #include <WinAPILocale.au3>)
Function _WinAPI_GetUserDefaultUILanguage(Requires: #include <WinAPILocale.au3>) |Returns the language identifier for the user UI language for the current user 
Function _WinAPI_GetUserGeoID(Requires: #include <WinAPILocale.au3>) |Retrieves information about the geographical location of the user 
Function _WinAPI_GetUserObjectInformation(Requires: #include <WinAPISys.au3>) |Retrieves information about the specified window station or desktop object , $hObject, $iIndex)
Function _WinAPI_GetVersion(Requires: #include <WinAPISys.au3>) |Retrieves version of the current operating system 
Function _WinAPI_GetVersionEx(Requires: #include <WinAPISys.au3>) |Retrieves information about the current operating system 
Function _WinAPI_GetVolumeInformation(Requires: #include <WinAPIFiles.au3>) |Retrieves information about the file system and volume associated with the specified root directory , [$sRoot = ''])
Function _WinAPI_GetVolumeInformationByHandle(Requires: #include <WinAPIFiles.au3>) |Retrieves information about the file system and volume associated with the specified file , $hFile)
Function _WinAPI_GetVolumeNameForVolumeMountPoint(Requires: #include <WinAPIFiles.au3>) |Retrieves a volume GUID path for the volume that is associated with the specified volume mount point , $sMountedPath)
Function _WinAPI_GetWindow(Requires: #include <WinAPI.au3>) |Retrieves the handle of a window that has a specified relationship to the specified window , $hWnd, $iCmd)
Function _WinAPI_GetWindowDC(DC) |Retrieves the device context for the entire window (Requires: #include <WinAPI.au3>), $hWnd)
Function _WinAPI_GetWindowDisplayAffinity(Requires: #include <WinAPISys.au3>) |Retrieves the current display affinity setting, from any process, for a given window , $hWnd)
Function _WinAPI_GetWindowExt(Requires: #include <WinAPIGdi.au3>) |Retrieves the x-extent and y-extent of the window for the specified device context , $hDC)
Function _WinAPI_GetWindowFileName(Requires: #include <WinAPIProc.au3>) |Retrieves the fully-qualified path of the module associated with the specified window handle , $hWnd)
Function _WinAPI_GetWindowHeight(Requires: #include <WinAPI.au3>) |Returns the height of the window , $hWnd)
Function _WinAPI_GetWindowInfo(Requires: #include <WinAPISys.au3>) |Retrieves information about the specified window , $hWnd)
Function _WinAPI_GetWindowLong(Requires: #include <WinAPI.au3>) |Retrieves information about the specified window , $hWnd, $iIndex)
Function _WinAPI_GetWindowOrg(Requires: #include <WinAPIGdi.au3>) |Retrieves the x-coordinates and y-coordinates of the window origin for the specified device context , $hDC)
Function _WinAPI_GetWindowPlacement(Requires: #include <WinAPI.au3>) |Retrieves the placement of the window for Min, Max, and normal positions , $hWnd)
Function _WinAPI_GetWindowRect(Requires: #include <WinAPI.au3>) |Retrieves the dimensions of the bounding rectangle of the specified window , $hWnd)
Function _WinAPI_GetWindowRgn(Requires: #include <WinAPI.au3>) |Obtains a copy of the window region of a window , $hWnd, $hRgn)
Function _WinAPI_GetWindowRgnBox(Requires: #include <WinAPIGdi.au3>) |Retrieves the dimensions of the tightest bounding rectangle for the window region of a window , $hWnd, ByRef $tRECT)
Function _WinAPI_GetWindowSubclass(Requires: #include <WinAPIShellEx.au3>) |Retrieves the reference data for the specified window subclass callback , $hWnd, $pSubclassProc, $idSubClass)
Function _WinAPI_GetWindowText(Requires: #include <WinAPI.au3>) |Retrieves the text of the specified window's title bar , $hWnd)
Function _WinAPI_GetWindowTheme(Requires: #include <WinAPITheme.au3>) |Retrieves a theme handle to a window that has visual styles applied , $hWnd)
Function _WinAPI_GetWindowThreadProcessId(Requires: #include <WinAPI.au3>) |Retrieves the identifier of the thread that created the specified window , $hWnd, ByRef $iPID)
Function _WinAPI_GetWindowWidth(Requires: #include <WinAPI.au3>) |Returns the width of the window , $hWnd)
Function _WinAPI_GetWorkArea(Requires: #include <WinAPISys.au3>) |Retrieves the size of the working area on the primary display monitor 
Function _WinAPI_GetWorldTransform(Requires: #include <WinAPIGdi.au3>) |Retrieves the current world-space to page-space transformation , $hDC)
Function _WinAPI_GetXYFromPoint(Requires: #include <WinAPI.au3>) |Returns the X/Y values from a $tagPOINT structure , ByRef $tPoint, ByRef $iX, ByRef $iY)
Function _WinAPI_GlobalMemoryStatus(Requires: #include <WinAPI.au3>) |Retrieves information about current available memory 
Function _WinAPI_GradientFill(Requires: #include <WinAPIGdi.au3>) |Fills rectangle or triangle gradient , $hDC, Const ByRef $aVertex [, $iStart = 0 [, $iEnd = -1 [, $bRotate = False]]])
Function _WinAPI_GUIDFromString(Requires: #include <WinAPI.au3>) |Converts a string GUID to binary form , $sGUID)
Function _WinAPI_GUIDFromStringEx(Requires: #include <WinAPI.au3>) |Converts a string GUID to binary form , $sGUID, $tGUID)
Function _WinAPI_HashData(Requires: #include <WinAPIMisc.au3>) |Hashes a memory block , $pMemory, $iSize [, $iLength = 32])
Function _WinAPI_HashString(Requires: #include <WinAPIMisc.au3>) |Hashes a string , $sString [, $bCaseSensitive = True [, $iLength = 32]])
Function _WinAPI_HiByte(2 bytes) |Returns the high BYTE of a 16-bit value (Requires: #include <WinAPIMisc.au3>), $iValue)
Function _WinAPI_HideCaret(Requires: #include <WinAPIRes.au3>) |Removes the caret from the screen , $hWnd)
Function _WinAPI_HiDWord(8 bytes) |Returns the high DWORD of a 64-bit value (Requires: #include <WinAPIMisc.au3>), $iValue)
Function _WinAPI_HiWord(Requires: #include <WinAPI.au3>) |Returns the high word of a longword value , $iLong)
Function _WinAPI_InflateRect(Requires: #include <WinAPIGdi.au3>) |Increases or decreases the width and height of the specified rectangle , ByRef $tRECT, $iDX, $iDY)
Function _WinAPI_InitMUILanguage(Requires: #include <WinAPISys.au3>) |Enables an application to specify a language to be used with the common controls that is different from the system language , $iLanguage)
Function _WinAPI_InProcess(Requires: #include <WinAPI.au3>) |Determines whether a window belongs to the current process , $hWnd, ByRef $hLastWnd)
Function _WinAPI_IntersectClipRect(Requires: #include <WinAPIGdi.au3>) |Creates a new clipping region from the intersection of the current clipping region and the specified rectangle , $hDC, $tRECT)
Function _WinAPI_IntersectRect(Requires: #include <WinAPIGdi.au3>) |Creates the intersection of two rectangles , $tRECT1, $tRECT2)
Function _WinAPI_IntToDWord(Requires: #include <WinAPIMisc.au3>) |Converts a value of type INT to a value of type DWORD , $iValue)
Function _WinAPI_IntToFloat(Requires: #include <WinAPI.au3>) |Returns a 4 byte integer as a float value , $iInt)
Function _WinAPI_InvalidateRect(Requires: #include <WinAPI.au3>) |Adds a rectangle to the specified window's update region , $hWnd [, $tRECT = 0 [, $bErase = True]])
Function _WinAPI_InvalidateRgn(Requires: #include <WinAPIGdi.au3>) |Adds a region to the specified window's update region , $hWnd [, $hRgn = 0 [, $bErase = True]])
Function _WinAPI_InvertANDBitmap(Requires: #include <WinAPIGdi.au3>) |Inverts the specified AND bitmask bitmap by performing a logical NOT operation , $hBitmap [, $bDelete = False])
Function _WinAPI_InvertColor(negative) |Inverts the specified color (Requires: #include <WinAPIGdi.au3>), $iColor)
Function _WinAPI_InvertRect(Requires: #include <WinAPIGdi.au3>) |Inverts a rectangle in a window by performing a logical NOT operation on the color values for each pixel , $hDC, $tRECT)
Function _WinAPI_InvertRgn(Requires: #include <WinAPIGdi.au3>) |Inverts the colors in the specified region , $hDC, $hRgn)
Function _WinAPI_IOCTL(IOCTL) |Create a unique system I/O control code (Requires: #include <WinAPIFiles.au3>), $iDeviceType, $iFunction, $iMethod, $iAccess)
Function _WinAPI_IsAlphaBitmap(Requires: #include <WinAPIGdi.au3>) |Determines whether the specified bitmap has an alpha channel , $hBitmap)
Function _WinAPI_IsBadCodePtr(Requires: #include <WinAPISys.au3>) |Determines whether the calling process has read access to the memory at the specified address , $pAddress)
Function _WinAPI_IsBadReadPtr(Requires: #include <WinAPISys.au3>) |Verifies that the calling process has read access to the specified range of memory , $pAddress, $iLength)
Function _WinAPI_IsBadStringPtr(Requires: #include <WinAPISys.au3>) |Verifies that the calling process has read access to the specified range of memory , $pAddress, $iLength)
Function _WinAPI_IsBadWritePtr(Requires: #include <WinAPISys.au3>) |Verifies that the calling process has write access to the specified range of memory , $pAddress, $iLength)
Function _WinAPI_IsChild(Requires: #include <WinAPISys.au3>) |Tests whether a window is a child window of a specified parent window , $hWnd, $hWndParent)
Function _WinAPI_IsClassName(Requires: #include <WinAPI.au3>) |Wrapper to check ClassName of the control , $hWnd, $sClassName)
Function _WinAPI_IsDoorOpen(DVD) |Checks if a CD tray is open (Requires: #include <WinAPIFiles.au3>), $sDrive)
Function _WinAPI_IsElevated(Requires: #include <WinAPIProc.au3>) |Determines whether the current process is elevated 
Function _WinAPI_IsHungAppWindow(Requires: #include <WinAPISys.au3>) |Determines whether the specified application is not responding , $hWnd)
Function _WinAPI_IsIconic(iconic) |Determines whether the specified window is minimized (Requires: #include <WinAPISys.au3>), $hWnd)
Function _WinAPI_IsInternetConnected(Requires: #include <WinAPIDiag.au3>) |Determines whether the current user is connected to the Internet 
Function _WinAPI_IsLoadKBLayout(Requires: #include <WinAPISys.au3>) |Determines whether the specified input locale loaded into the system , $iLanguage)
Function _WinAPI_IsMemory(Requires: #include <WinAPISys.au3>) |Determines whether the specified pointer points to the memory block in the internal library heap , $pMemory)
Function _WinAPI_IsNameInExpression(Requires: #include <WinAPIShPath.au3>) |Determines whether a string matches the specified pattern , $sString, $sPattern [, $bCaseSensitive = False])
Function _WinAPI_IsNetworkAlive(Requires: #include <WinAPIDiag.au3>) |Determines whether or not a local system is connected to a network, and identifies the type of network connection 
Function _WinAPI_IsPathShared(Requires: #include <WinAPIFiles.au3>) |Determines whether the path is shared , $sFilePath)
Function _WinAPI_IsProcessInJob(Requires: #include <WinAPIProc.au3>) |Determines whether the process is running in the specified job , $hProcess [, $hJob = 0])
Function _WinAPI_IsProcessorFeaturePresent(Requires: #include <WinAPISys.au3>) |Determines whether the specified processor feature is supported by the current computer , $iFeature)
Function _WinAPI_IsRectEmpty(Requires: #include <WinAPIGdi.au3>) |Determines whether the specified rectangle is empty , $tRECT)
Function _WinAPI_IsThemeActive(Requires: #include <WinAPITheme.au3>) |Tests if a visual style for the current application is active 
Function _WinAPI_IsThemeBackgroundPartiallyTransparent(Requires: #include <WinAPITheme.au3>) |Retrieves whether the background specified by the visual style has transparent pieces or alpha-blended pieces , $hTheme, $iPartID, $iStateID)
Function _WinAPI_IsThemePartDefined(Requires: #include <WinAPITheme.au3>) |Retrieves whether a visual style has defined parameters for the specified part , $hTheme, $iPartID)
Function _WinAPI_IsValidLocale(Requires: #include <WinAPILocale.au3>) |Determines if the specified locale is installed or supported on the operating system , $iLCID [, $iFlag = 0])
Function _WinAPI_IsWindow(Requires: #include <WinAPI.au3>) |Determines whether the specified window handle identifies an existing window , $hWnd)
Function _WinAPI_IsWindowEnabled(Requires: #include <WinAPISys.au3>) |Determines whether the specified window is enabled for mouse and keyboard input , $hWnd)
Function _WinAPI_IsWindowUnicode(Requires: #include <WinAPISys.au3>) |Determines whether the specified window is a native Unicode window , $hWnd)
Function _WinAPI_IsWindowVisible(Requires: #include <WinAPI.au3>) |Retrieves the visibility state of the specified window , $hWnd)
Function _WinAPI_IsWow64Process(Requires: #include <WinAPIProc.au3>) |Determines whether the specified process is running under WOW64 , [$iPID = 0])
Function _WinAPI_IsWritable(Requires: #include <WinAPIFiles.au3>) |Determines whether a disk is writable , $sDrive)
Function _WinAPI_IsZoomed(Requires: #include <WinAPISys.au3>) |Determines whether a window is maximized , $hWnd)
Function _WinAPI_Keybd_Event(Requires: #include <WinAPISys.au3>) |Synthesizes a keystroke , $vKey, $iFlags [, $iScanCode = 0 [, $iExtraInfo = 0]])
Function _WinAPI_KillTimer(Requires: #include <WinAPISys.au3>) |Destroys the specified timer , $hWnd, $iTimerID)
Function _WinAPI_LineDDA(Requires: #include <WinAPIGdi.au3>) |Determines which pixels should be highlighted for a line , $iX1, $iY1, $iX2, $iY2, $pLineProc [, $pData = 0])
Function _WinAPI_LineTo(Requires: #include <WinAPI.au3>) |Draws a line from the current position up to, but not including, the specified point , $hDC, $iX, $iY)
Function _WinAPI_LoadBitmap(Requires: #include <WinAPI.au3>) |Loads the specified bitmap resource from a module's executable file , $hInstance, $sBitmap)
Function _WinAPI_LoadCursor(.exe) |Loads the specified cursor resource from the executable file (Requires: #include <WinAPIRes.au3>), $hInstance, $sName)
Function _WinAPI_LoadCursorFromFile(Requires: #include <WinAPIRes.au3>) |Creates a cursor based on data contained in a file , $sFilePath)
Function _WinAPI_LoadIcon(.exe) |Loads the specified icon resource from the executable file associated with an application instance (Requires: #include <WinAPIRes.au3>), $hInstance, $sName)
Function _WinAPI_LoadIconMetric(Requires: #include <WinAPISys.au3>) |Loads a specified icon resource with a client-specified system metric , $hInstance, $sName, $iMetric)
Function _WinAPI_LoadIconWithScaleDown(Requires: #include <WinAPISys.au3>) |Loads an icon and scales down a larger image instead of scaling up a smaller image , $hInstance, $sName, $iWidth, $iHeight)
Function _WinAPI_LoadImage(Requires: #include <WinAPI.au3>) |Loads an icon, cursor, or bitmap , $hInstance, $sImage, $iType, $iXDesired, $iYDesired, $iLoad)
Function _WinAPI_LoadIndirectString(Requires: #include <WinAPIRes.au3>) |Extracts the string from the specified resource when given an indirect string , $sStrIn)
Function _WinAPI_LoadKeyboardLayout(Requires: #include <WinAPISys.au3>) |Loads a new input locale identifier into the system , $iLanguage [, $iFlag = 0])
Function _WinAPI_LoadLibrary(Requires: #include <WinAPI.au3>) |Maps a specified executable module into the address space of the calling process , $sFileName)
Function _WinAPI_LoadLibraryEx(Requires: #include <WinAPI.au3>) |Maps a specified executable module into the address space of the calling process , $sFileName [, $iFlags = 0])
Function _WinAPI_LoadMedia(Requires: #include <WinAPIFiles.au3>) |Loads media into a device , $sDrive)
Function _WinAPI_LoadResource(Requires: #include <WinAPIRes.au3>) |Loads the specified resource into global memory , $hInstance, $hResource)
Function _WinAPI_LoadShell32Icon(Requires: #include <WinAPI.au3>) |Extracts an icon from the shell32.dll file , $iIconID)
Function _WinAPI_LoadString(Requires: #include <WinAPI.au3>) |loads a string resource from the executable file associated with a specified module , $hInstance, $iStringID)
Function _WinAPI_LoadStringEx(Requires: #include <WinAPIRes.au3>) |Loads a string resource for the specified language from the specified module , $hModule, $iID [, $iLanguage = $LOCALE_USER_DEFAULT])
Function _WinAPI_LoByte(2 bytes) |Returns the low BYTE of a 16-bit value (Requires: #include <WinAPIMisc.au3>), $iValue)
Function _WinAPI_LocalFree(Requires: #include <WinAPI.au3>) |Frees the specified local memory object and invalidates its handle , $hMemory)
Function _WinAPI_LockDevice(Requires: #include <WinAPIFiles.au3>) |Enables or disables the mechanism that ejects media, for those devices possessing that locking capability , $sDrive, $bLock)
Function _WinAPI_LockFile(Requires: #include <WinAPIFiles.au3>) |Locks the specified file for exclusive access by the calling process , $hFile, $iOffset, $iLength)
Function _WinAPI_LockResource(Requires: #include <WinAPIRes.au3>) |Locks the specified resource in memory , $hData)
Function _WinAPI_LockWindowUpdate(Requires: #include <WinAPIGdi.au3>) |Disables or enables drawing in the specified window , $hWnd)
Function _WinAPI_LockWorkStation(Requires: #include <WinAPISys.au3>) |Locks the workstation's display 
Function _WinAPI_LoDWord(8 bytes) |Returns the low DWORD of a 64-bit value (Requires: #include <WinAPIMisc.au3>), $iValue)
Function _WinAPI_LongMid(32-bit) |Extracts a number of bits from a DWORD value (Requires: #include <WinAPIMisc.au3>), $iValue, $iStart, $iCount)
Function _WinAPI_LookupIconIdFromDirectoryEx(Requires: #include <WinAPIRes.au3>) |Searches through icon or cursor data for the icon or cursor that best fits the current display device , $pData [, $bIcon = True [, $iXDesiredPixels = 0 [, $iYDesiredPixels = 0 [, $iFlags = 0]]]])
Function _WinAPI_LoWord(Requires: #include <WinAPI.au3>) |Returns the low word of a longword , $iLong)
Function _WinAPI_LPtoDP(Requires: #include <WinAPIGdi.au3>) |Converts a logical coordinates into device coordinates , $hDC, ByRef $tPOINT [, $iCount = 1])
Function _WinAPI_MAKELANGID(Requires: #include <WinAPI.au3>) |Construct language id from a primary language id and a sublanguage id , $iLngIDPrimary, $iLngIDSub)
Function _WinAPI_MAKELCID(Requires: #include <WinAPI.au3>) |Construct locale id from a language id and a sort id , $iLngID, $iSortID)
Function _WinAPI_MakeLong(Requires: #include <WinAPI.au3>) |Returns a long int value from two int values , $iLo, $iHi)
Function _WinAPI_MakeQWord(Requires: #include <WinAPI.au3>) |Returns a QWORD value from two int values , $iLoDWORD, $iHiDWORD)
Function _WinAPI_MakeWord(16-bit) |Returns a WORD value from two BYTE (8-bit) values (Requires: #include <WinAPIMisc.au3>), $iLo, $iHi)
Function _WinAPI_MapViewOfFile(Requires: #include <WinAPIFiles.au3>) |Maps a view of a file mapping into the address space of a calling process , $hMapping [, $iOffset = 0 [, $iBytes = 0 [, $iAccess = 0x0006]]])
Function _WinAPI_MapVirtualKey(Requires: #include <WinAPISys.au3>) |Translates a virtual-key code into a scan code or character value, or translates a scan code into a virtual-key code , $iCode, $iType [, $hLocale = 0])
Function _WinAPI_MaskBlt(Requires: #include <WinAPIGdi.au3>) |Combines the color data for the source and destination bitmaps using the specified mask and raster operation , $hDestDC, $iXDest, $iYDest, $iWidth, $iHeight, $hSrcDC, $iXSrc, $iYSrc, $hMask, $iXMask, $iYMask, $iRop)
Function _WinAPI_MessageBeep(Requires: #include <WinAPI.au3>) |Plays a waveform sound , [$iType = 1])
Function _WinAPI_MessageBoxCheck(Requires: #include <WinAPIDlg.au3>) |Displays a message box that gives the user the option of suppressing further occurrences , $iType, $sTitle, $sText, $sRegVal [, $iDefault = -1 [, $hParent = 0]])
Function _WinAPI_MessageBoxIndirect(Requires: #include <WinAPIDlg.au3>) |Creates, displays, and operates a message box , $tMSGBOXPARAMS)
Function _WinAPI_MirrorIcon(mirrors) |Reverses icons so that they are displayed correctly on a mirrored device context (Requires: #include <WinAPISys.au3>), $hIcon [, $bDelete = False])
Function _WinAPI_ModifyWorldTransform(Requires: #include <WinAPIGdi.au3>) |Changes the world transformation for a device context using the specified mode , $hDC, $tXFORM, $iMode)
Function _WinAPI_MonitorFromPoint(Requires: #include <WinAPIGdi.au3>) |Retrieves a handle to the display monitor that contains a specified point , $tPOINT [, $iFlag = 1])
Function _WinAPI_MonitorFromRect(Requires: #include <WinAPIGdi.au3>) |Retrieves a handle to the display monitor that has the largest area of intersection with a specified rectangle , $tRECT [, $iFlag = 1])
Function _WinAPI_MonitorFromWindow(Requires: #include <WinAPIGdi.au3>) |Retrieves a handle to the display monitor that has the largest area of intersection with the specified window , $hWnd [, $iFlag = 1])
Function _WinAPI_Mouse_Event(Requires: #include <WinAPI.au3>) |Synthesizes mouse motion and button clicks , $iFlags [, $iX = 0 [, $iY = 0 [, $iData = 0 [, $iExtraInfo = 0]]]])
Function _WinAPI_MoveFileEx(Requires: #include <WinAPIFiles.au3>) |Moves a file or directory, notifying the application of its progress through a callback function , $sExistingFile, $sNewFile [, $iFlags = 0 [, $pProgressProc = 0 [, $pData = 0]]])
Function _WinAPI_MoveMemory(Requires: #include <WinAPISys.au3>) |Moves a block of memory from one location to another , $pDestination, $pSource, $iLength)
Function _WinAPI_MoveTo(Requires: #include <WinAPI.au3>) |Updates the current position to the specified point , $hDC, $iX, $iY)
Function _WinAPI_MoveToEx(Requires: #include <WinAPIGdi.au3>) |Updates the current position to the specified point , $hDC, $iX, $iY)
Function _WinAPI_MoveWindow(Requires: #include <WinAPI.au3>) |Changes the position and dimensions of the specified window , $hWnd, $iX, $iY, $iWidth, $iHeight [, $bRepaint = True])
Function _WinAPI_MsgBox(Requires: #include <WinAPI.au3>) |Displays a message box with wider margin than original , $iFlags, $sTitle, $sText)
Function _WinAPI_MulDiv(Requires: #include <WinAPI.au3>) |Multiplies two 32-bit values and then divides the 64-bit result by a third 32-bit value , $iNumber, $iNumerator, $iDenominator)
Function _WinAPI_MultiByteToWideChar(Unicode) |Maps a character string to a wide-character string (Requires: #include <WinAPI.au3>), $vText [, $iCodePage = 0 [, $iFlags = 0 [, $bRetString = False]]])
Function _WinAPI_MultiByteToWideCharEx(Unicode) |Maps a character string to a wide-character string (Requires: #include <WinAPI.au3>), $sText, $pText [, $iCodePage = 0 [, $iFlags = 0]])
Function _WinAPI_NtStatusToDosError(Requires: #include <WinAPIDiag.au3>) |Converts the specified NTSTATUS error code to its equivalent system error code , $iStatus)
Function _WinAPI_OemToChar(Requires: #include <WinAPIMisc.au3>) |Converts a string from the OEM-defined character set into either an ANSI string , $sStr)
Function _WinAPI_OffsetClipRgn(Requires: #include <WinAPIGdi.au3>) |Moves the clipping region of a device context by the specified offsets , $hDC, $iXOffset, $iYOffset)
Function _WinAPI_OffsetPoints(Requires: #include <WinAPIGdi.au3>) |Moves a points from the array by the specified offsets , ByRef $aPoint, $iXOffset, $iYOffset [, $iStart = 0 [, $iEnd = -1]])
Function _WinAPI_OffsetRect(Requires: #include <WinAPIGdi.au3>) |Moves the specified rectangle by the specified offsets , ByRef $tRECT, $iDX, $iDY)
Function _WinAPI_OffsetRgn(Requires: #include <WinAPIGdi.au3>) |Moves a region by the specified offsets , $hRgn, $iXOffset, $iYOffset)
Function _WinAPI_OffsetWindowOrg(Requires: #include <WinAPIGdi.au3>) |Modifies the window origin for a device context using the specified horizontal and vertical offsets , $hDC, $iXOffset, $iYOffset)
Function _WinAPI_OpenDesktop(Requires: #include <WinAPISys.au3>) |Opens the specified desktop object , $sName [, $iAccess = 0 [, $iFlags = 0 [, $bInherit = False]]])
Function _WinAPI_OpenFileById(Requires: #include <WinAPIFiles.au3>) |Opens the file that matches the specified object identifier , $hFile, $vID [, $iAccess = 0 [, $iShare = 0 [, $iFlags = 0]]])
Function _WinAPI_OpenFileDlg(Requires: #include <WinAPIDlg.au3>) |Creates a dialog box that lets the user specify the drive, directory, and the name of a file or set of files to be opened , [$sTitle = '' [, $sInitDir = '' [, $sFilters = '' [, $iDefaultFilter = 0 [, $sDefaultFilePath = '' [, $sDefaultExt = '' [, $iFlags = 0 [, $iFlagsEx = 0 [, $pOFNProc = 0 [, $pData = 0 [, $hParent = 0]]]]]]]]]]])
Function _WinAPI_OpenFileMapping(Requires: #include <WinAPIFiles.au3>) |Opens a named file mapping object , $sName [, $iAccess = 0x0006 [, $bInherit = False]])
Function _WinAPI_OpenIcon(iconic) |Restores a minimized window to its previous size and position and activates the window (Requires: #include <WinAPISys.au3>), $hWnd)
Function _WinAPI_OpenInputDesktop(Requires: #include <WinAPISys.au3>) |Opens the desktop that receives user input , [$iAccess = 0 [, $iFlags = 0 [, $bInherit = False]]])
Function _WinAPI_OpenJobObject(Requires: #include <WinAPIProc.au3>) |Opens an existing job object , $sName [, $iAccess = $JOB_OBJECT_ALL_ACCESS [, $bInherit = False]])
Function _WinAPI_OpenMutex(Requires: #include <WinAPIProc.au3>) |Opens an existing named mutex object , $sMutex [, $iAccess = $MUTEX_ALL_ACCESS [, $bInherit = False]])
Function _WinAPI_OpenProcess(Requires: #include <WinAPI.au3>) |Returns a handle of an existing process object , $iAccess, $bInherit, $iPID [, $bDebugPriv = False])
Function _WinAPI_OpenProcessToken(Requires: #include <WinAPIProc.au3>) |Opens the access token associated with a process , $iAccess [, $hProcess = 0])
Function _WinAPI_OpenSemaphore(Requires: #include <WinAPIProc.au3>) |Opens an existing named semaphore object , $sSemaphore [, $iAccess = 0x001F0003 [, $bInherit = False]])
Function _WinAPI_OpenThemeData(Requires: #include <WinAPITheme.au3>) |Opens the theme data for a window and its associated class , $hWnd, $sClass)
Function _WinAPI_OpenWindowStation(Requires: #include <WinAPISys.au3>) |Opens the specified window station , $sName [, $iAccess = 0 [, $bInherit = False]])
Function _WinAPI_PageSetupDlg(Requires: #include <WinAPIDlg.au3>) |Creates a Page Setup dialog box that enables the user to specify the attributes of a printed page , ByRef $tPAGESETUPDLG)
Function _WinAPI_PaintDesktop(Requires: #include <WinAPIGdi.au3>) |Fills the clipping region in the specified device context with the desktop pattern or wallpaper , $hDC)
Function _WinAPI_PaintRgn(Requires: #include <WinAPIGdi.au3>) |Paints the specified region by using the brush currently selected into the device context , $hDC, $hRgn)
Function _WinAPI_ParseURL(Requires: #include <WinAPIShPath.au3>) |Performs rudimentary parsing of a URL , $sUrl)
Function _WinAPI_ParseUserName(Requires: #include <WinAPIShPath.au3>) |Extracts the domain and user account name from a fully qualified user name , $sUser)
Function _WinAPI_PatBlt(Requires: #include <WinAPIGdi.au3>) |Paints the specified rectangle using the brush that is currently selected into the specified device context , $hDC, $iX, $iY, $iWidth, $iHeight, $iRop)
Function _WinAPI_PathAddBackslash(Requires: #include <WinAPIShPath.au3>) |Adds a backslash to the end of a string to create the correct syntax for a path , $sFilePath)
Function _WinAPI_PathAddExtension(Requires: #include <WinAPIShPath.au3>) |Adds a file name extension to a path string , $sFilePath [, $sExt = ''])
Function _WinAPI_PathAppend(Requires: #include <WinAPIShPath.au3>) |Appends one path to the end of another , $sFilePath, $sMore)
Function _WinAPI_PathBuildRoot(Requires: #include <WinAPIShPath.au3>) |Creates a root path from a given drive number , $iDrive)
Function _WinAPI_PathCanonicalize(Requires: #include <WinAPIShPath.au3>) |Removes elements of a file path according to special strings inserted into that path , $sFilePath)
Function _WinAPI_PathCommonPrefix(Requires: #include <WinAPIShPath.au3>) |Compares two paths to determine if they share a common prefix , $sPath1, $sPath2)
Function _WinAPI_PathCompactPath(Requires: #include <WinAPIShPath.au3>) |Truncates a file path to fit within a given pixel width by replacing path components with ellipses , $hWnd, $sFilePath [, $iWidth = 0])
Function _WinAPI_PathCompactPathEx(Requires: #include <WinAPIShPath.au3>) |Truncates a path to fit within a certain number of characters by replacing path components with ellipses , $sFilePath, $iMax)
Function _WinAPI_PathCreateFromUrl(Requires: #include <WinAPIShPath.au3>) |Converts a file URL to a Microsoft MS-DOS path , $sUrl)
Function _WinAPI_PathFindExtension(Requires: #include <WinAPIShPath.au3>) |Searches a path for an extension , $sFilePath)
Function _WinAPI_PathFindFileName(Requires: #include <WinAPIShPath.au3>) |Searches a path for a file name , $sFilePath)
Function _WinAPI_PathFindNextComponent(Requires: #include <WinAPIShPath.au3>) |Parses a path and returns the portion of that path that follows the first backslash , $sFilePath)
Function _WinAPI_PathFindOnPath(Requires: #include <WinAPI.au3>) |Searchs for a file in the default system paths , $sFilePath [, $aExtraPaths = "" [, $sPathDelimiter = @LF]])
Function _WinAPI_PathGetArgs(Requires: #include <WinAPIShPath.au3>) |Finds the command-line arguments within a given path , $sFilePath)
Function _WinAPI_PathGetCharType(Requires: #include <WinAPIShPath.au3>) |Determines the type of character in relation to a path , $sChar)
Function _WinAPI_PathGetDriveNumber(Requires: #include <WinAPIShPath.au3>) |Searches a path for a drive letter within the range of 'A' to 'Z' and returns the corresponding drive number , $sFilePath)
Function _WinAPI_PathIsContentType(Requires: #include <WinAPIShPath.au3>) |Determines if a file's registered content type matches the specified content type , $sFilePath, $sType)
Function _WinAPI_PathIsDirectory(Requires: #include <WinAPIFiles.au3>) |Verifies that a path is a valid directory , $sFilePath)
Function _WinAPI_PathIsDirectoryEmpty(Requires: #include <WinAPIFiles.au3>) |Determines whether a specified path is an empty directory , $sFilePath)
Function _WinAPI_PathIsExe(Requires: #include <WinAPIShPath.au3>) |Determines whether a file is an executable by examining the file extension , $sFilePath)
Function _WinAPI_PathIsFileSpec(Requires: #include <WinAPIShPath.au3>) |Searches a path for any path-delimiting characters , $sFilePath)
Function _WinAPI_PathIsLFNFileSpec(Requires: #include <WinAPIShPath.au3>) |Determines whether a file name is in long format , $sFilePath)
Function _WinAPI_PathIsRelative(Requires: #include <WinAPIShPath.au3>) |Searches a path and determines if it is relative , $sFilePath)
Function _WinAPI_PathIsRoot(Requires: #include <WinAPIShPath.au3>) |Parses a path to determine if it is a directory root , $sFilePath)
Function _WinAPI_PathIsSameRoot(Requires: #include <WinAPIShPath.au3>) |Compares two paths to determine if they have a common root component , $sPath1, $sPath2)
Function _WinAPI_PathIsSystemFolder(Requires: #include <WinAPIShPath.au3>) |Determines if an existing folder contains the attributes that make it a system folder , $sFilePath)
Function _WinAPI_PathIsUNC(UNC) |Determines if the string is a valid Universal Naming Convention for a server and share path (Requires: #include <WinAPIShPath.au3>), $sFilePath)
Function _WinAPI_PathIsUNCServer(UNC) |Determines if a string is a valid Universal Naming Convention for a server path only (Requires: #include <WinAPIShPath.au3>), $sFilePath)
Function _WinAPI_PathIsUNCServerShare(UNC) |Determines if a string is a valid Universal Naming Convention share path (Requires: #include <WinAPIShPath.au3>), $sFilePath)
Function _WinAPI_PathMakeSystemFolder(Requires: #include <WinAPIShPath.au3>) |Gives an existing folder the proper attributes to become a system folder , $sFilePath)
Function _WinAPI_PathMatchSpec(Requires: #include <WinAPIShPath.au3>) |Searches a string using a Microsoft MS-DOS wild card match type , $sFilePath, $sSpec)
Function _WinAPI_PathParseIconLocation(Requires: #include <WinAPIShPath.au3>) |Parses a file location string that contains a file location and icon index , $sFilePath)
Function _WinAPI_PathRelativePathTo(Requires: #include <WinAPIShPath.au3>) |Creates a relative path from one file or folder to another , $sPathFrom, $bDirFrom, $sPathTo, $bDirTo)
Function _WinAPI_PathRemoveArgs(Requires: #include <WinAPIShPath.au3>) |Removes any arguments from a given path , $sFilePath)
Function _WinAPI_PathRemoveBackslash(Requires: #include <WinAPIShPath.au3>) |Removes the trailing backslash from a given path , $sFilePath)
Function _WinAPI_PathRemoveExtension(Requires: #include <WinAPIShPath.au3>) |Removes the file name extension from a path, if one is present , $sFilePath)
Function _WinAPI_PathRemoveFileSpec(Requires: #include <WinAPIShPath.au3>) |Removes the trailing file name and backslash from a path, if they are present , $sFilePath)
Function _WinAPI_PathRenameExtension(Requires: #include <WinAPIShPath.au3>) |Replaces the extension of a file name with a new extension , $sFilePath, $sExt)
Function _WinAPI_PathSearchAndQualify(Requires: #include <WinAPIShPath.au3>) |Formats a path to the fully qualified path , $sFilePath [, $bExists = False])
Function _WinAPI_PathSkipRoot(UNC) |Parses a path, ignoring the drive letter or Universal Naming Convention server/share path elements (Requires: #include <WinAPIShPath.au3>), $sFilePath)
Function _WinAPI_PathStripPath(Requires: #include <WinAPIShPath.au3>) |Removes the path portion of a fully qualified path and file , $sFilePath)
Function _WinAPI_PathStripToRoot(Requires: #include <WinAPIShPath.au3>) |Removes all parts of the path except for the root information , $sFilePath)
Function _WinAPI_PathToRegion(Requires: #include <WinAPIGdi.au3>) |Creates a region from the path that is selected into the specified device context , $hDC)
Function _WinAPI_PathUndecorate(Requires: #include <WinAPIShPath.au3>) |Removes the decoration from a path string , $sFilePath)
Function _WinAPI_PathUnExpandEnvStrings(Requires: #include <WinAPIShPath.au3>) |Replaces folder names in a fully-qualified path with their associated environment string , $sFilePath)
Function _WinAPI_PathUnmakeSystemFolder(Requires: #include <WinAPIShPath.au3>) |Removes the attributes from a folder that make it a system folder , $sFilePath)
Function _WinAPI_PathUnquoteSpaces(Requires: #include <WinAPIShPath.au3>) |Removes quotes from the beginning and end of a path , $sFilePath)
Function _WinAPI_PathYetAnotherMakeUniqueName(Requires: #include <WinAPIShPath.au3>) |Creates a unique filename based on an existing filename , $sFilePath)
Function _WinAPI_PickIconDlg(Requires: #include <WinAPIDlg.au3>) |Displays a dialog box that allows the user to choose an icon , [$sIcon = '' [, $iIndex = 0 [, $hParent = 0]]])
Function _WinAPI_PlayEnhMetaFile(Requires: #include <WinAPIGdi.au3>) |Displays the picture stored in the specified enhanced-format metafile , $hDC, $hEmf, $tRECT)
Function _WinAPI_PlaySound(Requires: #include <WinAPIMisc.au3>) |Plays a sound specified by the given file name, resource, or system event , $sSound [, $iFlags = $SND_SYSTEM_NOSTOP [, $hInstance = 0]])
Function _WinAPI_PlgBlt(Requires: #include <WinAPIGdi.au3>) |Performs a bit-block transfer of color data from the specified rectangle in the source DC to the specified parallelogram in the DC context , $hDestDC, Const ByRef $aPoint, $hSrcDC, $iXSrc, $iYSrc, $iWidth, $iHeight [, $hMask = 0 [, $iXMask = 0 [, $iYMask = 0]]])
Function _WinAPI_PointFromRect(Requires: #include <WinAPI.au3>) |Returns the top/left coordinates of a $tagRECT as a $tagPOINT structure , ByRef $tRECT [, $bCenter = True])
Function _WinAPI_PolyBezier(Requires: #include <WinAPIGdi.au3>) |Draws one or more Bezier curves , $hDC, Const ByRef $aPoint [, $iStart = 0 [, $iEnd = -1]])
Function _WinAPI_PolyBezierTo(Requires: #include <WinAPIGdi.au3>) |Draws one or more Bezier curves , $hDC, Const ByRef $aPoint [, $iStart = 0 [, $iEnd = -1]])
Function _WinAPI_PolyDraw(Requires: #include <WinAPIGdi.au3>) |Draws a set of line segments and Bezier curves , $hDC, Const ByRef $aPoint [, $iStart = 0 [, $iEnd = -1]])
Function _WinAPI_Polygon(Requires: #include <WinAPIGdi.au3>) |Draws a polygon consisting of two or more vertices connected by straight lines , $hDC, Const ByRef $aPoint [, $iStart = 0 [, $iEnd = -1]])
Function _WinAPI_PostMessage(Requires: #include <WinAPI.au3>) |Places a message in the message queue and then returns , $hWnd, $iMsg, $wParam, $lParam)
Function _WinAPI_PrimaryLangId(Requires: #include <WinAPI.au3>) |Extract primary language id from a language id , $iLngID)
Function _WinAPI_PrintDlg(Requires: #include <WinAPIDlg.au3>) |Displays a Print dialog box , ByRef $tPRINTDLG)
Function _WinAPI_PrintDlgEx(Requires: #include <WinAPIDlg.au3>) |Displays a Print property sheet that enables the user to specify the properties of a particular print job , ByRef $tPRINTDLGEX)
Function _WinAPI_PrintWindow(Requires: #include <WinAPIGdi.au3>) |Copies a visual window into the specified device context , $hWnd, $hDC [, $bClient = False])
Function _WinAPI_ProgIDFromCLSID(Requires: #include <WinAPICom.au3>) |Retrieves the ProgID for a given CLSID , $sCLSID)
Function _WinAPI_PtInRect(Requires: #include <WinAPI.au3>) |Determines whether the specified point lies within the specified rectangle , ByRef $tRECT, ByRef $tPoint)
Function _WinAPI_PtInRectEx(Requires: #include <WinAPIGdi.au3>) |Determines whether the specified point lies within the specified rectangle , $iX, $iY, $iLeft, $iTop, $iRight, $iBottom)
Function _WinAPI_PtInRegion(Requires: #include <WinAPIGdi.au3>) |Determines whether the specified point is inside the specified region , $hRgn, $iX, $iY)
Function _WinAPI_PtVisible(Requires: #include <WinAPIGdi.au3>) |Determines whether the specified point is within the clipping region , $hDC, $iX, $iY)
Function _WinAPI_QueryDosDevice(Requires: #include <WinAPIFiles.au3>) |Retrieves the current mapping for a particular MS-DOS device name , $sDevice)
Function _WinAPI_QueryInformationJobObject(Requires: #include <WinAPIProc.au3>) |Retrieves limit and job state information from the job object , $hJob, $iJobObjectInfoClass, ByRef $tJobObjectInfo)
Function _WinAPI_QueryPerformanceCounter(Requires: #include <WinAPISys.au3>) |Retrieves the current value of the high-resolution performance counter 
Function _WinAPI_QueryPerformanceFrequency(Requires: #include <WinAPISys.au3>) |Retrieves the frequency of the high-resolution performance counter 
Function _WinAPI_RadialGradientFill(Requires: #include <WinAPIGdi.au3>) |Fills radial gradient , $hDC, $iX, $iY, $iRadius, $iRGB1, $iRGB2 [, $fAngleStart = 0 [, $fAngleEnd = 360 [, $fStep = 5]]])
Function _WinAPI_ReadDirectoryChanges(Requires: #include <WinAPIFiles.au3>) |Retrieves information that describes the changes within the specified directory , $hDirectory, $iFilter, $pBuffer, $iLength [, $bSubtree = 0])
Function _WinAPI_ReadFile(Requires: #include <WinAPI.au3>) |Reads data from a file , $hFile, $pBuffer, $iToRead, ByRef $iRead [, $tOverlapped = 0])
Function _WinAPI_ReadProcessMemory(Requires: #include <WinAPI.au3>) |Reads memory in a specified process , $hProcess, $pBaseAddress, $pBuffer, $iSize, ByRef $iRead)
Function _WinAPI_Rectangle(Requires: #include <WinAPIGdi.au3>) |Draws a rectangle , $hDC, $tRECT)
Function _WinAPI_RectInRegion(Requires: #include <WinAPIGdi.au3>) |Determines whether any part of the specified rectangle is within the boundaries of a region , $hRgn, $tRECT)
Function _WinAPI_RectIsEmpty(Requires: #include <WinAPI.au3>) |Determins whether a rectangle is empty , ByRef $tRECT)
Function _WinAPI_RectVisible(Requires: #include <WinAPIGdi.au3>) |Determines whether any part of the specified rectangle lies within the clipping region , $hDC, $tRECT)
Function _WinAPI_RedrawWindow(Requires: #include <WinAPI.au3>) |Updates the specified rectangle or region in a window's client area , $hWnd [, $tRECT = 0 [, $hRegion = 0 [, $iFlags = 5]]])
Function _WinAPI_RegCloseKey(Requires: #include <WinAPIReg.au3>) |Closes a handle to the specified registry key , $hKey [, $bFlush = False])
Function _WinAPI_RegConnectRegistry(Requires: #include <WinAPIReg.au3>) |Establishes a connection to a predefined registry key on another computer , $sComputer, $hKey)
Function _WinAPI_RegCopyTree(Requires: #include <WinAPIReg.au3>) |Recursively copies the subkeys and values of the source subkey to the destination key , $hSrcKey, $sSrcSubKey, $hDestKey)
Function _WinAPI_RegCopyTreeEx(Requires: #include <WinAPIReg.au3>) |Copies the specified registry key, along with its values and subkeys, to the specified destination key , $hSrcKey, $sSrcSubKey, $hDestKey)
Function _WinAPI_RegCreateKey(Requires: #include <WinAPIReg.au3>) |Creates the specified registry key , $hKey [, $sSubKey = '' [, $iAccess = $KEY_ALL_ACCESS [, $iOptions = 0 [, $tSecurity = 0]]]])
Function _WinAPI_RegDeleteEmptyKey(Requires: #include <WinAPIReg.au3>) |Deletes an empty key , $hKey [, $sSubKey = ''])
Function _WinAPI_RegDeleteKey(Requires: #include <WinAPIReg.au3>) |Deletes a subkey and its values , $hKey [, $sSubKey = ''])
Function _WinAPI_RegDeleteKeyValue(Requires: #include <WinAPIReg.au3>) |Removes the specified value from the specified registry key and subkey , $hKey, $sSubKey, $sValueName)
Function _WinAPI_RegDeleteTree(Requires: #include <WinAPIReg.au3>) |Deletes a subkey and all its descendants , $hKey [, $sSubKey = ''])
Function _WinAPI_RegDeleteTreeEx(Requires: #include <WinAPIReg.au3>) |Deletes the subkeys and values of the specified key recursively , $hKey [, $sSubKey = 0])
Function _WinAPI_RegDeleteValue(Requires: #include <WinAPIReg.au3>) |Removes a named value from the specified registry key , $hKey, $sValueName)
Function _WinAPI_RegDisableReflectionKey(Requires: #include <WinAPIReg.au3>) |Disables registry reflection for the specified key , $hKey)
Function _WinAPI_RegDuplicateHKey(Requires: #include <WinAPIReg.au3>) |Duplicates a registry key's handle , $hKey)
Function _WinAPI_RegEnableReflectionKey(Requires: #include <WinAPIReg.au3>) |Restores registry reflection for the specified disabled key , $hKey)
Function _WinAPI_RegEnumKey(Requires: #include <WinAPIReg.au3>) |Enumerates the subkeys of the specified open registry key , $hKey, $iIndex)
Function _WinAPI_RegEnumValue(Requires: #include <WinAPIReg.au3>) |Enumerates the values for the specified open registry key , $hKey, $iIndex)
Function _WinAPI_RegFlushKey(Requires: #include <WinAPIReg.au3>) |Writes all the attributes of the specified open registry key into the registry , $hKey)
Function _WinAPI_RegisterApplicationRestart(Requires: #include <WinAPIDiag.au3>) |Registers the active instance of an application for restart , [$iFlags = 0 [, $sCmd = '']])
Function _WinAPI_RegisterClass(Requires: #include <WinAPISys.au3>) |Registers a window class , $tWNDCLASS)
Function _WinAPI_RegisterClassEx(Requires: #include <WinAPISys.au3>) |Registers a window class , $tWNDCLASSEX)
Function _WinAPI_RegisterHotKey(Requires: #include <WinAPISys.au3>) |Defines a system-wide hot key , $hWnd, $iID, $iModifiers, $vKey)
Function _WinAPI_RegisterPowerSettingNotification(Requires: #include <WinAPISys.au3>) |Registers the application to receive power setting notifications for the specific power setting event , $hWnd, $sGUID)
Function _WinAPI_RegisterRawInputDevices(Requires: #include <WinAPISys.au3>) |Registers the devices that supply the raw input data , $paDevice [, $iCount = 1])
Function _WinAPI_RegisterShellHookWindow(Requires: #include <WinAPISys.au3>) |Registers a specified Shell window to receive certain messages for events or notifications , $hWnd)
Function _WinAPI_RegisterWindowMessage(Requires: #include <WinAPI.au3>) |Defines a new window message that is guaranteed to be unique throughout the system , $sMessage)
Function _WinAPI_RegLoadMUIString(Requires: #include <WinAPIReg.au3>) |Loads the specified string from the specified key and subkey , $hKey, $sValueName [, $sDirectory = ''])
Function _WinAPI_RegNotifyChangeKeyValue(Requires: #include <WinAPIReg.au3>) |Notifies the caller about changes to the attributes or contents of a specified registry key , $hKey, $iFilter [, $bSubtree = False [, $bAsync = False [, $hEvent = 0]]])
Function _WinAPI_RegOpenKey(Requires: #include <WinAPIReg.au3>) |Opens the specified registry key , $hKey [, $sSubKey = '' [, $iAccess = 0x000F003F]])
Function _WinAPI_RegQueryInfoKey(Requires: #include <WinAPIReg.au3>) |Retrieves information about the specified registry key , $hKey)
Function _WinAPI_RegQueryLastWriteTime(Requires: #include <WinAPIReg.au3>) |Retrieves information about the last write time to the specified registry key , $hKey)
Function _WinAPI_RegQueryMultipleValues(Requires: #include <WinAPIReg.au3>) |Retrieves the type and data for a list of value names associated with an open registry key , $hKey, ByRef $aValent, ByRef $pBuffer [, $iStart = 0 [, $iEnd = -1]])
Function _WinAPI_RegQueryReflectionKey(Requires: #include <WinAPIReg.au3>) |Determines whether reflection has been disabled or enabled for the specified key , $hKey)
Function _WinAPI_RegQueryValue(Requires: #include <WinAPIReg.au3>) |Retrieves the type and data for the specified value name associated with an open registry key , $hKey, $sValueName, ByRef $tValueData)
Function _WinAPI_RegRestoreKey(Requires: #include <WinAPIReg.au3>) |Reads the registry information in a specified file and copies it over the specified key , $hKey, $sFilePath)
Function _WinAPI_RegSaveKey(Requires: #include <WinAPIReg.au3>) |Saves the specified key and all of its subkeys and values to a new file, in the standard format , $hKey, $sFilePath [, $bReplace = False [, $tSecurity = 0]])
Function _WinAPI_RegSetValue(Requires: #include <WinAPIReg.au3>) |Sets the data and type of a specified value under a registry key , $hKey, $sValueName, $iType, $tValueData, $iBytes)
Function _WinAPI_ReleaseCapture(Requires: #include <WinAPI.au3>) |Releases the mouse capture from a window in the current thread and restores normal mouse input processing 
Function _WinAPI_ReleaseDC(Requires: #include <WinAPI.au3>) |Releases a device context , $hWnd, $hDC)
Function _WinAPI_ReleaseMutex(Requires: #include <WinAPIProc.au3>) |Releases ownership of the specified mutex object , $hMutex)
Function _WinAPI_ReleaseSemaphore(Requires: #include <WinAPIProc.au3>) |Increases the count of the specified semaphore object by a specified amount , $hSemaphore [, $iIncrease = 1])
Function _WinAPI_ReleaseStream(Requires: #include <WinAPICom.au3>) |Releases a stream object , $pStream)
Function _WinAPI_RemoveClipboardFormatListener(Requires: #include <WinAPISys.au3>) |Removes the given window from the system-maintained clipboard format listener list , $hWnd)
Function _WinAPI_RemoveDirectory(Requires: #include <WinAPIFiles.au3>) |Deletes an existing empty directory , $sDirPath)
Function _WinAPI_RemoveFontMemResourceEx(Requires: #include <WinAPIGdi.au3>) |Removes the fonts added from a memory image , $hFont)
Function _WinAPI_RemoveFontResourceEx(Requires: #include <WinAPIGdi.au3>) |Removes the fonts in the specified file from the system font table , $sFont [, $iFlag = 0 [, $bNotify = False]])
Function _WinAPI_RemoveWindowSubclass(Requires: #include <WinAPIShellEx.au3>) |Removes a subclass callback from a window , $hWnd, $pSubclassProc, $idSubClass)
Function _WinAPI_ReOpenFile(Requires: #include <WinAPIFiles.au3>) |Reopens the specified file system object with different access rights, sharing mode, and flags , $hFile, $iAccess, $iShare [, $iFlags = 0])
Function _WinAPI_ReplaceFile(Requires: #include <WinAPIFiles.au3>) |Replaces one file with another file, and creates a backup copy of the original file , $sReplacedFile, $sReplacementFile [, $sBackupFile = '' [, $iFlags = 0]])
Function _WinAPI_ReplaceTextDlg(Requires: #include <WinAPIDlg.au3>) |Creates a system-defined modeless dialog box that lets the user specify a string to search for and a replacement string , $hOwner [, $sFindWhat = '' [, $sReplaceWith = '' [, $iFlags = 0 [, $pReplaceProc = 0 [, $lParam = 0]]]]])
Function _WinAPI_ResetEvent(Requires: #include <WinAPIProc.au3>) |Sets the specified event object to the nonsignaled state , $hEvent)
Function _WinAPI_RestartDlg(Requires: #include <WinAPIDlg.au3>) |Displays a dialog box that prompts the user to restart Microsoft Windows , [$sText = '' [, $iFlags = 2 [, $hParent = 0]]])
Function _WinAPI_RestoreDC(DC) |Restores a device context to the specified state (Requires: #include <WinAPIGdi.au3>), $hDC, $iID)
Function _WinAPI_RGB(Requires: #include <WinAPIGdi.au3>) |Creates a RGB color value based on red, green, and blue components , $iRed, $iGreen, $iBlue)
Function _WinAPI_RotatePoints(Requires: #include <WinAPIGdi.au3>) |Rotates a points from the array by the specified angle , ByRef $aPoint, $iXC, $iYC, $fAngle [, $iStart = 0 [, $iEnd = -1]])
Function _WinAPI_RoundRect(Requires: #include <WinAPIGdi.au3>) |Draws a rectangle with rounded corners , $hDC, $tRECT, $iWidth, $iHeight)
Function _WinAPI_SaveDC(DC) |Saves the current state of the specified device context by copying data describing selected objects and graphic modes to a context stack (Requires: #include <WinAPIGdi.au3>), $hDC)
Function _WinAPI_SaveFileDlg(Requires: #include <WinAPIDlg.au3>) |Creates a dialog box that lets the user specify the drive, directory, and name of a file to save , [$sTitle = "" [, $sInitDir = "" [, $sFilters = "" [, $iDefaultFilter = 0 [, $sDefaultFilePath = "" [, $sDefaultExt = "" [, $iFlags = 0 [, $iFlagsEx = 0 [, $pOFNProc = 0 [, $pData = 0 [, $hParent = 0]]]]]]]]]]])
Function _WinAPI_SaveHBITMAPToFile(.bmp) |Saves a specified bitmap to the specified bitmap file (Requires: #include <WinAPIGdi.au3>), $sFilePath, $hBitmap [, $iXPelsPerMeter = Default [, $iYPelsPerMeter = Default]])
Function _WinAPI_SaveHICONToFile(HICON) |Saves a specified single or multiple icon to the specified icon (.ico) file (Requires: #include <WinAPIGdi.au3>), $sFilePath, Const ByRef $vIcon [, $bCompress = 0 [, $iStart = 0 [, $iEnd = -1]]])
Function _WinAPI_ScaleWindowExt(Requires: #include <WinAPIGdi.au3>) |Modifies the window for a device context using the ratios formed by the specified multiplicands and divisors , $hDC, $iXNum, $iXDenom, $iYNum, $iYDenom)
Function _WinAPI_ScreenToClient(Requires: #include <WinAPI.au3>) |Converts screen coordinates of a specified point on the screen to client coordinates , $hWnd, ByRef $tPoint)
Function _WinAPI_SearchPath(Requires: #include <WinAPIFiles.au3>) |Searches for a specified file in a specified path , $sFilePath [, $sSearchPath = ''])
Function _WinAPI_SelectClipPath(Requires: #include <WinAPIGdi.au3>) |Selects the current path as a clipping region, combining the new region with any existing clipping region , $hDC [, $iMode = 5])
Function _WinAPI_SelectClipRgn(Requires: #include <WinAPIGdi.au3>) |Selects a region as the current clipping region for the specified device context , $hDC, $hRgn)
Function _WinAPI_SelectObject(Requires: #include <WinAPI.au3>) |Selects an object into the specified device context , $hDC, $hGDIObj)
Function _WinAPI_SendMessageTimeout(Requires: #include <WinAPISys.au3>) |Sends the specified message to one of more windows , $hWnd, $iMsg [, $wParam = 0 [, $lParam = 0 [, $iTimeout = 1000 [, $iFlags = 0]]]])
Function _WinAPI_SetActiveWindow(Requires: #include <WinAPISys.au3>) |Activates the specified window , $hWnd)
Function _WinAPI_SetArcDirection(Requires: #include <WinAPIGdi.au3>) |Sets the drawing arc direction , $hDC, $iDirection)
Function _WinAPI_SetBitmapBits(Requires: #include <WinAPIGdi.au3>) |Sets the bits of color data for a bitmap to the specified values , $hBitmap, $iSize, $pBits)
Function _WinAPI_SetBitmapDimensionEx(Requires: #include <WinAPIGdi.au3>) |Assigns preferred dimensions to a compatible bitmap , $hBitmap, $iWidth, $iHeight)
Function _WinAPI_SetBkColor(Requires: #include <WinAPI.au3>) |Sets the current background color to the specified color value , $hDC, $iColor)
Function _WinAPI_SetBkMode(Requires: #include <WinAPI.au3>) |Sets the background mix mode of the specified device context , $hDC, $iBkMode)
Function _WinAPI_SetBoundsRect(Requires: #include <WinAPIGdi.au3>) |Controls the accumulation of bounding rectangle information for the specified device context , $hDC, $iFlags [, $tRECT = 0])
Function _WinAPI_SetBrushOrg(Requires: #include <WinAPIGdi.au3>) |Sets the brush origin that GDI assigns to the next brush an application selects into the specified device context , $hDC, $iX, $iY)
Function _WinAPI_SetCapture(Requires: #include <WinAPI.au3>) |Sets the mouse capture to the specified window belonging to the current thread , $hWnd)
Function _WinAPI_SetCaretBlinkTime(Requires: #include <WinAPIRes.au3>) |Sets the caret blink time , $iDuration)
Function _WinAPI_SetCaretPos(Requires: #include <WinAPIRes.au3>) |Moves the caret to the specified coordinates , $iX, $iY)
Function _WinAPI_SetClassLongEx(Requires: #include <WinAPISys.au3>) |Replaces the specified value into the specified window belongs , $hWnd, $iIndex, $iNewLong)
Function _WinAPI_SetColorAdjustment(DC) |Sets the color adjustment for a device context (Requires: #include <WinAPIGdi.au3>), $hDC, $tAdjustment)
Function _WinAPI_SetCompression(Requires: #include <WinAPIFiles.au3>) |Sets the compression state of a file or directory , $sFilePath, $iCompression)
Function _WinAPI_SetCurrentDirectory(Requires: #include <WinAPIFiles.au3>) |Changes the current directory for the current process , $sDir)
Function _WinAPI_SetCurrentProcessExplicitAppUserModelID(Requires: #include <WinAPIShellEx.au3>) |Specifies a unique application-defined Application User Model ID that identifies the current process to the taskbar , $sAppID)
Function _WinAPI_SetCursor(Requires: #include <WinAPI.au3>) |Establishes the cursor shape , $hCursor)
Function _WinAPI_SetDCBrushColor(DC) |Sets the current device context brush color to the specified color value (Requires: #include <WinAPIGdi.au3>), $hDC, $iRGB)
Function _WinAPI_SetDCPenColor(DC) |Sets the current device context pen color to the specified color value (Requires: #include <WinAPIGdi.au3>), $hDC, $iRGB)
Function _WinAPI_SetDefaultPrinter(Requires: #include <WinAPI.au3>) |Sets the default printer for the current user on the local computer , $sPrinter)
Function _WinAPI_SetDeviceGammaRamp(Requires: #include <WinAPIGdi.au3>) |Sets the gamma ramp on direct color display boards that support downloadable gamma ramps in hardware , $hDC, Const ByRef $aRamp)
Function _WinAPI_SetDIBColorTable(Requires: #include <WinAPIGdi.au3>) |Sets RGB color table in the DIB section bitmap , $hBitmap, $tColorTable, $iColorCount)
Function _WinAPI_SetDIBits(Requires: #include <WinAPI.au3>) |Sets the pixels in a compatible bitmap using the color data found in a DIB , $hDC, $hBitmap, $iStartScan, $iScanLines, $pBits, $tBMI [, $iColorUse = 0])
Function _WinAPI_SetDIBitsToDevice(Requires: #include <WinAPIGdi.au3>) |Sets the pixels in the specified rectangle on the device , $hDC, $iXDest, $iYDest, $iWidth, $iHeight, $iXSrc, $iYSrc, $iStartScan, $iScanLines, $tBITMAPINFO, $iUsage, $pBits)
Function _WinAPI_SetDllDirectory(Requires: #include <WinAPISys.au3>) |Adds a directory to the search path used to locate DLLs for the application , [$sDirPath = Default])
Function _WinAPI_SetEndOfFile(Requires: #include <WinAPI.au3>) |Sets the physical file size for the specified file to the current position of the file pointer , $hFile)
Function _WinAPI_SetEnhMetaFileBits(Requires: #include <WinAPIGdi.au3>) |Creates a memory-based enhanced-format metafile from the specified data , $pData, $iLength)
Function _WinAPI_SetErrorMode(Requires: #include <WinAPIDiag.au3>) |Controls whether the system will handle the specified types of serious errors or whether the process will handle them , $iMode)
Function _WinAPI_SetEvent(Requires: #include <WinAPI.au3>) |Sets the specified event object to the signaled state , $hEvent)
Function _WinAPI_SetFileAttributes(Requires: #include <WinAPIFiles.au3>) |Sets the attributes for a file or directory , $sFilePath, $iAttributes)
Function _WinAPI_SetFileInformationByHandleEx(Requires: #include <WinAPIFiles.au3>) |Sets the file information for the specified file , $hFile, $tFILEINFO)
Function _WinAPI_SetFilePointer(Requires: #include <WinAPI.au3>) |Moves the file pointer of the specified file , $hFile, $iPos [, $iMethod = 0])
Function _WinAPI_SetFilePointerEx(Requires: #include <WinAPIFiles.au3>) |Moves the file pointer of the specified file , $hFile, $iPos [, $iMethod = 0])
Function _WinAPI_SetFileShortName(Requires: #include <WinAPIFiles.au3>) |Sets the short name for the specified file , $hFile, $sShortName)
Function _WinAPI_SetFileValidData(Requires: #include <WinAPIFiles.au3>) |Sets the valid data length of the specified file , $hFile, $iLength)
Function _WinAPI_SetFocus(Requires: #include <WinAPI.au3>) |Sets the keyboard focus to the specified window , $hWnd)
Function _WinAPI_SetFont(Requires: #include <WinAPI.au3>) |Sets a window font , $hWnd, $hFont [, $bRedraw = True])
Function _WinAPI_SetForegroundWindow(Requires: #include <WinAPISys.au3>) |Puts the specified window into the foreground and activates its , $hWnd)
Function _WinAPI_SetFRBuffer() |Sets the size of the internal buffer that used the _WinAPI_FindTextDlg and _WinAPI_ReplaceTextDlg() functions (Requires: #include <WinAPIDlg.au3>), $iChars)
Function _WinAPI_SetGraphicsMode(Requires: #include <WinAPIGdi.au3>) |Sets the graphics mode for the specified device context , $hDC, $iMode)
Function _WinAPI_SetHandleInformation(Requires: #include <WinAPI.au3>) |Sets certain properties of an object handle , $hObject, $iMask, $iFlags)
Function _WinAPI_SetInformationJobObject(Requires: #include <WinAPIProc.au3>) |Sets limits for a job object , $hJob, $iJobObjectInfoClass, $tJobObjectInfo)
Function _WinAPI_SetKeyboardLayout(Requires: #include <WinAPISys.au3>) |Sets an input locale identifier to the specified window , $hWnd, $iLanguage [, $iFlags = 0])
Function _WinAPI_SetKeyboardState(Requires: #include <WinAPISys.au3>) |Copies a 256-byte array of keyboard key states into the calling process's keyboard input-state table , $tState)
Function _WinAPI_SetLastError(Requires: #include <WinAPI.au3>) |Sets the last-error code for the calling thread , $iErrorCode)
Function _WinAPI_SetLayeredWindowAttributes(Requires: #include <WinAPI.au3>) |Sets Layered Window Attributes , $hWnd, $iTransColor [, $iTransGUI = 255 [, $iFlags = 0x03 [, $bColorRef = False]]])
Function _WinAPI_SetLocaleInfo(Requires: #include <WinAPILocale.au3>) |Sets an item of information in the user override portion of the current locale , $iLCID, $iType, $sData)
Function _WinAPI_SetMapMode(Requires: #include <WinAPIGdi.au3>) |Sets the mapping mode of the specified device context , $hDC, $iMode)
Function _WinAPI_SetMessageExtraInfo(Requires: #include <WinAPISys.au3>) |Sets the extra message information for the current thread , $lParam)
Function _WinAPI_SetParent(Requires: #include <WinAPI.au3>) |Changes the parent window of the specified child window , $hWndChild, $hWndParent)
Function _WinAPI_SetPixel(Requires: #include <WinAPIGdi.au3>) |Sets the pixel at the specified coordinates to the specified color , $hDC, $iX, $iY, $iRGB)
Function _WinAPI_SetPolyFillMode(Requires: #include <WinAPIGdi.au3>) |Sets the polygon fill mode for functions that fill polygons , $hDC [, $iMode = 1])
Function _WinAPI_SetPriorityClass(Requires: #include <WinAPIProc.au3>) |Sets the priority class for the specified process , $iPriority [, $iPID = 0])
Function _WinAPI_SetProcessAffinityMask(Requires: #include <WinAPI.au3>) |Sets a processor affinity mask for the threads of a specified process , $hProcess, $iMask)
Function _WinAPI_SetProcessShutdownParameters(Requires: #include <WinAPISys.au3>) |Sets a shutdown order for a process relative to the other processes in the system , $iLevel [, $bDialog = False])
Function _WinAPI_SetProcessWindowStation(Requires: #include <WinAPISys.au3>) |Assigns the specified window station to the calling process , $hStation)
Function _WinAPI_SetRectRgn(Requires: #include <WinAPIGdi.au3>) |Converts a region into a rectangular region with the specified coordinates , $hRgn, $tRECT)
Function _WinAPI_SetROP2(Requires: #include <WinAPIGdi.au3>) |Retrieves the foreground mix mode of the specified device context , $hDC, $iMode)
Function _WinAPI_SetSearchPathMode() |Sets the per-process mode that the _WinAPI_SearchPath function uses when locating files (Requires: #include <WinAPIFiles.au3>), $iFlags)
Function _WinAPI_SetStretchBltMode(Requires: #include <WinAPIGdi.au3>) |Sets the bitmap stretching mode in the specified device context , $hDC, $iMode)
Function _WinAPI_SetSysColors(Requires: #include <WinAPI.au3>) |Obtains information about the display devices in a system , $vElements, $vColors)
Function _WinAPI_SetSystemCursor(Requires: #include <WinAPIRes.au3>) |Enables an application to customize the system cursors , $hCursor, $iID [, $bCopy = False])
Function _WinAPI_SetTextAlign(Requires: #include <WinAPIGdi.au3>) |Sets the text-alignment flags for the specified device context , $hDC [, $iMode = 0])
Function _WinAPI_SetTextCharacterExtra(Requires: #include <WinAPIGdi.au3>) |Sets the intercharacter spacing for the specified device context , $hDC, $iCharExtra)
Function _WinAPI_SetTextColor(Requires: #include <WinAPI.au3>) |Sets the current text color to the specified color value , $hDC, $iColor)
Function _WinAPI_SetTextJustification(Requires: #include <WinAPIGdi.au3>) |Specifies the amount of space the system should add to the break characters in a string of text , $hDC, $iBreakExtra, $iBreakCount)
Function _WinAPI_SetThemeAppProperties(Requires: #include <WinAPITheme.au3>) |Sets the flags that determine how visual styles are implemented in the calling application , $iFlags)
Function _WinAPI_SetThreadDesktop(Requires: #include <WinAPIProc.au3>) |Assigns the specified desktop to the calling thread , $hDesktop)
Function _WinAPI_SetThreadErrorMode(Requires: #include <WinAPIProc.au3>) |Controls whether the system will handle the specified types of serious errors or whether the calling thread will handle them , $iMode)
Function _WinAPI_SetThreadExecutionState(Requires: #include <WinAPIProc.au3>) |Prevents the system from entering sleep or turning off the display while the current application is running , $iFlags)
Function _WinAPI_SetThreadLocale(Requires: #include <WinAPILocale.au3>) |Sets the current locale of the calling thread , $iLCID)
Function _WinAPI_SetThreadUILanguage(Requires: #include <WinAPILocale.au3>) |Sets the user interface language for the current thread , $iLanguage)
Function _WinAPI_SetTimer(Requires: #include <WinAPISys.au3>) |Creates a timer with the specified time-out value , $hWnd, $iTimerID, $iElapse, $pTimerFunc)
Function _WinAPI_SetUDFColorMode(Requires: #include <WinAPIGdi.au3>) |Sets the color mode for the WinAPIEx library , $iMode)
Function _WinAPI_SetUserGeoID(Requires: #include <WinAPILocale.au3>) |Sets the geographical location identifier for the user , $iGEOID)
Function _WinAPI_SetUserObjectInformation(Requires: #include <WinAPISys.au3>) |Sets information about the specified window station or desktop object , $hObject, $iIndex, $tData)
Function _WinAPI_SetVolumeMountPoint(Requires: #include <WinAPIFiles.au3>) |Associates a volume with a drive letter or a directory on another volume , $sFilePath, $sGUID)
Function _WinAPI_SetWindowDisplayAffinity(Requires: #include <WinAPISys.au3>) |Stores the display affinity setting in kernel mode on the specified window , $hWnd, $iAffinity)
Function _WinAPI_SetWindowExt(Requires: #include <WinAPIGdi.au3>) |Sets the horizontal and vertical extents of the window for a device context by using the specified values , $hDC, $iXExtent, $iYExtent)
Function _WinAPI_SetWindowLong(Requires: #include <WinAPI.au3>) |Sets information about the specified window , $hWnd, $iIndex, $iValue)
Function _WinAPI_SetWindowOrg(0,0) |Specifies which window point maps to the viewport origin (Requires: #include <WinAPIGdi.au3>), $hDC, $iX, $iY)
Function _WinAPI_SetWindowPlacement(Requires: #include <WinAPI.au3>) |Sets the placement of the window for Min, Max, and normal positions , $hWnd, $tWindowPlacement)
Function _WinAPI_SetWindowPos(Requires: #include <WinAPI.au3>) |Changes the size, position, and Z order of a child, pop-up, or top-level window , $hWnd, $hAfter, $iX, $iY, $iCX, $iCY, $iFlags)
Function _WinAPI_SetWindowRgn(Requires: #include <WinAPI.au3>) |Sets the window region of a window , $hWnd, $hRgn [, $bRedraw = True])
Function _WinAPI_SetWindowsHookEx(Requires: #include <WinAPI.au3>) |Installs an application-defined hook procedure into a hook chain , $iHook, $pProc, $hDll [, $iThreadId = 0])
Function _WinAPI_SetWindowSubclass(Requires: #include <WinAPIShellEx.au3>) |Installs or updates a window subclass callback , $hWnd, $pSubclassProc, $idSubClass [, $pData = 0])
Function _WinAPI_SetWindowText(Requires: #include <WinAPI.au3>) |Changes the text of the specified window's title bar , $hWnd, $sText)
Function _WinAPI_SetWindowTheme(Requires: #include <WinAPITheme.au3>) |Causes a window to use a different set of visual style information than its class normally uses , $hWnd [, $sName = 0 [, $sList = 0]])
Function _WinAPI_SetWinEventHook(Requires: #include <WinAPISys.au3>) |Sets an event hook function for a range of events , $iEventMin, $iEventMax, $pEventProc [, $iPID = 0 [, $iThreadId = 0 [, $iFlags = 0]]])
Function _WinAPI_SetWorldTransform(Requires: #include <WinAPIGdi.au3>) |Sets a two-dimensional linear transformation between world space and page space for the specified device context , $hDC, $tXFORM)
Function _WinAPI_SfcIsFileProtected(Requires: #include <WinAPIFiles.au3>) |Determines whether the specified file is protected , $sFilePath)
Function _WinAPI_SfcIsKeyProtected(Requires: #include <WinAPIReg.au3>) |Determines whether the specified registry key is protected , $hKey [, $sSubKey = Default [, $iFlag = 0]])
Function _WinAPI_ShellAboutDlg(Requires: #include <WinAPIDlg.au3>) |Displays a Windows About dialog box , $sTitle, $sName, $sText [, $hIcon = 0 [, $hParent = 0]])
Function _WinAPI_ShellAddToRecentDocs(Requires: #include <WinAPIShellEx.au3>) |Adds a file to the most recently and frequently item list , $sFilePath)
Function _WinAPI_ShellChangeNotify(Requires: #include <WinAPIShellEx.au3>) |Notifies the system of an event that an application has performed , $iEvent, $iFlags [, $iItem1 = 0 [, $iItem2 = 0]])
Function _WinAPI_ShellChangeNotifyDeregister(Requires: #include <WinAPIShellEx.au3>) |Unregisters the client's window , $iID)
Function _WinAPI_ShellChangeNotifyRegister(Requires: #include <WinAPIShellEx.au3>) |Registers a window to receive notifications from the file system or Shell , $hWnd, $iMsg, $iEvents, $iSources, $aPaths [, $bRecursive = False])
Function _WinAPI_ShellCreateDirectory(Requires: #include <WinAPIShellEx.au3>) |Creates a new file system folder , $sFilePath [, $hParent = 0 [, $tSecurity = 0]])
Function _WinAPI_ShellEmptyRecycleBin(Requires: #include <WinAPIShellEx.au3>) |Empties the Recycle Bin on the specified drive , [$sRoot = '' [, $iFlags = 0 [, $hParent = 0]]])
Function _WinAPI_ShellExecute(Requires: #include <WinAPIShellEx.au3>) |Performs an operation on a specified file , $sFilePath [, $sArgs = '' [, $sDir = '' [, $sVerb = '' [, $iShow = 1 [, $hParent = 0]]]]])
Function _WinAPI_ShellExecuteEx(Requires: #include <WinAPIShellEx.au3>) |Performs an operation on a specified file , ByRef $tSHEXINFO)
Function _WinAPI_ShellExtractAssociatedIcon(Requires: #include <WinAPIShellEx.au3>) |Returns a handle to the icon that associated with the specified file's , $sFilePath [, $bSmall = False])
Function _WinAPI_ShellExtractIcon(Requires: #include <WinAPIShellEx.au3>) |Extracts the icon with the specified dimension from the specified file , $sIcon, $iIndex, $iWidth, $iHeight)
Function _WinAPI_ShellFileOperation(Requires: #include <WinAPIShellEx.au3>) |Copies, moves, renames, or deletes a file system object , $sFrom, $sTo, $iFunc, $iFlags [, $sTitle = '' [, $hParent = 0]])
Function _WinAPI_ShellFlushSFCache(Requires: #include <WinAPIShellEx.au3>) |Flushes the special folder cache 
Function _WinAPI_ShellGetFileInfo(Requires: #include <WinAPIShellEx.au3>) |Retrieves information about an object in the file system , $sFilePath, $iFlags, $iAttributes, ByRef $tSHFILEINFO)
Function _WinAPI_ShellGetIconOverlayIndex(Requires: #include <WinAPIShellEx.au3>) |Retrieves the index of the overlay icon in the system image list , $sIcon, $iIndex)
Function _WinAPI_ShellGetImageList(Requires: #include <WinAPIShPath.au3>) |Retrieves the system image list for small or large icons , [$bSmall = False])
Function _WinAPI_ShellGetKnownFolderIDList(Requires: #include <WinAPIShellEx.au3>) |Retrieves the path of a known folder as an ITEMIDLIST structure , $sGUID [, $iFlags = 0 [, $hToken = 0]])
Function _WinAPI_ShellGetKnownFolderPath(Requires: #include <WinAPIShellEx.au3>) |Retrieves the full path of a known folder identified , $sGUID [, $iFlags = 0 [, $hToken = 0]])
Function _WinAPI_ShellGetLocalizedName(Requires: #include <WinAPIShellEx.au3>) |Retrieves the localized name of a file in a Shell folder , $sFilePath)
Function _WinAPI_ShellGetPathFromIDList(Requires: #include <WinAPIShellEx.au3>) |Converts an item identifier list to a file system path , $pPIDL)
Function _WinAPI_ShellGetSetFolderCustomSettings(Requires: #include <WinAPIShellEx.au3>) |Sets or retrieves custom folder settings , $sFilePath, $iFlag, ByRef $tSHFCS)
Function _WinAPI_ShellGetSettings(Requires: #include <WinAPIShellEx.au3>) |Retrieves Shell state settings , $iFlags)
Function _WinAPI_ShellGetSpecialFolderLocation(PIDL) |Retrieves a pointer to the ITEMIDLIST structure of a special folder (Requires: #include <WinAPIShellEx.au3>), $iCSIDL)
Function _WinAPI_ShellGetSpecialFolderPath(Requires: #include <WinAPIShellEx.au3>) |Retrieves the path of a special folder , $iCSIDL [, $bCreate = False])
Function _WinAPI_ShellGetStockIconInfo(Requires: #include <WinAPIShellEx.au3>) |Retrieves information about system-defined Shell icons , $iSIID, $iFlags)
Function _WinAPI_ShellILCreateFromPath(PIDL) |Creates a pointer to an item identifier list from a path (Requires: #include <WinAPIShellEx.au3>), $sFilePath)
Function _WinAPI_ShellNotifyIcon(Requires: #include <WinAPIShellEx.au3>) |Sends a message to the taskbar's status area , $iMessage, $tNOTIFYICONDATA)
Function _WinAPI_ShellNotifyIconGetRect(Requires: #include <WinAPIShellEx.au3>) |Gets the screen coordinates of the bounding rectangle of a notification icon , $hWnd, $iID [, $tGUID = 0])
Function _WinAPI_ShellObjectProperties(Requires: #include <WinAPIShellEx.au3>) |Invokes the Properties context menu command on a Shell object , $sFilePath [, $iType = 2 [, $sProperty = '' [, $hParent = 0]]])
Function _WinAPI_ShellOpenFolderAndSelectItems(Requires: #include <WinAPIShellEx.au3>) |Opens a Windows Explorer window with specified items in a particular folder selected , $sFilePath [, $aNames = 0 [, $iStart = 0 [, $iEnd = -1 [, $iFlags = 0]]]])
Function _WinAPI_ShellOpenWithDlg(Requires: #include <WinAPIDlg.au3>) |Displays the Open With dialog box , $sFilePath [, $iFlags = 0 [, $hParent = 0]])
Function _WinAPI_ShellQueryRecycleBin(Requires: #include <WinAPIShellEx.au3>) |Retrieves the size of the Recycle Bin and the number of items in it, for a specified drive , [$sRoot = ''])
Function _WinAPI_ShellQueryUserNotificationState(Requires: #include <WinAPIShellEx.au3>) |Checks the state of the computer for the current user 
Function _WinAPI_ShellRemoveLocalizedName(Requires: #include <WinAPIShellEx.au3>) |Removes the localized name of a file in a Shell folder , $sFilePath)
Function _WinAPI_ShellRestricted(Requires: #include <WinAPIShellEx.au3>) |Determines whether a specified administrator policy is in effect , $iRestriction)
Function _WinAPI_ShellSetKnownFolderPath(Requires: #include <WinAPIShellEx.au3>) |Redirects a known folder to a new location , $sGUID, $sFilePath [, $iFlags = 0 [, $hToken = 0]])
Function _WinAPI_ShellSetLocalizedName(Requires: #include <WinAPIShellEx.au3>) |Sets the localized name of a file in a Shell folder , $sFilePath, $sModule, $iResID)
Function _WinAPI_ShellSetSettings(Requires: #include <WinAPIShellEx.au3>) |Sets Shell state settings , $iFlags, $bSet)
Function _WinAPI_ShellStartNetConnectionDlg(Requires: #include <WinAPIDlg.au3>) |Displays a general browsing dialog box for a network resource connection , [$sRemote = '' [, $iFlags = 0 [, $hParent = 0]]])
Function _WinAPI_ShellUpdateImage(Requires: #include <WinAPIShellEx.au3>) |Notifies the Shell that an image in the system image list has changed , $sIcon, $iIndex, $iImage [, $iFlags = 0])
Function _WinAPI_ShellUserAuthenticationDlg(Requires: #include <WinAPIDlg.au3>) |Creates and displays a configurable dialog box that accepts credentials information from a user , $sCaption, $sMessage, $sUser, $sPassword, $sTarget [, $iFlags = 0 [, $iError = 0 [, $bSave = False [, $hBitmap = 0 [, $hParent = 0]]]]])
Function _WinAPI_ShellUserAuthenticationDlgEx(Requires: #include <WinAPIDlg.au3>) |Creates and displays a configurable dialog box that accepts credentials information from a user , $sCaption, $sMessage, $sUser, $sPassword [, $iFlags = 0 [, $iAuthError = 0 [, $bSave = False [, $iPackage = 0 [, $hParent = 0]]]]])
Function _WinAPI_ShortToWord(Requires: #include <WinAPIMisc.au3>) |Converts a value of type SHORT to a value of type WORD , $iValue)
Function _WinAPI_ShowCaret(Requires: #include <WinAPIRes.au3>) |Makes the caret visible on the screen at the caret's current position , $hWnd)
Function _WinAPI_ShowCursor(Requires: #include <WinAPI.au3>) |Displays or hides the cursor , $bShow)
Function _WinAPI_ShowError(Requires: #include <WinAPI.au3>) |Displays an error message box with an optional exit , $sText [, $bExit = True])
Function _WinAPI_ShowLastError(Requires: #include <WinAPIDiag.au3>) |Shows the last error code and message , [$sText = '' [, $bAbort = False [, $iLanguage = 0]]])
Function _WinAPI_ShowMsg(Requires: #include <WinAPI.au3>) |Displays an "Information" message box , $sText)
Function _WinAPI_ShowOwnedPopups(Requires: #include <WinAPISys.au3>) |Shows or hides all pop-up windows owned by the specified window , $hWnd, $bShow)
Function _WinAPI_ShowWindow(Requires: #include <WinAPI.au3>) |Sets the specified window's show state , $hWnd [, $iCmdShow = 5])
Function _WinAPI_ShutdownBlockReasonCreate(Requires: #include <WinAPISys.au3>) |Indicates that the system cannot be shut down and sets a reason string to be displayed to the user if system shutdown is initiated , $hWnd, $sText)
Function _WinAPI_ShutdownBlockReasonDestroy(Requires: #include <WinAPISys.au3>) |Indicates that the system can be shut down and frees the reason string , $hWnd)
Function _WinAPI_ShutdownBlockReasonQuery() |Retrieves the reason string set by the _WinAPI_ShutdownBlockReasonCreate function (Requires: #include <WinAPISys.au3>), $hWnd)
Function _WinAPI_SizeOfResource(Requires: #include <WinAPIRes.au3>) |Returns the size, in bytes, of the specified resource , $hInstance, $hResource)
Function _WinAPI_StretchBlt(Requires: #include <WinAPIGdi.au3>) |Copies a bitmap from a source rectangle into a destination rectangle, stretching or compressing the bitmap to fit the dimensions of the destination rectangle , $hDestDC, $iXDest, $iYDest, $iWidthDest, $iHeightDest, $hSrcDC, $iXSrc, $iYSrc, $iWidthSrc, $iHeightSrc, $iRop)
Function _WinAPI_StretchDIBits(Requires: #include <WinAPIGdi.au3>) |Copies the color data for a rectangle of pixels in a DIB, JPEG, or PNG image to the specified destination rectangle, stretching or compressing the rows and columns by using the specified raster operation , $hDestDC, $iXDest, $iYDest, $iWidthDest, $iHeightDest, $iXSrc, $iYSrc, $iWidthSrc, $iHeightSrc, $tBITMAPINFO, $iUsage, $pBits, $iRop)
Function _WinAPI_StrFormatByteSize(Requires: #include <WinAPIMisc.au3>) |Converts a numeric value into a string that represents the number expressed as a size value in bytes, kilobytes, megabytes, or gigabytes , $iSize)
Function _WinAPI_StrFormatByteSizeEx(Requires: #include <WinAPIMisc.au3>) |Converts a numeric value into a string that represents the number expressed as separated groups of digits to the left of the decimal , $iSize)
Function _WinAPI_StrFormatKBSize(Requires: #include <WinAPIMisc.au3>) |Converts a numeric value into a string that represents the number expressed as a size value in kilobytes , $iSize)
Function _WinAPI_StrFromTimeInterval(Requires: #include <WinAPIMisc.au3>) |Converts a time interval to a string , $iTime [, $iDigits = 7])
Function _WinAPI_StringFromGUID(Requires: #include <WinAPI.au3>) |Converts a binary GUID to string form , $tGUID)
Function _WinAPI_StringLenA(Requires: #include <WinAPI.au3>) |Calculates the size of ANSI string , Const ByRef $tString)
Function _WinAPI_StringLenW(Requires: #include <WinAPI.au3>) |Calculates the size of wide string , Const ByRef $tString)
Function _WinAPI_StrLen(Requires: #include <WinAPIMisc.au3>) |Returns the length of the specified string , $pString [, $bUnicode = True])
Function _WinAPI_StrokeAndFillPath(Requires: #include <WinAPIGdi.au3>) |Closes any open figures in a path, strokes the outline of the path, and fills its interior , $hDC)
Function _WinAPI_StrokePath(Requires: #include <WinAPIGdi.au3>) |Renders the specified path by using the current pen , $hDC)
Function _WinAPI_StructToArray(Requires: #include <WinAPIMisc.au3>) |Converts the structure to the array of strings , $tStruct [, $iItems = 0])
Function _WinAPI_SubLangId(Requires: #include <WinAPI.au3>) |Extract sublanguage id from a language id , $iLngID)
Function _WinAPI_SubtractRect(Requires: #include <WinAPIGdi.au3>) |Determines the coordinates of a rectangle formed by subtracting one rectangle from another , $tRECT1, $tRECT2)
Function _WinAPI_SwapDWord(Requires: #include <WinAPIMisc.au3>) |Converts a ULONG from little-endian to big-endian, and vice versa , $iValue)
Function _WinAPI_SwapQWord(Requires: #include <WinAPIMisc.au3>) |Converts a ULONGLONG from little-endian to big-endian, and vice versa , $iValue)
Function _WinAPI_SwapWord(Requires: #include <WinAPIMisc.au3>) |Converts a USHORT from little-endian to big-endian, and vice versa , $iValue)
Function _WinAPI_SwitchColor(Requires: #include <WinAPIGdi.au3>) |Converts a color from BGR to RGB and vice versa , $iColor)
Function _WinAPI_SwitchDesktop(Requires: #include <WinAPISys.au3>) |Makes the specified desktop visible and activates it , $hDesktop)
Function _WinAPI_SwitchToThisWindow(Requires: #include <WinAPISys.au3>) |Switches the focus to a specified window and bring it to the foreground , $hWnd [, $bAltTab = False])
Function _WinAPI_SystemParametersInfo(Requires: #include <WinAPI.au3>) |Retrieves or sets the value of one of the system-wide parameters , $iAction [, $iParam = 0 [, $vParam = 0 [, $iWinIni = 0]]])
Function _WinAPI_TabbedTextOut(Requires: #include <WinAPIGdi.au3>) |Writes a character string at a specified location and expanding tabs to the specified tab-stop positions , $hDC, $iX, $iY, $sText [, $aTab = 0 [, $iStart = 0 [, $iEnd = -1 [, $iOrigin = 0]]]])
Function _WinAPI_TerminateJobObject(Requires: #include <WinAPIProc.au3>) |Terminates all processes currently associated with the job , $hJob [, $iExitCode = 0])
Function _WinAPI_TerminateProcess(Requires: #include <WinAPIProc.au3>) |Terminates the specified process and all of its threads , $hProcess [, $iExitCode = 0])
Function _WinAPI_TextOut(Requires: #include <WinAPIGdi.au3>) |Writes a string at the specified location, using the currently selected font, background color, and text color , $hDC, $iX, $iY, $sText)
Function _WinAPI_TileWindows(Requires: #include <WinAPISys.au3>) |Tiles the specified child windows of the specified parent window , $aWnds [, $tRECT = 0 [, $hParent = 0 [, $iFlags = 0 [, $iStart = 0 [, $iEnd = -1]]]]])
Function _WinAPI_TrackMouseEvent(Requires: #include <WinAPISys.au3>) |Posts messages when the mouse pointer leaves a window or hovers over a window for a specified amount of time , $hWnd, $iFlags [, $iTime = -1])
Function _WinAPI_TransparentBlt(Requires: #include <WinAPIGdi.au3>) |Performs a bit-block transfer of the color data corresponding to a rectangle of pixels , $hDestDC, $iXDest, $iYDest, $iWidthDest, $iHeightDest, $hSrcDC, $iXSrc, $iYSrc, $iWidthSrc, $iHeightSrc, $iRGB)
Function _WinAPI_TwipsPerPixelX(Requires: #include <WinAPI.au3>) |Returns the width of a pixel, in twips 
Function _WinAPI_TwipsPerPixelY(Requires: #include <WinAPI.au3>) |Returns the height of a pixel, in twips 
Function _WinAPI_UnhookWindowsHookEx(Requires: #include <WinAPI.au3>) |Removes a hook procedure installed in a hook chain by the _WinAPI_SetWindowsHookEx function , $hHook)
Function _WinAPI_UnhookWinEvent(Requires: #include <WinAPISys.au3>) |Removes an event hook function , $hEventHook)
Function _WinAPI_UnionRect(Requires: #include <WinAPIGdi.au3>) |Creates the union of two rectangles , $tRECT1, $tRECT2)
Function _WinAPI_UnionStruct(Requires: #include <WinAPIMisc.au3>) |Creates the structure of two structures , $tStruct1, $tStruct2 [, $sStruct = ''])
Function _WinAPI_UniqueHardwareID(ID) |Generates a unique hardware identifier for local computer (Requires: #include <WinAPIDiag.au3>), [$iFlags = 0])
Function _WinAPI_UnloadKeyboardLayout(Requires: #include <WinAPISys.au3>) |Unloads an input locale identifier , $hLocale)
Function _WinAPI_UnlockFile(Requires: #include <WinAPIFiles.au3>) |Unlocks a region in an open file , $hFile, $iOffset, $iLength)
Function _WinAPI_UnmapViewOfFile(Requires: #include <WinAPIFiles.au3>) |Unmaps a mapped view of a file from the calling process's address space , $pAddress)
Function _WinAPI_UnregisterApplicationRestart(Requires: #include <WinAPIDiag.au3>) |Removes the active instance of an application from the restart list 
Function _WinAPI_UnregisterClass(Requires: #include <WinAPISys.au3>) |Unregisters a window class, freeing the memory required for the class , $sClass [, $hInstance = 0])
Function _WinAPI_UnregisterHotKey(Requires: #include <WinAPISys.au3>) |Frees a hot key previously registered by the calling thread , $hWnd, $iID)
Function _WinAPI_UnregisterPowerSettingNotification(Requires: #include <WinAPISys.au3>) |Unregisters the power setting notification , $hNotify)
Function _WinAPI_UpdateLayeredWindow(Requires: #include <WinAPI.au3>) |Updates the position, size, shape, content, and translucency of a layered window , $hWnd, $hDestDC, $tPTDest, $tSize, $hSrcDC, $tPTSrce, $iRGB, $tBlend, $iFlags)
Function _WinAPI_UpdateLayeredWindowEx(Requires: #include <WinAPISys.au3>) |Updates a bitmap translucency of a layered window , $hWnd, $iX, $iY, $hBitmap [, $iOpacity = 255 [, $bDelete = False]])
Function _WinAPI_UpdateLayeredWindowIndirect(Requires: #include <WinAPISys.au3>) |Updates the position, size, shape, content, and translucency of a layered window , $hWnd, $tULWINFO)
Function _WinAPI_UpdateResource(PE) |Adds, deletes, or replaces a resource in a portable executable file (Requires: #include <WinAPIRes.au3>), $hUpdate, $sType, $sName, $iLanguage, $pData, $iSize)
Function _WinAPI_UpdateWindow(Requires: #include <WinAPI.au3>) |Updates the client area of a window by sending a WM_PAINT message to the window , $hWnd)
Function _WinAPI_UrlApplyScheme(Requires: #include <WinAPIShPath.au3>) |Determines a scheme for a specified URL string, and returns a string with an appropriate prefix , $sUrl [, $iFlags = 1])
Function _WinAPI_UrlCanonicalize(Requires: #include <WinAPIShPath.au3>) |Converts a URL string into canonical form , $sUrl, $iFlags)
Function _WinAPI_UrlCombine(Requires: #include <WinAPIShPath.au3>) |Combines the base an relative URLs in canonical form , $sUrl, $sPart [, $iFlags = 0])
Function _WinAPI_UrlCompare(Requires: #include <WinAPIShPath.au3>) |Makes a case-sensitive comparison of two URL strings , $sUrl1, $sUrl2 [, $bIgnoreSlash = False])
Function _WinAPI_UrlCreateFromPath(Requires: #include <WinAPIShPath.au3>) |Converts a Microsoft MS-DOS path to a canonicalized URL , $sFilePath)
Function _WinAPI_UrlFixup(Requires: #include <WinAPIShPath.au3>) |Attempts to correct a URL whose protocol identifier is incorrect , $sUrl)
Function _WinAPI_UrlGetPart(Requires: #include <WinAPIShPath.au3>) |Retrieves a specified part from the URL , $sUrl, $iPart)
Function _WinAPI_UrlHash(Requires: #include <WinAPIShPath.au3>) |Hashes a URL string , $sUrl [, $iLength = 32])
Function _WinAPI_UrlIs(Requires: #include <WinAPIShPath.au3>) |Tests whether or not a URL is a specified type , $sUrl [, $iType = 0])
Function _WinAPI_UserHandleGrantAccess(Requires: #include <WinAPIProc.au3>) |Grants or denies access to a handle to a User object to a job that has a user-interface restriction , $hObject, $hJob, $bGrant)
Function _WinAPI_ValidateRect(Requires: #include <WinAPIGdi.au3>) |Removes a rectangle from the current update region of the specified window , $hWnd [, $tRECT = 0])
Function _WinAPI_ValidateRgn(Requires: #include <WinAPIGdi.au3>) |Removes a region from the current update region of the specified window , $hWnd [, $hRgn = 0])
Function _WinAPI_VerQueryRoot(Requires: #include <WinAPIRes.au3>) |Retrieves the fixed version information from the specified version-information resource , $pData)
Function _WinAPI_VerQueryValue(strings) |Retrieves the non-fixed version information from the specified version-information resource (Requires: #include <WinAPIRes.au3>), $pData [, $sValues = ''])
Function _WinAPI_VerQueryValueEx(Requires: #include <WinAPIRes.au3>) |Retrieves the text information from the version-information resource of the specified binary module , $hModule [, $sValues = '' [, $iLanguage = 0x0400]])
Function _WinAPI_WaitForInputIdle(Requires: #include <WinAPI.au3>) |Waits until a process is waiting for user input with no input pending, or a time out , $hProcess [, $iTimeout = -1])
Function _WinAPI_WaitForMultipleObjects(Requires: #include <WinAPI.au3>) |Waits until one or all of the specified objects are in the signaled state , $iCount, $paHandles [, $bWaitAll = False [, $iTimeout = -1]])
Function _WinAPI_WaitForSingleObject(Requires: #include <WinAPI.au3>) |Waits until the specified object is in the signaled state , $hHandle [, $iTimeout = -1])
Function _WinAPI_WideCharToMultiByte(Requires: #include <WinAPI.au3>) |Converts a Unicode string to a multibyte string , $vUnicode [, $iCodePage = 0 [, $bRetString = True]])
Function _WinAPI_WidenPath(Requires: #include <WinAPIGdi.au3>) |Redefines the current path as the area that would be painted if the path were stroked , $hDC)
Function _WinAPI_WindowFromDC(DC) |Retrieves a handle to the window associated with the specified display device context (Requires: #include <WinAPIGdi.au3>), $hDC)
Function _WinAPI_WindowFromPoint(Requires: #include <WinAPI.au3>) |Retrieves the handle of the window that contains the specified point , ByRef $tPoint)
Function _WinAPI_WordToShort(Requires: #include <WinAPIMisc.au3>) |Converts a value of type WORD to a value of type SHORT , $iValue)
Function _WinAPI_Wow64EnableWow64FsRedirection(Requires: #include <WinAPIFiles.au3>) |Enables or disables file system redirection for the calling thread , $bEnable)
Function _WinAPI_WriteConsole(Requires: #include <WinAPI.au3>) |Writes a character string to a console screen buffer , $hConsole, $sText)
Function _WinAPI_WriteFile(Requires: #include <WinAPI.au3>) |Writes data to a file at the position specified by the file pointer , $hFile, $pBuffer, $iToWrite, ByRef $iWritten [, $tOverlapped = 0])
Function _WinAPI_WriteProcessMemory(Requires: #include <WinAPI.au3>) |Writes memory in a specified process , $hProcess, $pBaseAddress, $pBuffer, $iSize, ByRef $iWritten [, $sBuffer = "ptr"])
Function _WinAPI_ZeroMemory(Requires: #include <WinAPISys.au3>) |Fills a block of memory with zeros , $pMemory, $iLength)
Function _WinNet_AddConnection(Requires: #include <WinNet.au3>) |Connects a local device to a network resource , $sLocalName, $sRemoteName [, $sPassword = 0])
Function _WinNet_AddConnection2(Requires: #include <WinNet.au3>) |Connects a local device to a network resource , $sLocalName, $sRemoteName [, $sUserName = 0 [, $sPassword = 0 [, $iType = 1 [, $iOptions = 1]]]])
Function _WinNet_AddConnection3(Requires: #include <WinNet.au3>) |Connects a local device to a network resource , $hWnd, $sLocalName, $sRemoteName [, $sUserName = 0 [, $sPassword = 0 [, $iType = 1 [, $iOptions = 1]]]])
Function _WinNet_CancelConnection(Requires: #include <WinNet.au3>) |Cancels an existing network connection , $sName [, $bForce = True])
Function _WinNet_CancelConnection2(Requires: #include <WinNet.au3>) |Cancels an existing network connection , $sName [, $bUpdate = True [, $bForce = True]])
Function _WinNet_CloseEnum() |Ends a network resource enumeration started by a call to _WinNet_OpenEnum (Requires: #include <WinNet.au3>), $hEnum)
Function _WinNet_ConnectionDialog(Requires: #include <WinNet.au3>) |Starts a general browsing dialog box for connecting to network resources , $hWnd)
Function _WinNet_ConnectionDialog1(Requires: #include <WinNet.au3>) |Starts a general browsing dialog box for connecting to network resources , $hWnd [, $sRemoteName = "" [, $iFlags = 2]])
Function _WinNet_DisconnectDialog(Requires: #include <WinNet.au3>) |Starts a general browsing dialog box for disconnecting from network resources , $hWnd)
Function _WinNet_DisconnectDialog1(Requires: #include <WinNet.au3>) |Starts a general browsing dialog box for disconnecting from network resources , $hWnd, $sLocalName [, $sRemoteName = "" [, $iFlags = 1]])
Function _WinNet_EnumResource(Requires: #include <WinNet.au3>) |Continues an enumeration of network resources , $hEnum, ByRef $iCount, $pBuffer, ByRef $iBufSize)
Function _WinNet_GetConnection(Requires: #include <WinNet.au3>) |Retrieves the name of the network resource associated with a local device , $sLocalName)
Function _WinNet_GetConnectionPerformance(Requires: #include <WinNet.au3>) |Returns information about the performance of a network connection resource , $sLocalName, $sRemoteName)
Function _WinNet_GetLastError(Requires: #include <WinNet.au3>) |Retrieves the most recent extended error , ByRef $iError, ByRef $sError, ByRef $sName)
Function _WinNet_GetNetworkInformation(Requires: #include <WinNet.au3>) |Returns extended information about a specific network provider , $sName)
Function _WinNet_GetProviderName(Requires: #include <WinNet.au3>) |Obtains the provider name for a specific type of network , $iType)
Function _WinNet_GetResourceInformation(Requires: #include <WinNet.au3>) |Identifies the network provider that owns the resource , $sRemoteName [, $sProvider = "" [, $iType = 0]])
Function _WinNet_GetResourceParent(Requires: #include <WinNet.au3>) |Returns the parent of a network resource in the network browse hierarchy , $sRemoteName, $sProvider [, $iType = 0])
Function _WinNet_GetUniversalName(Requires: #include <WinNet.au3>) |Converts drived based path to universal form , $sLocalPath)
Function _WinNet_GetUser(Requires: #include <WinNet.au3>) |Retrieves the default user name, or the user name used to establish a connection , $sName)
Function _WinNet_OpenEnum(Requires: #include <WinNet.au3>) |Starts an enumeration of network resources or existing connections , $iScope, $iType, $iUsage, $tResource, ByRef $hEnum)
Function _WinNet_RestoreConnection(Requires: #include <WinNet.au3>) |Restores the connection to a network resource , [$sDevice = "" [, $hWnd = 0 [, $bUseUI = True]]])
Function _WinNet_UseConnection(Requires: #include <WinNet.au3>) |Connects a local device to a network resource , $hWnd, $sLocalName, $sRemoteName [, $sUserName = 0 [, $sPassword = 0 [, $iType = 1 [, $iOptions = 1]]]])
Function _Word_Create(Requires: #include <Word.au3>) |Connects to an existing Word instance or creates a new Word application object , [$bVisible = True [, $bForceNew = False]])
Function _Word_DocAdd(Requires: #include <Word.au3>) |Adds a new or empty document to the specified Word application , $oAppl [, $iDocumentType = $WdNewBlankDocument [, $sDocumentTemplate = "" [, $bNewTemplate = False]]])
Function _Word_DocAttach(Requires: #include <Word.au3>) |Attaches to the first instance of a Word document where the search string matches based on the selected mode , $oAppl, $sString [, $sMode = "FilePath" [, $iCase = 0]])
Function _Word_DocClose(Requires: #include <Word.au3>) |Closes the specified Word document , $oDoc [, $iSaveChanges = $WdDoNotSaveChanges [, $iOriginalFormat = $WdOriginalDocumentFormat]])
Function _Word_DocExport(Requires: #include <Word.au3>) |Exports the document or a range as PDF or XPS , $oDoc, $sFileName [, $iFormat = $WdExportFormatPDF [, $iRange = $WdExportAllDocument [, $iFrom = Default [, $iTo = Default [, $bOpenAfterExport = False [, $bIncludeProperties = True [, $iCreateBookmarks = Default [, $bUseISO19005 = False]]]]]]]])
Function _Word_DocFind(Requires: #include <Word.au3>) |Runs or repeats the specified find operation , $oDoc [, $sFindText = "" [, $vSearchRange = 0 [, $oFindRange = Default [, $bForward = True [, $bMatchCase = False [, $bMatchWholeWord = False [, $bMatchWildcards = False [, $bMatchSoundsLike = False [, $bMatchAllWordForms = False [, $bFormat = False]]]]]]]]]])
Function _Word_DocFindReplace(Requires: #include <Word.au3>) |Runs the specified find and replace operation , $oDoc [, $sFindText = "" [, $sReplaceWith = "" [, $iReplace = $WdReplaceAll [, $vSearchRange = 0 [, $bMatchCase = False [, $bMatchWholeWord = False [, $bMatchWildcards = False [, $bMatchSoundsLike = False [, $bMatchAllWordForms = False [, $bForward = True [, $iWrap = $WdFindContinue [, $bFormat = False]]]]]]]]]]]])
Function _Word_DocGet(Requires: #include <Word.au3>) |Returns a collection object containing all documents or an object for a single document , $oAppl [, $vIndex = -1])
Function _Word_DocLinkAdd(Requires: #include <Word.au3>) |Adds a hyperlink to the document , $oDoc [, $oAnchor = Default [, $sAddress = Default [, $sSubAddress = Default [, $sScreenTip = Default [, $sTextToDisplay = Default [, $sTarget = Default]]]]]])
Function _Word_DocLinkGet(Requires: #include <Word.au3>) |Returns a collection object containing all links in the document or a single link object , $oDoc [, $iIndex = Default])
Function _Word_DocOpen(Requires: #include <Word.au3>) |Opens a Word document , $oAppl, $sFilePath [, $bConfirmConversions = False [, $iFormat = $WdOpenFormatAuto [, $bReadOnly = False [, $bRevert = False [, $bAddToRecentFiles = False [, $sOpenPassword = "" [, $sWritePassword = ""]]]]]]])
Function _Word_DocPictureAdd(Requires: #include <Word.au3>) |Adds a picture to the document , $oDoc, $sFilePath [, $bLinkToFile = False [, $bSaveWithDocument = False [, $oRange = 0]]])
Function _Word_DocPrint(Requires: #include <Word.au3>) |Prints all or parts of the specified document , $oDoc [, $bBackground = False [, $iCopies = 1 [, $iOrientation = -1 [, $bCollate = True [, $sPrinter = "" [, $iRange = $WdPrintAllDocument [, $vFrom = 0 [, $vTo = 0 [, $sPages = "" [, $iPageType = $WdPrintAllPages [, $iItem = $WdPrintDocumentContent]]]]]]]]]]])
Function _Word_DocRangeSet(Requires: #include <Word.au3>) |Sets or modifies a range in a document , $oDoc, $vRange [, $iStartUnit = Default [, $iStartCount = Default [, $iEndUnit = Default [, $iEndCount = Default]]]])
Function _Word_DocSave(Requires: #include <Word.au3>) |Saves the specified Word document , $oDoc)
Function _Word_DocSaveAs(Requires: #include <Word.au3>) |Saves the specified Word document with a new name or format , $oDoc [, $sFileName = Default [, $iFileFormat = $WdFormatDocument [, $bReadOnlyRecommended = False [, $bAddToRecentFiles = True [, $sPassword = "" [, $sWritePassword = ""]]]]]])
Function _Word_DocTableRead(Requires: #include <Word.au3>) |Reads a Word table and returns the content as a two-dimensional array , $oDoc, $vTable [, $iIndexBase = Default [, $sDelimiter = Default]])
Function _Word_DocTableWrite(Requires: #include <Word.au3>) |Writes a one or two dimensional array to a Word table , $oRange, ByRef $aArray [, $iIndexBase = Default [, $sDelimiter = Default]])
Function _Word_Quit(Requires: #include <Word.au3>) |Closes all documents, the Word application and removes the object reference to it 
